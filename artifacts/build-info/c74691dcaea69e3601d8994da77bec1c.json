{
	"id": "c74691dcaea69e3601d8994da77bec1c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"clickcoin.sol": {
				"content": "//1. License\r\n// SPDX-License-Identifier: LGPL-3.0-only\r\n\r\n// 2. Version\r\npragma solidity 0.8.24;\r\n\r\n//3. Imports\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n//4. Contract\r\n\r\ncontract ClickCoin is ERC20,Ownable{\r\n\r\n    //Variables\r\n    uint16 public burnRate; // % of burnrate in 10.000 base, e.g 10 = 0.1%, 100 = 1%\r\n    //Constructor\r\n    constructor(string memory name_, string memory symbol_, uint16 _burnRate) ERC20(name_,symbol_) Ownable(msg.sender){\r\n        burnRate = _burnRate;\r\n        _mint(msg.sender,1000000 * 1e18); // 1.000.000 tokens to dev\r\n        \r\n    }\r\n\r\n    //Modifiers\r\n\r\n    modifier maxBurn(uint16 _burnRate){\r\n        if (_burnRate > 5000) revert(\"Burn rate mas be less than 50%\");\r\n        _;\r\n    }\r\n\r\n    modifier minimumTransfer(uint256 _value){\r\n        if((_value * burnRate) / 10000 >= _value) revert(\"Value does not cover fees. Enter a higher amount\");\r\n        if((_value * burnRate) / 10000 < 1) revert(\"Value cannot cover any fees. Enter a higher amount\");\r\n\r\n        _;\r\n    }\r\n\r\n    //Events\r\n    //indexed to find easily in the logs\r\n    event Mint(address indexed addTo, uint256 amount);\r\n    event Burn(address indexed removeFrom, uint256 amount);\r\n\r\n    // External Functions\r\n    // Only Owner can mint new tokens, includes modifier from import\r\n    function mint(uint256 amount) public onlyOwner {\r\n        _mint(msg.sender, amount);\r\n    }\r\n\r\n    // Only owner can burn tokens directly, includes modifier from import\r\n    function burn(uint256 amount) public onlyOwner {\r\n        _burn(msg.sender, amount);\r\n        emit Burn(msg.sender, amount);\r\n    }\r\n    \r\n    // Only Owner can redefine burn rate\r\n    function setBurnRate(uint16 _burnRate) external onlyOwner maxBurn(_burnRate) {\r\n        burnRate = _burnRate;\r\n    }\r\n\r\n    // Transfer and burn fees\r\n    function transfer(address to, uint256 value) public override  minimumTransfer(value) returns (bool) {\r\n        uint256 burnAmount = (value * burnRate) / 10000;\r\n        uint256 sendAmount = value - burnAmount;\r\n        \r\n        super._transfer(msg.sender,to, sendAmount);\r\n        if (burnAmount > 0) {\r\n            _burn(msg.sender,burnAmount);\r\n            emit Burn(msg.sender, burnAmount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // Transfer and burn fees with aproval\r\n    function transferFrom(address from, address to, uint256 value) public override  minimumTransfer(value) returns (bool) {\r\n        uint256 burnAmount = (value * burnRate) / 10000;\r\n        uint256 sendAmount = value - burnAmount;\r\n\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        super._transfer(from, to, sendAmount);\r\n\r\n        if (burnAmount > 0) {\r\n            _burn(from,burnAmount);\r\n            emit Burn(from, burnAmount);\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"clickcoin.sol": {
				"ClickCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint16",
									"name": "_burnRate",
									"type": "uint16"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "removeFrom",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "addTo",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnRate",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_burnRate",
									"type": "uint16"
								}
							],
							"name": "setBurnRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"clickcoin.sol\":245:2893  contract ClickCoin is ERC20,Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"clickcoin.sol\":411:644  constructor(string memory name_, string memory symbol_, uint16 _burnRate) ERC20(name_,symbol_) Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"clickcoin.sol\":514:524  msg.sender */\n  caller\n    /* \"clickcoin.sol\":491:496  name_ */\n  dup4\n    /* \"clickcoin.sol\":497:504  symbol_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"clickcoin.sol\":547:556  _burnRate */\n  dup1\n    /* \"clickcoin.sol\":536:544  burnRate */\n  0x05\n  0x14\n    /* \"clickcoin.sol\":536:556  burnRate = _burnRate */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"clickcoin.sol\":567:599  _mint(msg.sender,1000000 * 1e18) */\n  tag_18\n    /* \"clickcoin.sol\":573:583  msg.sender */\n  caller\n    /* \"clickcoin.sol\":584:598  1000000 * 1e18 */\n  0xd3c21bcecceda1000000\n    /* \"clickcoin.sol\":567:572  _mint */\n  shl(0x20, tag_19)\n    /* \"clickcoin.sol\":567:599  _mint(msg.sender,1000000 * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"clickcoin.sol\":411:644  constructor(string memory name_, string memory symbol_, uint16 _burnRate) ERC20(name_,symbol_) Ownable(msg.sender){... */\n  pop\n  pop\n  pop\n    /* \"clickcoin.sol\":245:2893  contract ClickCoin is ERC20,Ownable{... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_39:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_41:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_42:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_43:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_44:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_45:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_46:\n    /* \"#utility.yul\":957:984   */\n  tag_88\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_44\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_90\n  tag_45\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1030:1118   */\ntag_89:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_47:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_92\n  tag_39\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_93\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_46\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_48:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_96\n  tag_45\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1434:1490   */\ntag_95:\n    /* \"#utility.yul\":1508:1537   */\n  tag_97\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_44\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_49:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_99:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_50:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_103\n    /* \"#utility.yul\":1992:2041   */\n  tag_104\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_48\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1976:2042   */\n  tag_47\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_106\n  tag_43\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2117:2229   */\ntag_105:\n    /* \"#utility.yul\":2238:2290   */\n  tag_107\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_49\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_51:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_110\n  tag_42\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2399:2521   */\ntag_109:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_111\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_50\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2766   */\ntag_52:\n    /* \"#utility.yul\":2713:2720   */\n  0x00\n    /* \"#utility.yul\":2753:2759   */\n  0xffff\n    /* \"#utility.yul\":2746:2751   */\n  dup3\n    /* \"#utility.yul\":2742:2760   */\n  and\n    /* \"#utility.yul\":2731:2760   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2766   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2772:2892   */\ntag_53:\n    /* \"#utility.yul\":2844:2867   */\n  tag_114\n    /* \"#utility.yul\":2861:2866   */\n  dup2\n    /* \"#utility.yul\":2844:2867   */\n  tag_52\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2837:2842   */\n  dup2\n    /* \"#utility.yul\":2834:2868   */\n  eq\n    /* \"#utility.yul\":2824:2886   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":2882:2883   */\n  0x00\n    /* \"#utility.yul\":2879:2880   */\n  dup1\n    /* \"#utility.yul\":2872:2884   */\n  revert\n    /* \"#utility.yul\":2824:2886   */\ntag_115:\n    /* \"#utility.yul\":2772:2892   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2898:3039   */\ntag_54:\n    /* \"#utility.yul\":2954:2959   */\n  0x00\n    /* \"#utility.yul\":2985:2991   */\n  dup2\n    /* \"#utility.yul\":2979:2992   */\n  mload\n    /* \"#utility.yul\":2970:2992   */\n  swap1\n  pop\n    /* \"#utility.yul\":3001:3033   */\n  tag_117\n    /* \"#utility.yul\":3027:3032   */\n  dup2\n    /* \"#utility.yul\":3001:3033   */\n  tag_53\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2898:3039   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3045:4052   */\ntag_3:\n    /* \"#utility.yul\":3152:3158   */\n  0x00\n    /* \"#utility.yul\":3160:3166   */\n  dup1\n    /* \"#utility.yul\":3168:3174   */\n  0x00\n    /* \"#utility.yul\":3217:3219   */\n  0x60\n    /* \"#utility.yul\":3205:3214   */\n  dup5\n    /* \"#utility.yul\":3196:3203   */\n  dup7\n    /* \"#utility.yul\":3192:3215   */\n  sub\n    /* \"#utility.yul\":3188:3220   */\n  slt\n    /* \"#utility.yul\":3185:3304   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":3223:3302   */\n  tag_120\n  tag_40\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3185:3304   */\ntag_119:\n    /* \"#utility.yul\":3364:3365   */\n  0x00\n    /* \"#utility.yul\":3353:3362   */\n  dup5\n    /* \"#utility.yul\":3349:3366   */\n  add\n    /* \"#utility.yul\":3343:3367   */\n  mload\n    /* \"#utility.yul\":3394:3412   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3386:3392   */\n  dup2\n    /* \"#utility.yul\":3383:3413   */\n  gt\n    /* \"#utility.yul\":3380:3497   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":3416:3495   */\n  tag_122\n  tag_41\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3380:3497   */\ntag_121:\n    /* \"#utility.yul\":3521:3595   */\n  tag_123\n    /* \"#utility.yul\":3587:3594   */\n  dup7\n    /* \"#utility.yul\":3578:3584   */\n  dup3\n    /* \"#utility.yul\":3567:3576   */\n  dup8\n    /* \"#utility.yul\":3563:3585   */\n  add\n    /* \"#utility.yul\":3521:3595   */\n  tag_51\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3511:3595   */\n  swap4\n  pop\n    /* \"#utility.yul\":3314:3605   */\n  pop\n    /* \"#utility.yul\":3665:3667   */\n  0x20\n    /* \"#utility.yul\":3654:3663   */\n  dup5\n    /* \"#utility.yul\":3650:3668   */\n  add\n    /* \"#utility.yul\":3644:3669   */\n  mload\n    /* \"#utility.yul\":3696:3714   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3688:3694   */\n  dup2\n    /* \"#utility.yul\":3685:3715   */\n  gt\n    /* \"#utility.yul\":3682:3799   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":3718:3797   */\n  tag_125\n  tag_41\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3682:3799   */\ntag_124:\n    /* \"#utility.yul\":3823:3897   */\n  tag_126\n    /* \"#utility.yul\":3889:3896   */\n  dup7\n    /* \"#utility.yul\":3880:3886   */\n  dup3\n    /* \"#utility.yul\":3869:3878   */\n  dup8\n    /* \"#utility.yul\":3865:3887   */\n  add\n    /* \"#utility.yul\":3823:3897   */\n  tag_51\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3813:3897   */\n  swap3\n  pop\n    /* \"#utility.yul\":3615:3907   */\n  pop\n    /* \"#utility.yul\":3946:3948   */\n  0x40\n    /* \"#utility.yul\":3972:4035   */\n  tag_127\n    /* \"#utility.yul\":4027:4034   */\n  dup7\n    /* \"#utility.yul\":4018:4024   */\n  dup3\n    /* \"#utility.yul\":4007:4016   */\n  dup8\n    /* \"#utility.yul\":4003:4025   */\n  add\n    /* \"#utility.yul\":3972:4035   */\n  tag_54\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3962:4035   */\n  swap2\n  pop\n    /* \"#utility.yul\":3917:4045   */\n  pop\n    /* \"#utility.yul\":3045:4052   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4058:4157   */\ntag_55:\n    /* \"#utility.yul\":4110:4116   */\n  0x00\n    /* \"#utility.yul\":4144:4149   */\n  dup2\n    /* \"#utility.yul\":4138:4150   */\n  mload\n    /* \"#utility.yul\":4128:4150   */\n  swap1\n  pop\n    /* \"#utility.yul\":4058:4157   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4163:4343   */\ntag_56:\n    /* \"#utility.yul\":4211:4288   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4208:4209   */\n  0x00\n    /* \"#utility.yul\":4201:4289   */\n  mstore\n    /* \"#utility.yul\":4308:4312   */\n  0x22\n    /* \"#utility.yul\":4305:4306   */\n  0x04\n    /* \"#utility.yul\":4298:4313   */\n  mstore\n    /* \"#utility.yul\":4332:4336   */\n  0x24\n    /* \"#utility.yul\":4329:4330   */\n  0x00\n    /* \"#utility.yul\":4322:4337   */\n  revert\n    /* \"#utility.yul\":4349:4669   */\ntag_57:\n    /* \"#utility.yul\":4393:4399   */\n  0x00\n    /* \"#utility.yul\":4430:4431   */\n  0x02\n    /* \"#utility.yul\":4424:4428   */\n  dup3\n    /* \"#utility.yul\":4420:4432   */\n  div\n    /* \"#utility.yul\":4410:4432   */\n  swap1\n  pop\n    /* \"#utility.yul\":4477:4478   */\n  0x01\n    /* \"#utility.yul\":4471:4475   */\n  dup3\n    /* \"#utility.yul\":4467:4479   */\n  and\n    /* \"#utility.yul\":4498:4516   */\n  dup1\n    /* \"#utility.yul\":4488:4569   */\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4554:4558   */\n  0x7f\n    /* \"#utility.yul\":4546:4552   */\n  dup3\n    /* \"#utility.yul\":4542:4559   */\n  and\n    /* \"#utility.yul\":4532:4559   */\n  swap2\n  pop\n    /* \"#utility.yul\":4488:4569   */\ntag_131:\n    /* \"#utility.yul\":4616:4618   */\n  0x20\n    /* \"#utility.yul\":4608:4614   */\n  dup3\n    /* \"#utility.yul\":4605:4619   */\n  lt\n    /* \"#utility.yul\":4585:4603   */\n  dup2\n    /* \"#utility.yul\":4582:4620   */\n  sub\n    /* \"#utility.yul\":4579:4663   */\n  tag_132\n  jumpi\n    /* \"#utility.yul\":4635:4653   */\n  tag_133\n  tag_56\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4579:4663   */\ntag_132:\n    /* \"#utility.yul\":4400:4669   */\n  pop\n    /* \"#utility.yul\":4349:4669   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4675:4816   */\ntag_58:\n    /* \"#utility.yul\":4724:4728   */\n  0x00\n    /* \"#utility.yul\":4747:4750   */\n  dup2\n    /* \"#utility.yul\":4739:4750   */\n  swap1\n  pop\n    /* \"#utility.yul\":4770:4773   */\n  dup2\n    /* \"#utility.yul\":4767:4768   */\n  0x00\n    /* \"#utility.yul\":4760:4774   */\n  mstore\n    /* \"#utility.yul\":4804:4808   */\n  0x20\n    /* \"#utility.yul\":4801:4802   */\n  0x00\n    /* \"#utility.yul\":4791:4809   */\n  keccak256\n    /* \"#utility.yul\":4783:4809   */\n  swap1\n  pop\n    /* \"#utility.yul\":4675:4816   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4822:4915   */\ntag_59:\n    /* \"#utility.yul\":4859:4865   */\n  0x00\n    /* \"#utility.yul\":4906:4908   */\n  0x20\n    /* \"#utility.yul\":4901:4903   */\n  0x1f\n    /* \"#utility.yul\":4894:4899   */\n  dup4\n    /* \"#utility.yul\":4890:4904   */\n  add\n    /* \"#utility.yul\":4886:4909   */\n  div\n    /* \"#utility.yul\":4876:4909   */\n  swap1\n  pop\n    /* \"#utility.yul\":4822:4915   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4921:5028   */\ntag_60:\n    /* \"#utility.yul\":4965:4973   */\n  0x00\n    /* \"#utility.yul\":5015:5020   */\n  dup3\n    /* \"#utility.yul\":5009:5013   */\n  dup3\n    /* \"#utility.yul\":5005:5021   */\n  shl\n    /* \"#utility.yul\":4984:5021   */\n  swap1\n  pop\n    /* \"#utility.yul\":4921:5028   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5034:5427   */\ntag_61:\n    /* \"#utility.yul\":5103:5109   */\n  0x00\n    /* \"#utility.yul\":5153:5154   */\n  0x08\n    /* \"#utility.yul\":5141:5151   */\n  dup4\n    /* \"#utility.yul\":5137:5155   */\n  mul\n    /* \"#utility.yul\":5176:5273   */\n  tag_138\n    /* \"#utility.yul\":5206:5272   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5195:5204   */\n  dup3\n    /* \"#utility.yul\":5176:5273   */\n  tag_60\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5294:5333   */\n  tag_139\n    /* \"#utility.yul\":5324:5332   */\n  dup7\n    /* \"#utility.yul\":5313:5322   */\n  dup4\n    /* \"#utility.yul\":5294:5333   */\n  tag_60\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5282:5333   */\n  swap6\n  pop\n    /* \"#utility.yul\":5366:5370   */\n  dup1\n    /* \"#utility.yul\":5362:5371   */\n  not\n    /* \"#utility.yul\":5355:5360   */\n  dup5\n    /* \"#utility.yul\":5351:5372   */\n  and\n    /* \"#utility.yul\":5342:5372   */\n  swap4\n  pop\n    /* \"#utility.yul\":5415:5419   */\n  dup1\n    /* \"#utility.yul\":5405:5413   */\n  dup7\n    /* \"#utility.yul\":5401:5420   */\n  and\n    /* \"#utility.yul\":5394:5399   */\n  dup5\n    /* \"#utility.yul\":5391:5421   */\n  or\n    /* \"#utility.yul\":5381:5421   */\n  swap3\n  pop\n    /* \"#utility.yul\":5110:5427   */\n  pop\n  pop\n    /* \"#utility.yul\":5034:5427   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5433:5510   */\ntag_62:\n    /* \"#utility.yul\":5470:5477   */\n  0x00\n    /* \"#utility.yul\":5499:5504   */\n  dup2\n    /* \"#utility.yul\":5488:5504   */\n  swap1\n  pop\n    /* \"#utility.yul\":5433:5510   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5516:5576   */\ntag_63:\n    /* \"#utility.yul\":5544:5547   */\n  0x00\n    /* \"#utility.yul\":5565:5570   */\n  dup2\n    /* \"#utility.yul\":5558:5570   */\n  swap1\n  pop\n    /* \"#utility.yul\":5516:5576   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5582:5724   */\ntag_64:\n    /* \"#utility.yul\":5632:5641   */\n  0x00\n    /* \"#utility.yul\":5665:5718   */\n  tag_143\n    /* \"#utility.yul\":5683:5717   */\n  tag_144\n    /* \"#utility.yul\":5692:5716   */\n  tag_145\n    /* \"#utility.yul\":5710:5715   */\n  dup5\n    /* \"#utility.yul\":5692:5716   */\n  tag_62\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5683:5717   */\n  tag_63\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5665:5718   */\n  tag_62\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5652:5718   */\n  swap1\n  pop\n    /* \"#utility.yul\":5582:5724   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5730:5805   */\ntag_65:\n    /* \"#utility.yul\":5773:5776   */\n  0x00\n    /* \"#utility.yul\":5794:5799   */\n  dup2\n    /* \"#utility.yul\":5787:5799   */\n  swap1\n  pop\n    /* \"#utility.yul\":5730:5805   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5811:6080   */\ntag_66:\n    /* \"#utility.yul\":5921:5960   */\n  tag_148\n    /* \"#utility.yul\":5952:5959   */\n  dup4\n    /* \"#utility.yul\":5921:5960   */\n  tag_64\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5982:6073   */\n  tag_149\n    /* \"#utility.yul\":6031:6072   */\n  tag_150\n    /* \"#utility.yul\":6055:6071   */\n  dup3\n    /* \"#utility.yul\":6031:6072   */\n  tag_65\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6023:6029   */\n  dup5\n    /* \"#utility.yul\":6016:6020   */\n  dup5\n    /* \"#utility.yul\":6010:6021   */\n  sload\n    /* \"#utility.yul\":5982:6073   */\n  tag_61\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5976:5980   */\n  dup3\n    /* \"#utility.yul\":5969:6074   */\n  sstore\n    /* \"#utility.yul\":5887:6080   */\n  pop\n    /* \"#utility.yul\":5811:6080   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6086:6159   */\ntag_67:\n    /* \"#utility.yul\":6131:6134   */\n  0x00\n    /* \"#utility.yul\":6086:6159   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6165:6354   */\ntag_68:\n    /* \"#utility.yul\":6242:6274   */\n  tag_153\n  tag_67\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6283:6348   */\n  tag_154\n    /* \"#utility.yul\":6341:6347   */\n  dup2\n    /* \"#utility.yul\":6333:6339   */\n  dup5\n    /* \"#utility.yul\":6327:6331   */\n  dup5\n    /* \"#utility.yul\":6283:6348   */\n  tag_66\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6218:6354   */\n  pop\n    /* \"#utility.yul\":6165:6354   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6360:6546   */\ntag_69:\n    /* \"#utility.yul\":6420:6540   */\ntag_156:\n    /* \"#utility.yul\":6437:6440   */\n  dup2\n    /* \"#utility.yul\":6430:6435   */\n  dup2\n    /* \"#utility.yul\":6427:6441   */\n  lt\n    /* \"#utility.yul\":6420:6540   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":6491:6530   */\n  tag_159\n    /* \"#utility.yul\":6528:6529   */\n  0x00\n    /* \"#utility.yul\":6521:6526   */\n  dup3\n    /* \"#utility.yul\":6491:6530   */\n  tag_68\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6464:6465   */\n  0x01\n    /* \"#utility.yul\":6457:6462   */\n  dup2\n    /* \"#utility.yul\":6453:6466   */\n  add\n    /* \"#utility.yul\":6444:6466   */\n  swap1\n  pop\n    /* \"#utility.yul\":6420:6540   */\n  jump(tag_156)\ntag_158:\n    /* \"#utility.yul\":6360:6546   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6552:7095   */\ntag_70:\n    /* \"#utility.yul\":6653:6655   */\n  0x1f\n    /* \"#utility.yul\":6648:6651   */\n  dup3\n    /* \"#utility.yul\":6645:6656   */\n  gt\n    /* \"#utility.yul\":6642:7088   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":6687:6725   */\n  tag_162\n    /* \"#utility.yul\":6719:6724   */\n  dup2\n    /* \"#utility.yul\":6687:6725   */\n  tag_58\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6771:6800   */\n  tag_163\n    /* \"#utility.yul\":6789:6799   */\n  dup5\n    /* \"#utility.yul\":6771:6800   */\n  tag_59\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6761:6769   */\n  dup2\n    /* \"#utility.yul\":6757:6801   */\n  add\n    /* \"#utility.yul\":6954:6956   */\n  0x20\n    /* \"#utility.yul\":6942:6952   */\n  dup6\n    /* \"#utility.yul\":6939:6957   */\n  lt\n    /* \"#utility.yul\":6936:6985   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":6975:6983   */\n  dup2\n    /* \"#utility.yul\":6960:6983   */\n  swap1\n  pop\n    /* \"#utility.yul\":6936:6985   */\ntag_164:\n    /* \"#utility.yul\":6998:7078   */\n  tag_165\n    /* \"#utility.yul\":7054:7076   */\n  tag_166\n    /* \"#utility.yul\":7072:7075   */\n  dup6\n    /* \"#utility.yul\":7054:7076   */\n  tag_59\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7044:7052   */\n  dup4\n    /* \"#utility.yul\":7040:7077   */\n  add\n    /* \"#utility.yul\":7027:7038   */\n  dup3\n    /* \"#utility.yul\":6998:7078   */\n  tag_69\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6657:7088   */\n  pop\n  pop\n    /* \"#utility.yul\":6642:7088   */\ntag_161:\n    /* \"#utility.yul\":6552:7095   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7101:7218   */\ntag_71:\n    /* \"#utility.yul\":7155:7163   */\n  0x00\n    /* \"#utility.yul\":7205:7210   */\n  dup3\n    /* \"#utility.yul\":7199:7203   */\n  dup3\n    /* \"#utility.yul\":7195:7211   */\n  shr\n    /* \"#utility.yul\":7174:7211   */\n  swap1\n  pop\n    /* \"#utility.yul\":7101:7218   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7224:7393   */\ntag_72:\n    /* \"#utility.yul\":7268:7274   */\n  0x00\n    /* \"#utility.yul\":7301:7352   */\n  tag_169\n    /* \"#utility.yul\":7349:7350   */\n  0x00\n    /* \"#utility.yul\":7345:7351   */\n  not\n    /* \"#utility.yul\":7337:7342   */\n  dup5\n    /* \"#utility.yul\":7334:7335   */\n  0x08\n    /* \"#utility.yul\":7330:7343   */\n  mul\n    /* \"#utility.yul\":7301:7352   */\n  tag_71\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7297:7353   */\n  not\n    /* \"#utility.yul\":7382:7386   */\n  dup1\n    /* \"#utility.yul\":7376:7380   */\n  dup4\n    /* \"#utility.yul\":7372:7387   */\n  and\n    /* \"#utility.yul\":7362:7387   */\n  swap2\n  pop\n    /* \"#utility.yul\":7275:7393   */\n  pop\n    /* \"#utility.yul\":7224:7393   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7398:7693   */\ntag_73:\n    /* \"#utility.yul\":7474:7478   */\n  0x00\n    /* \"#utility.yul\":7620:7649   */\n  tag_171\n    /* \"#utility.yul\":7645:7648   */\n  dup4\n    /* \"#utility.yul\":7639:7643   */\n  dup4\n    /* \"#utility.yul\":7620:7649   */\n  tag_72\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7612:7649   */\n  swap2\n  pop\n    /* \"#utility.yul\":7682:7685   */\n  dup3\n    /* \"#utility.yul\":7679:7680   */\n  0x02\n    /* \"#utility.yul\":7675:7686   */\n  mul\n    /* \"#utility.yul\":7669:7673   */\n  dup3\n    /* \"#utility.yul\":7666:7687   */\n  or\n    /* \"#utility.yul\":7658:7687   */\n  swap1\n  pop\n    /* \"#utility.yul\":7398:7693   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7698:9093   */\ntag_9:\n    /* \"#utility.yul\":7815:7852   */\n  tag_173\n    /* \"#utility.yul\":7848:7851   */\n  dup3\n    /* \"#utility.yul\":7815:7852   */\n  tag_55\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7917:7935   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7909:7915   */\n  dup2\n    /* \"#utility.yul\":7906:7936   */\n  gt\n    /* \"#utility.yul\":7903:7959   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":7939:7957   */\n  tag_175\n  tag_45\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7903:7959   */\ntag_174:\n    /* \"#utility.yul\":7983:8021   */\n  tag_176\n    /* \"#utility.yul\":8015:8019   */\n  dup3\n    /* \"#utility.yul\":8009:8020   */\n  sload\n    /* \"#utility.yul\":7983:8021   */\n  tag_57\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8068:8135   */\n  tag_177\n    /* \"#utility.yul\":8128:8134   */\n  dup3\n    /* \"#utility.yul\":8120:8126   */\n  dup3\n    /* \"#utility.yul\":8114:8118   */\n  dup6\n    /* \"#utility.yul\":8068:8135   */\n  tag_70\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8162:8163   */\n  0x00\n    /* \"#utility.yul\":8186:8190   */\n  0x20\n    /* \"#utility.yul\":8173:8190   */\n  swap1\n  pop\n    /* \"#utility.yul\":8218:8220   */\n  0x1f\n    /* \"#utility.yul\":8210:8216   */\n  dup4\n    /* \"#utility.yul\":8207:8221   */\n  gt\n    /* \"#utility.yul\":8235:8236   */\n  0x01\n    /* \"#utility.yul\":8230:8848   */\n  dup2\n  eq\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8892:8893   */\n  0x00\n    /* \"#utility.yul\":8909:8915   */\n  dup5\n    /* \"#utility.yul\":8906:8983   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":8958:8967   */\n  dup3\n    /* \"#utility.yul\":8953:8956   */\n  dup8\n    /* \"#utility.yul\":8949:8968   */\n  add\n    /* \"#utility.yul\":8943:8969   */\n  mload\n    /* \"#utility.yul\":8934:8969   */\n  swap1\n  pop\n    /* \"#utility.yul\":8906:8983   */\ntag_180:\n    /* \"#utility.yul\":9009:9076   */\n  tag_181\n    /* \"#utility.yul\":9069:9075   */\n  dup6\n    /* \"#utility.yul\":9062:9067   */\n  dup3\n    /* \"#utility.yul\":9009:9076   */\n  tag_73\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9003:9007   */\n  dup7\n    /* \"#utility.yul\":8996:9077   */\n  sstore\n    /* \"#utility.yul\":8865:9087   */\n  pop\n    /* \"#utility.yul\":8200:9087   */\n  jump(tag_178)\n    /* \"#utility.yul\":8230:8848   */\ntag_179:\n    /* \"#utility.yul\":8282:8286   */\n  0x1f\n    /* \"#utility.yul\":8278:8287   */\n  not\n    /* \"#utility.yul\":8270:8276   */\n  dup5\n    /* \"#utility.yul\":8266:8288   */\n  and\n    /* \"#utility.yul\":8316:8353   */\n  tag_182\n    /* \"#utility.yul\":8348:8352   */\n  dup7\n    /* \"#utility.yul\":8316:8353   */\n  tag_58\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8375:8376   */\n  0x00\n    /* \"#utility.yul\":8389:8597   */\ntag_183:\n    /* \"#utility.yul\":8403:8410   */\n  dup3\n    /* \"#utility.yul\":8400:8401   */\n  dup2\n    /* \"#utility.yul\":8397:8411   */\n  lt\n    /* \"#utility.yul\":8389:8597   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8482:8491   */\n  dup5\n    /* \"#utility.yul\":8477:8480   */\n  dup10\n    /* \"#utility.yul\":8473:8492   */\n  add\n    /* \"#utility.yul\":8467:8493   */\n  mload\n    /* \"#utility.yul\":8459:8465   */\n  dup3\n    /* \"#utility.yul\":8452:8494   */\n  sstore\n    /* \"#utility.yul\":8533:8534   */\n  0x01\n    /* \"#utility.yul\":8525:8531   */\n  dup3\n    /* \"#utility.yul\":8521:8535   */\n  add\n    /* \"#utility.yul\":8511:8535   */\n  swap2\n  pop\n    /* \"#utility.yul\":8580:8582   */\n  0x20\n    /* \"#utility.yul\":8569:8578   */\n  dup6\n    /* \"#utility.yul\":8565:8583   */\n  add\n    /* \"#utility.yul\":8552:8583   */\n  swap5\n  pop\n    /* \"#utility.yul\":8426:8430   */\n  0x20\n    /* \"#utility.yul\":8423:8424   */\n  dup2\n    /* \"#utility.yul\":8419:8431   */\n  add\n    /* \"#utility.yul\":8414:8431   */\n  swap1\n  pop\n    /* \"#utility.yul\":8389:8597   */\n  jump(tag_183)\ntag_185:\n    /* \"#utility.yul\":8625:8631   */\n  dup7\n    /* \"#utility.yul\":8616:8623   */\n  dup4\n    /* \"#utility.yul\":8613:8632   */\n  lt\n    /* \"#utility.yul\":8610:8789   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":8683:8692   */\n  dup5\n    /* \"#utility.yul\":8678:8681   */\n  dup10\n    /* \"#utility.yul\":8674:8693   */\n  add\n    /* \"#utility.yul\":8668:8694   */\n  mload\n    /* \"#utility.yul\":8726:8774   */\n  tag_187\n    /* \"#utility.yul\":8768:8772   */\n  0x1f\n    /* \"#utility.yul\":8760:8766   */\n  dup10\n    /* \"#utility.yul\":8756:8773   */\n  and\n    /* \"#utility.yul\":8745:8754   */\n  dup3\n    /* \"#utility.yul\":8726:8774   */\n  tag_72\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8718:8724   */\n  dup4\n    /* \"#utility.yul\":8711:8775   */\n  sstore\n    /* \"#utility.yul\":8633:8789   */\n  pop\n    /* \"#utility.yul\":8610:8789   */\ntag_186:\n    /* \"#utility.yul\":8835:8836   */\n  0x01\n    /* \"#utility.yul\":8831:8832   */\n  0x02\n    /* \"#utility.yul\":8823:8829   */\n  dup9\n    /* \"#utility.yul\":8819:8833   */\n  mul\n    /* \"#utility.yul\":8815:8837   */\n  add\n    /* \"#utility.yul\":8809:8813   */\n  dup9\n    /* \"#utility.yul\":8802:8838   */\n  sstore\n    /* \"#utility.yul\":8237:8848   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8200:9087   */\ntag_178:\n  pop\n    /* \"#utility.yul\":7790:9093   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7698:9093   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9099:9225   */\ntag_74:\n    /* \"#utility.yul\":9136:9143   */\n  0x00\n    /* \"#utility.yul\":9176:9218   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9169:9174   */\n  dup3\n    /* \"#utility.yul\":9165:9219   */\n  and\n    /* \"#utility.yul\":9154:9219   */\n  swap1\n  pop\n    /* \"#utility.yul\":9099:9225   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9231:9327   */\ntag_75:\n    /* \"#utility.yul\":9268:9275   */\n  0x00\n    /* \"#utility.yul\":9297:9321   */\n  tag_190\n    /* \"#utility.yul\":9315:9320   */\n  dup3\n    /* \"#utility.yul\":9297:9321   */\n  tag_74\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9286:9321   */\n  swap1\n  pop\n    /* \"#utility.yul\":9231:9327   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9333:9451   */\ntag_76:\n    /* \"#utility.yul\":9420:9444   */\n  tag_192\n    /* \"#utility.yul\":9438:9443   */\n  dup2\n    /* \"#utility.yul\":9420:9444   */\n  tag_75\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9415:9418   */\n  dup3\n    /* \"#utility.yul\":9408:9445   */\n  mstore\n    /* \"#utility.yul\":9333:9451   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9457:9679   */\ntag_14:\n    /* \"#utility.yul\":9550:9554   */\n  0x00\n    /* \"#utility.yul\":9588:9590   */\n  0x20\n    /* \"#utility.yul\":9577:9586   */\n  dup3\n    /* \"#utility.yul\":9573:9591   */\n  add\n    /* \"#utility.yul\":9565:9591   */\n  swap1\n  pop\n    /* \"#utility.yul\":9601:9672   */\n  tag_194\n    /* \"#utility.yul\":9669:9670   */\n  0x00\n    /* \"#utility.yul\":9658:9667   */\n  dup4\n    /* \"#utility.yul\":9654:9671   */\n  add\n    /* \"#utility.yul\":9645:9651   */\n  dup5\n    /* \"#utility.yul\":9601:9672   */\n  tag_76\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9457:9679   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9685:9865   */\ntag_77:\n    /* \"#utility.yul\":9733:9810   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9730:9731   */\n  0x00\n    /* \"#utility.yul\":9723:9811   */\n  mstore\n    /* \"#utility.yul\":9830:9834   */\n  0x11\n    /* \"#utility.yul\":9827:9828   */\n  0x04\n    /* \"#utility.yul\":9820:9835   */\n  mstore\n    /* \"#utility.yul\":9854:9858   */\n  0x24\n    /* \"#utility.yul\":9851:9852   */\n  0x00\n    /* \"#utility.yul\":9844:9859   */\n  revert\n    /* \"#utility.yul\":9871:10062   */\ntag_30:\n    /* \"#utility.yul\":9911:9914   */\n  0x00\n    /* \"#utility.yul\":9930:9950   */\n  tag_197\n    /* \"#utility.yul\":9948:9949   */\n  dup3\n    /* \"#utility.yul\":9930:9950   */\n  tag_62\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9925:9950   */\n  swap2\n  pop\n    /* \"#utility.yul\":9964:9984   */\n  tag_198\n    /* \"#utility.yul\":9982:9983   */\n  dup4\n    /* \"#utility.yul\":9964:9984   */\n  tag_62\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9959:9984   */\n  swap3\n  pop\n    /* \"#utility.yul\":10007:10008   */\n  dup3\n    /* \"#utility.yul\":10004:10005   */\n  dup3\n    /* \"#utility.yul\":10000:10009   */\n  add\n    /* \"#utility.yul\":9993:10009   */\n  swap1\n  pop\n    /* \"#utility.yul\":10028:10031   */\n  dup1\n    /* \"#utility.yul\":10025:10026   */\n  dup3\n    /* \"#utility.yul\":10022:10032   */\n  gt\n    /* \"#utility.yul\":10019:10055   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":10035:10053   */\n  tag_200\n  tag_77\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10019:10055   */\ntag_199:\n    /* \"#utility.yul\":9871:10062   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10068:10186   */\ntag_78:\n    /* \"#utility.yul\":10155:10179   */\n  tag_202\n    /* \"#utility.yul\":10173:10178   */\n  dup2\n    /* \"#utility.yul\":10155:10179   */\n  tag_62\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10150:10153   */\n  dup3\n    /* \"#utility.yul\":10143:10180   */\n  mstore\n    /* \"#utility.yul\":10068:10186   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10192:10634   */\ntag_34:\n    /* \"#utility.yul\":10341:10345   */\n  0x00\n    /* \"#utility.yul\":10379:10381   */\n  0x60\n    /* \"#utility.yul\":10368:10377   */\n  dup3\n    /* \"#utility.yul\":10364:10382   */\n  add\n    /* \"#utility.yul\":10356:10382   */\n  swap1\n  pop\n    /* \"#utility.yul\":10392:10463   */\n  tag_204\n    /* \"#utility.yul\":10460:10461   */\n  0x00\n    /* \"#utility.yul\":10449:10458   */\n  dup4\n    /* \"#utility.yul\":10445:10462   */\n  add\n    /* \"#utility.yul\":10436:10442   */\n  dup7\n    /* \"#utility.yul\":10392:10463   */\n  tag_76\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10473:10545   */\n  tag_205\n    /* \"#utility.yul\":10541:10543   */\n  0x20\n    /* \"#utility.yul\":10530:10539   */\n  dup4\n    /* \"#utility.yul\":10526:10544   */\n  add\n    /* \"#utility.yul\":10517:10523   */\n  dup6\n    /* \"#utility.yul\":10473:10545   */\n  tag_78\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":10555:10627   */\n  tag_206\n    /* \"#utility.yul\":10623:10625   */\n  0x40\n    /* \"#utility.yul\":10612:10621   */\n  dup4\n    /* \"#utility.yul\":10608:10626   */\n  add\n    /* \"#utility.yul\":10599:10605   */\n  dup5\n    /* \"#utility.yul\":10555:10627   */\n  tag_78\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10192:10634   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10640:10862   */\ntag_38:\n    /* \"#utility.yul\":10733:10737   */\n  0x00\n    /* \"#utility.yul\":10771:10773   */\n  0x20\n    /* \"#utility.yul\":10760:10769   */\n  dup3\n    /* \"#utility.yul\":10756:10774   */\n  add\n    /* \"#utility.yul\":10748:10774   */\n  swap1\n  pop\n    /* \"#utility.yul\":10784:10855   */\n  tag_208\n    /* \"#utility.yul\":10852:10853   */\n  0x00\n    /* \"#utility.yul\":10841:10850   */\n  dup4\n    /* \"#utility.yul\":10837:10854   */\n  add\n    /* \"#utility.yul\":10828:10834   */\n  dup5\n    /* \"#utility.yul\":10784:10855   */\n  tag_78\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10640:10862   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"clickcoin.sol\":245:2893  contract ClickCoin is ERC20,Ownable{... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"clickcoin.sol\":245:2893  contract ClickCoin is ERC20,Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb4969b96\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xb4969b96\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xbed99850\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"clickcoin.sol\":2368:2886  function transferFrom(address from, address to, uint256 value) public override  minimumTransfer(value) returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"clickcoin.sol\":1540:1671  function burn(uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"clickcoin.sol\":1366:1457  function mint(uint256 amount) public onlyOwner {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"clickcoin.sol\":1880:2316  function transfer(address to, uint256 value) public override  minimumTransfer(value) returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"clickcoin.sol\":1725:1841  function setBurnRate(uint16 _burnRate) external onlyOwner maxBurn(_burnRate) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"clickcoin.sol\":306:328  uint16 public burnRate */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_88\n      jump\t// in\n    tag_89:\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_91\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_90)\n    tag_91:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_92:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_92\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"clickcoin.sol\":2368:2886  function transferFrom(address from, address to, uint256 value) public override  minimumTransfer(value) returns (bool) {... */\n    tag_39:\n        /* \"clickcoin.sol\":2480:2484  bool */\n      0x00\n        /* \"clickcoin.sol\":2464:2469  value */\n      dup2\n        /* \"clickcoin.sol\":891:897  _value */\n      dup1\n        /* \"clickcoin.sol\":882:887  10000 */\n      0x2710\n        /* \"clickcoin.sol\":870:878  burnRate */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"clickcoin.sol\":861:878  _value * burnRate */\n      0xffff\n      and\n        /* \"clickcoin.sol\":861:867  _value */\n      dup4\n        /* \"clickcoin.sol\":861:878  _value * burnRate */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"clickcoin.sol\":860:887  (_value * burnRate) / 10000 */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"clickcoin.sol\":860:897  (_value * burnRate) / 10000 >= _value */\n      lt\n        /* \"clickcoin.sol\":857:957  if((_value * burnRate) / 10000 >= _value) revert(\"Value does not cover fees. Enter a higher amount\") */\n      tag_104\n      jumpi\n        /* \"clickcoin.sol\":899:957  revert(\"Value does not cover fees. Enter a higher amount\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"clickcoin.sol\":857:957  if((_value * burnRate) / 10000 >= _value) revert(\"Value does not cover fees. Enter a higher amount\") */\n    tag_104:\n        /* \"clickcoin.sol\":1001:1002  1 */\n      0x01\n        /* \"clickcoin.sol\":993:998  10000 */\n      0x2710\n        /* \"clickcoin.sol\":981:989  burnRate */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"clickcoin.sol\":972:989  _value * burnRate */\n      0xffff\n      and\n        /* \"clickcoin.sol\":972:978  _value */\n      dup4\n        /* \"clickcoin.sol\":972:989  _value * burnRate */\n      tag_107\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_107:\n        /* \"clickcoin.sol\":971:998  (_value * burnRate) / 10000 */\n      tag_108\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_108:\n        /* \"clickcoin.sol\":971:1002  (_value * burnRate) / 10000 < 1 */\n      lt\n        /* \"clickcoin.sol\":968:1064  if((_value * burnRate) / 10000 < 1) revert(\"Value cannot cover any fees. Enter a higher amount\") */\n      iszero\n      tag_109\n      jumpi\n        /* \"clickcoin.sol\":1004:1064  revert(\"Value cannot cover any fees. Enter a higher amount\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"clickcoin.sol\":968:1064  if((_value * burnRate) / 10000 < 1) revert(\"Value cannot cover any fees. Enter a higher amount\") */\n    tag_109:\n        /* \"clickcoin.sol\":2497:2515  uint256 burnAmount */\n      0x00\n        /* \"clickcoin.sol\":2539:2544  10000 */\n      0x2710\n        /* \"clickcoin.sol\":2527:2535  burnRate */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"clickcoin.sol\":2519:2535  value * burnRate */\n      0xffff\n      and\n        /* \"clickcoin.sol\":2519:2524  value */\n      dup6\n        /* \"clickcoin.sol\":2519:2535  value * burnRate */\n      tag_113\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_113:\n        /* \"clickcoin.sol\":2518:2544  (value * burnRate) / 10000 */\n      tag_114\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_114:\n        /* \"clickcoin.sol\":2497:2544  uint256 burnAmount = (value * burnRate) / 10000 */\n      swap1\n      pop\n        /* \"clickcoin.sol\":2555:2573  uint256 sendAmount */\n      0x00\n        /* \"clickcoin.sol\":2584:2594  burnAmount */\n      dup2\n        /* \"clickcoin.sol\":2576:2581  value */\n      dup6\n        /* \"clickcoin.sol\":2576:2594  value - burnAmount */\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"clickcoin.sol\":2555:2594  uint256 sendAmount = value - burnAmount */\n      swap1\n      pop\n        /* \"clickcoin.sol\":2607:2622  address spender */\n      0x00\n        /* \"clickcoin.sol\":2625:2637  _msgSender() */\n      tag_117\n        /* \"clickcoin.sol\":2625:2635  _msgSender */\n      tag_95\n        /* \"clickcoin.sol\":2625:2637  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"clickcoin.sol\":2607:2637  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"clickcoin.sol\":2648:2685  _spendAllowance(from, spender, value) */\n      tag_118\n        /* \"clickcoin.sol\":2664:2668  from */\n      dup9\n        /* \"clickcoin.sol\":2670:2677  spender */\n      dup3\n        /* \"clickcoin.sol\":2679:2684  value */\n      dup9\n        /* \"clickcoin.sol\":2648:2663  _spendAllowance */\n      tag_119\n        /* \"clickcoin.sol\":2648:2685  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_118:\n        /* \"clickcoin.sol\":2696:2733  super._transfer(from, to, sendAmount) */\n      tag_120\n        /* \"clickcoin.sol\":2712:2716  from */\n      dup9\n        /* \"clickcoin.sol\":2718:2720  to */\n      dup9\n        /* \"clickcoin.sol\":2722:2732  sendAmount */\n      dup5\n        /* \"clickcoin.sol\":2696:2711  super._transfer */\n      tag_121\n        /* \"clickcoin.sol\":2696:2733  super._transfer(from, to, sendAmount) */\n      jump\t// in\n    tag_120:\n        /* \"clickcoin.sol\":2763:2764  0 */\n      0x00\n        /* \"clickcoin.sol\":2750:2760  burnAmount */\n      dup4\n        /* \"clickcoin.sol\":2750:2764  burnAmount > 0 */\n      gt\n        /* \"clickcoin.sol\":2746:2857  if (burnAmount > 0) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"clickcoin.sol\":2781:2803  _burn(from,burnAmount) */\n      tag_123\n        /* \"clickcoin.sol\":2787:2791  from */\n      dup9\n        /* \"clickcoin.sol\":2792:2802  burnAmount */\n      dup5\n        /* \"clickcoin.sol\":2781:2786  _burn */\n      tag_124\n        /* \"clickcoin.sol\":2781:2803  _burn(from,burnAmount) */\n      jump\t// in\n    tag_123:\n        /* \"clickcoin.sol\":2828:2832  from */\n      dup8\n        /* \"clickcoin.sol\":2823:2845  Burn(from, burnAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n        /* \"clickcoin.sol\":2834:2844  burnAmount */\n      dup5\n        /* \"clickcoin.sol\":2823:2845  Burn(from, burnAmount) */\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"clickcoin.sol\":2746:2857  if (burnAmount > 0) {... */\n    tag_122:\n        /* \"clickcoin.sol\":2874:2878  true */\n      0x01\n        /* \"clickcoin.sol\":2867:2878  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"clickcoin.sol\":2368:2886  function transferFrom(address from, address to, uint256 value) public override  minimumTransfer(value) returns (bool) {... */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"clickcoin.sol\":1540:1671  function burn(uint256 amount) public onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"clickcoin.sol\":1598:1623  _burn(msg.sender, amount) */\n      tag_131\n        /* \"clickcoin.sol\":1604:1614  msg.sender */\n      caller\n        /* \"clickcoin.sol\":1616:1622  amount */\n      dup3\n        /* \"clickcoin.sol\":1598:1603  _burn */\n      tag_124\n        /* \"clickcoin.sol\":1598:1623  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_131:\n        /* \"clickcoin.sol\":1644:1654  msg.sender */\n      caller\n        /* \"clickcoin.sol\":1639:1663  Burn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n        /* \"clickcoin.sol\":1656:1662  amount */\n      dup3\n        /* \"clickcoin.sol\":1639:1663  Burn(msg.sender, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"clickcoin.sol\":1540:1671  function burn(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_88\n      jump\t// in\n    tag_141:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_142\n      swap1\n      tag_88\n      jump\t// in\n    tag_142:\n      dup1\n      iszero\n      tag_143\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_144\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_143)\n    tag_144:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_145:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_145\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"clickcoin.sol\":1366:1457  function mint(uint256 amount) public onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"clickcoin.sol\":1424:1449  _mint(msg.sender, amount) */\n      tag_149\n        /* \"clickcoin.sol\":1430:1440  msg.sender */\n      caller\n        /* \"clickcoin.sol\":1442:1448  amount */\n      dup3\n        /* \"clickcoin.sol\":1424:1429  _mint */\n      tag_150\n        /* \"clickcoin.sol\":1424:1449  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_149:\n        /* \"clickcoin.sol\":1366:1457  function mint(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"clickcoin.sol\":1880:2316  function transfer(address to, uint256 value) public override  minimumTransfer(value) returns (bool) {... */\n    tag_68:\n        /* \"clickcoin.sol\":1974:1978  bool */\n      0x00\n        /* \"clickcoin.sol\":1958:1963  value */\n      dup2\n        /* \"clickcoin.sol\":891:897  _value */\n      dup1\n        /* \"clickcoin.sol\":882:887  10000 */\n      0x2710\n        /* \"clickcoin.sol\":870:878  burnRate */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"clickcoin.sol\":861:878  _value * burnRate */\n      0xffff\n      and\n        /* \"clickcoin.sol\":861:867  _value */\n      dup4\n        /* \"clickcoin.sol\":861:878  _value * burnRate */\n      tag_152\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_152:\n        /* \"clickcoin.sol\":860:887  (_value * burnRate) / 10000 */\n      tag_153\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_153:\n        /* \"clickcoin.sol\":860:897  (_value * burnRate) / 10000 >= _value */\n      lt\n        /* \"clickcoin.sol\":857:957  if((_value * burnRate) / 10000 >= _value) revert(\"Value does not cover fees. Enter a higher amount\") */\n      tag_154\n      jumpi\n        /* \"clickcoin.sol\":899:957  revert(\"Value does not cover fees. Enter a higher amount\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_106\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"clickcoin.sol\":857:957  if((_value * burnRate) / 10000 >= _value) revert(\"Value does not cover fees. Enter a higher amount\") */\n    tag_154:\n        /* \"clickcoin.sol\":1001:1002  1 */\n      0x01\n        /* \"clickcoin.sol\":993:998  10000 */\n      0x2710\n        /* \"clickcoin.sol\":981:989  burnRate */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"clickcoin.sol\":972:989  _value * burnRate */\n      0xffff\n      and\n        /* \"clickcoin.sol\":972:978  _value */\n      dup4\n        /* \"clickcoin.sol\":972:989  _value * burnRate */\n      tag_156\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_156:\n        /* \"clickcoin.sol\":971:998  (_value * burnRate) / 10000 */\n      tag_157\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_157:\n        /* \"clickcoin.sol\":971:1002  (_value * burnRate) / 10000 < 1 */\n      lt\n        /* \"clickcoin.sol\":968:1064  if((_value * burnRate) / 10000 < 1) revert(\"Value cannot cover any fees. Enter a higher amount\") */\n      iszero\n      tag_158\n      jumpi\n        /* \"clickcoin.sol\":1004:1064  revert(\"Value cannot cover any fees. Enter a higher amount\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_111\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"clickcoin.sol\":968:1064  if((_value * burnRate) / 10000 < 1) revert(\"Value cannot cover any fees. Enter a higher amount\") */\n    tag_158:\n        /* \"clickcoin.sol\":1991:2009  uint256 burnAmount */\n      0x00\n        /* \"clickcoin.sol\":2033:2038  10000 */\n      0x2710\n        /* \"clickcoin.sol\":2021:2029  burnRate */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"clickcoin.sol\":2013:2029  value * burnRate */\n      0xffff\n      and\n        /* \"clickcoin.sol\":2013:2018  value */\n      dup6\n        /* \"clickcoin.sol\":2013:2029  value * burnRate */\n      tag_161\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_161:\n        /* \"clickcoin.sol\":2012:2038  (value * burnRate) / 10000 */\n      tag_162\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_162:\n        /* \"clickcoin.sol\":1991:2038  uint256 burnAmount = (value * burnRate) / 10000 */\n      swap1\n      pop\n        /* \"clickcoin.sol\":2049:2067  uint256 sendAmount */\n      0x00\n        /* \"clickcoin.sol\":2078:2088  burnAmount */\n      dup2\n        /* \"clickcoin.sol\":2070:2075  value */\n      dup6\n        /* \"clickcoin.sol\":2070:2088  value - burnAmount */\n      tag_163\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_163:\n        /* \"clickcoin.sol\":2049:2088  uint256 sendAmount = value - burnAmount */\n      swap1\n      pop\n        /* \"clickcoin.sol\":2109:2151  super._transfer(msg.sender,to, sendAmount) */\n      tag_164\n        /* \"clickcoin.sol\":2125:2135  msg.sender */\n      caller\n        /* \"clickcoin.sol\":2136:2138  to */\n      dup8\n        /* \"clickcoin.sol\":2140:2150  sendAmount */\n      dup4\n        /* \"clickcoin.sol\":2109:2124  super._transfer */\n      tag_121\n        /* \"clickcoin.sol\":2109:2151  super._transfer(msg.sender,to, sendAmount) */\n      jump\t// in\n    tag_164:\n        /* \"clickcoin.sol\":2179:2180  0 */\n      0x00\n        /* \"clickcoin.sol\":2166:2176  burnAmount */\n      dup3\n        /* \"clickcoin.sol\":2166:2180  burnAmount > 0 */\n      gt\n        /* \"clickcoin.sol\":2162:2285  if (burnAmount > 0) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"clickcoin.sol\":2197:2225  _burn(msg.sender,burnAmount) */\n      tag_166\n        /* \"clickcoin.sol\":2203:2213  msg.sender */\n      caller\n        /* \"clickcoin.sol\":2214:2224  burnAmount */\n      dup4\n        /* \"clickcoin.sol\":2197:2202  _burn */\n      tag_124\n        /* \"clickcoin.sol\":2197:2225  _burn(msg.sender,burnAmount) */\n      jump\t// in\n    tag_166:\n        /* \"clickcoin.sol\":2250:2260  msg.sender */\n      caller\n        /* \"clickcoin.sol\":2245:2273  Burn(msg.sender, burnAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n        /* \"clickcoin.sol\":2262:2272  burnAmount */\n      dup4\n        /* \"clickcoin.sol\":2245:2273  Burn(msg.sender, burnAmount) */\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"clickcoin.sol\":2162:2285  if (burnAmount > 0) {... */\n    tag_165:\n        /* \"clickcoin.sol\":2304:2308  true */\n      0x01\n        /* \"clickcoin.sol\":2297:2308  return true */\n      swap4\n      pop\n      pop\n      pop\n        /* \"clickcoin.sol\":1880:2316  function transfer(address to, uint256 value) public override  minimumTransfer(value) returns (bool) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"clickcoin.sol\":1725:1841  function setBurnRate(uint16 _burnRate) external onlyOwner maxBurn(_burnRate) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"clickcoin.sol\":1791:1800  _burnRate */\n      dup1\n        /* \"clickcoin.sol\":732:736  5000 */\n      0x1388\n        /* \"clickcoin.sol\":720:729  _burnRate */\n      dup2\n        /* \"clickcoin.sol\":720:736  _burnRate > 5000 */\n      0xffff\n      and\n      gt\n        /* \"clickcoin.sol\":716:778  if (_burnRate > 5000) revert(\"Burn rate mas be less than 50%\") */\n      iszero\n      tag_171\n      jumpi\n        /* \"clickcoin.sol\":738:778  revert(\"Burn rate mas be less than 50%\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"clickcoin.sol\":716:778  if (_burnRate > 5000) revert(\"Burn rate mas be less than 50%\") */\n    tag_171:\n        /* \"clickcoin.sol\":1824:1833  _burnRate */\n      dup2\n        /* \"clickcoin.sol\":1813:1821  burnRate */\n      0x05\n      0x14\n        /* \"clickcoin.sol\":1813:1833  burnRate = _burnRate */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"clickcoin.sol\":1725:1841  function setBurnRate(uint16 _burnRate) external onlyOwner maxBurn(_burnRate) {... */\n      pop\n      jump\t// out\n        /* \"clickcoin.sol\":306:328  uint16 public burnRate */\n    tag_75:\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_226)\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_230)\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_232:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_233:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_234:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_270:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_270)\n    tag_272:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_235:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_236:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_275\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_232\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":818:889   */\n      tag_276\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_233\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_277\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_234\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":988:1017   */\n      tag_278\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_235\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_25:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_280\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_236\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_238:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_240:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_241:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_286\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_240\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_242:\n        /* \"#utility.yul\":1983:2007   */\n      tag_288\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_241\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_289:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_243:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_291\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_242\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_244:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_245:\n        /* \"#utility.yul\":2339:2363   */\n      tag_294\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_244\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_295:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_246:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_297\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_245\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_28:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_300\n      tag_238\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2632:2751   */\n    tag_299:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_301\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_243\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_302\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_246\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_247:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_248:\n        /* \"#utility.yul\":3196:3217   */\n      tag_305\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_247\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_31:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_307\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_248\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_249:\n        /* \"#utility.yul\":3533:3557   */\n      tag_309\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_244\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_35:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_311\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_249\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_38:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_314\n      tag_238\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":3908:4027   */\n    tag_313:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_315\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_243\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_316\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_243\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_317\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_246\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_250:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_251:\n        /* \"#utility.yul\":4598:4620   */\n      tag_320\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_250\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_44:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_322\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_251\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_47:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_325\n      tag_238\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":4929:5048   */\n    tag_324:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_326\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_246\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_51:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_329\n      tag_238\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5264:5383   */\n    tag_328:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_330\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_243\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_252:\n        /* \"#utility.yul\":5610:5634   */\n      tag_332\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_241\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_59:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_334\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_252\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:5964   */\n    tag_253:\n        /* \"#utility.yul\":5911:5918   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      0xffff\n        /* \"#utility.yul\":5944:5949   */\n      dup3\n        /* \"#utility.yul\":5940:5958   */\n      and\n        /* \"#utility.yul\":5929:5958   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5970:6090   */\n    tag_254:\n        /* \"#utility.yul\":6042:6065   */\n      tag_337\n        /* \"#utility.yul\":6059:6064   */\n      dup2\n        /* \"#utility.yul\":6042:6065   */\n      tag_253\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6035:6040   */\n      dup2\n        /* \"#utility.yul\":6032:6066   */\n      eq\n        /* \"#utility.yul\":6022:6084   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":6080:6081   */\n      0x00\n        /* \"#utility.yul\":6077:6078   */\n      dup1\n        /* \"#utility.yul\":6070:6082   */\n      revert\n        /* \"#utility.yul\":6022:6084   */\n    tag_338:\n        /* \"#utility.yul\":5970:6090   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6096:6233   */\n    tag_255:\n        /* \"#utility.yul\":6141:6146   */\n      0x00\n        /* \"#utility.yul\":6179:6185   */\n      dup2\n        /* \"#utility.yul\":6166:6186   */\n      calldataload\n        /* \"#utility.yul\":6157:6186   */\n      swap1\n      pop\n        /* \"#utility.yul\":6195:6227   */\n      tag_340\n        /* \"#utility.yul\":6221:6226   */\n      dup2\n        /* \"#utility.yul\":6195:6227   */\n      tag_254\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6096:6233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6239:6566   */\n    tag_72:\n        /* \"#utility.yul\":6297:6303   */\n      0x00\n        /* \"#utility.yul\":6346:6348   */\n      0x20\n        /* \"#utility.yul\":6334:6343   */\n      dup3\n        /* \"#utility.yul\":6325:6332   */\n      dup5\n        /* \"#utility.yul\":6321:6344   */\n      sub\n        /* \"#utility.yul\":6317:6349   */\n      slt\n        /* \"#utility.yul\":6314:6433   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":6352:6431   */\n      tag_343\n      tag_238\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6314:6433   */\n    tag_342:\n        /* \"#utility.yul\":6472:6473   */\n      0x00\n        /* \"#utility.yul\":6497:6549   */\n      tag_344\n        /* \"#utility.yul\":6541:6548   */\n      dup5\n        /* \"#utility.yul\":6532:6538   */\n      dup3\n        /* \"#utility.yul\":6521:6530   */\n      dup6\n        /* \"#utility.yul\":6517:6539   */\n      add\n        /* \"#utility.yul\":6497:6549   */\n      tag_255\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6487:6549   */\n      swap2\n      pop\n        /* \"#utility.yul\":6443:6559   */\n      pop\n        /* \"#utility.yul\":6239:6566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6572:6687   */\n    tag_256:\n        /* \"#utility.yul\":6657:6680   */\n      tag_346\n        /* \"#utility.yul\":6674:6679   */\n      dup2\n        /* \"#utility.yul\":6657:6680   */\n      tag_253\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":6652:6655   */\n      dup3\n        /* \"#utility.yul\":6645:6681   */\n      mstore\n        /* \"#utility.yul\":6572:6687   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6693:6911   */\n    tag_77:\n        /* \"#utility.yul\":6784:6788   */\n      0x00\n        /* \"#utility.yul\":6822:6824   */\n      0x20\n        /* \"#utility.yul\":6811:6820   */\n      dup3\n        /* \"#utility.yul\":6807:6825   */\n      add\n        /* \"#utility.yul\":6799:6825   */\n      swap1\n      pop\n        /* \"#utility.yul\":6835:6904   */\n      tag_348\n        /* \"#utility.yul\":6901:6902   */\n      0x00\n        /* \"#utility.yul\":6890:6899   */\n      dup4\n        /* \"#utility.yul\":6886:6903   */\n      add\n        /* \"#utility.yul\":6877:6883   */\n      dup5\n        /* \"#utility.yul\":6835:6904   */\n      tag_256\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6693:6911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6917:7391   */\n    tag_80:\n        /* \"#utility.yul\":6985:6991   */\n      0x00\n        /* \"#utility.yul\":6993:6999   */\n      dup1\n        /* \"#utility.yul\":7042:7044   */\n      0x40\n        /* \"#utility.yul\":7030:7039   */\n      dup4\n        /* \"#utility.yul\":7021:7028   */\n      dup6\n        /* \"#utility.yul\":7017:7040   */\n      sub\n        /* \"#utility.yul\":7013:7045   */\n      slt\n        /* \"#utility.yul\":7010:7129   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":7048:7127   */\n      tag_351\n      tag_238\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7010:7129   */\n    tag_350:\n        /* \"#utility.yul\":7168:7169   */\n      0x00\n        /* \"#utility.yul\":7193:7246   */\n      tag_352\n        /* \"#utility.yul\":7238:7245   */\n      dup6\n        /* \"#utility.yul\":7229:7235   */\n      dup3\n        /* \"#utility.yul\":7218:7227   */\n      dup7\n        /* \"#utility.yul\":7214:7236   */\n      add\n        /* \"#utility.yul\":7193:7246   */\n      tag_243\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7183:7246   */\n      swap3\n      pop\n        /* \"#utility.yul\":7139:7256   */\n      pop\n        /* \"#utility.yul\":7295:7297   */\n      0x20\n        /* \"#utility.yul\":7321:7374   */\n      tag_353\n        /* \"#utility.yul\":7366:7373   */\n      dup6\n        /* \"#utility.yul\":7357:7363   */\n      dup3\n        /* \"#utility.yul\":7346:7355   */\n      dup7\n        /* \"#utility.yul\":7342:7364   */\n      add\n        /* \"#utility.yul\":7321:7374   */\n      tag_243\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7311:7374   */\n      swap2\n      pop\n        /* \"#utility.yul\":7266:7384   */\n      pop\n        /* \"#utility.yul\":6917:7391   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7397:7577   */\n    tag_257:\n        /* \"#utility.yul\":7445:7522   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7442:7443   */\n      0x00\n        /* \"#utility.yul\":7435:7523   */\n      mstore\n        /* \"#utility.yul\":7542:7546   */\n      0x22\n        /* \"#utility.yul\":7539:7540   */\n      0x04\n        /* \"#utility.yul\":7532:7547   */\n      mstore\n        /* \"#utility.yul\":7566:7570   */\n      0x24\n        /* \"#utility.yul\":7563:7564   */\n      0x00\n        /* \"#utility.yul\":7556:7571   */\n      revert\n        /* \"#utility.yul\":7583:7903   */\n    tag_88:\n        /* \"#utility.yul\":7627:7633   */\n      0x00\n        /* \"#utility.yul\":7664:7665   */\n      0x02\n        /* \"#utility.yul\":7658:7662   */\n      dup3\n        /* \"#utility.yul\":7654:7666   */\n      div\n        /* \"#utility.yul\":7644:7666   */\n      swap1\n      pop\n        /* \"#utility.yul\":7711:7712   */\n      0x01\n        /* \"#utility.yul\":7705:7709   */\n      dup3\n        /* \"#utility.yul\":7701:7713   */\n      and\n        /* \"#utility.yul\":7732:7750   */\n      dup1\n        /* \"#utility.yul\":7722:7803   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":7788:7792   */\n      0x7f\n        /* \"#utility.yul\":7780:7786   */\n      dup3\n        /* \"#utility.yul\":7776:7793   */\n      and\n        /* \"#utility.yul\":7766:7793   */\n      swap2\n      pop\n        /* \"#utility.yul\":7722:7803   */\n    tag_356:\n        /* \"#utility.yul\":7850:7852   */\n      0x20\n        /* \"#utility.yul\":7842:7848   */\n      dup3\n        /* \"#utility.yul\":7839:7853   */\n      lt\n        /* \"#utility.yul\":7819:7837   */\n      dup2\n        /* \"#utility.yul\":7816:7854   */\n      sub\n        /* \"#utility.yul\":7813:7897   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":7869:7887   */\n      tag_358\n      tag_257\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":7813:7897   */\n    tag_357:\n        /* \"#utility.yul\":7634:7903   */\n      pop\n        /* \"#utility.yul\":7583:7903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7909:8089   */\n    tag_258:\n        /* \"#utility.yul\":7957:8034   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7954:7955   */\n      0x00\n        /* \"#utility.yul\":7947:8035   */\n      mstore\n        /* \"#utility.yul\":8054:8058   */\n      0x11\n        /* \"#utility.yul\":8051:8052   */\n      0x04\n        /* \"#utility.yul\":8044:8059   */\n      mstore\n        /* \"#utility.yul\":8078:8082   */\n      0x24\n        /* \"#utility.yul\":8075:8076   */\n      0x00\n        /* \"#utility.yul\":8068:8083   */\n      revert\n        /* \"#utility.yul\":8095:8505   */\n    tag_101:\n        /* \"#utility.yul\":8135:8142   */\n      0x00\n        /* \"#utility.yul\":8158:8178   */\n      tag_361\n        /* \"#utility.yul\":8176:8177   */\n      dup3\n        /* \"#utility.yul\":8158:8178   */\n      tag_244\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":8153:8178   */\n      swap2\n      pop\n        /* \"#utility.yul\":8192:8212   */\n      tag_362\n        /* \"#utility.yul\":8210:8211   */\n      dup4\n        /* \"#utility.yul\":8192:8212   */\n      tag_244\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8187:8212   */\n      swap3\n      pop\n        /* \"#utility.yul\":8247:8248   */\n      dup3\n        /* \"#utility.yul\":8244:8245   */\n      dup3\n        /* \"#utility.yul\":8240:8249   */\n      mul\n        /* \"#utility.yul\":8269:8299   */\n      tag_363\n        /* \"#utility.yul\":8287:8298   */\n      dup2\n        /* \"#utility.yul\":8269:8299   */\n      tag_244\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8258:8299   */\n      swap2\n      pop\n        /* \"#utility.yul\":8448:8449   */\n      dup3\n        /* \"#utility.yul\":8439:8446   */\n      dup3\n        /* \"#utility.yul\":8435:8450   */\n      div\n        /* \"#utility.yul\":8432:8433   */\n      dup5\n        /* \"#utility.yul\":8429:8451   */\n      eq\n        /* \"#utility.yul\":8409:8410   */\n      dup4\n        /* \"#utility.yul\":8402:8411   */\n      iszero\n        /* \"#utility.yul\":8382:8465   */\n      or\n        /* \"#utility.yul\":8359:8498   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":8478:8496   */\n      tag_365\n      tag_258\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":8359:8498   */\n    tag_364:\n        /* \"#utility.yul\":8143:8505   */\n      pop\n        /* \"#utility.yul\":8095:8505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8511:8691   */\n    tag_259:\n        /* \"#utility.yul\":8559:8636   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8556:8557   */\n      0x00\n        /* \"#utility.yul\":8549:8637   */\n      mstore\n        /* \"#utility.yul\":8656:8660   */\n      0x12\n        /* \"#utility.yul\":8653:8654   */\n      0x04\n        /* \"#utility.yul\":8646:8661   */\n      mstore\n        /* \"#utility.yul\":8680:8684   */\n      0x24\n        /* \"#utility.yul\":8677:8678   */\n      0x00\n        /* \"#utility.yul\":8670:8685   */\n      revert\n        /* \"#utility.yul\":8697:8882   */\n    tag_103:\n        /* \"#utility.yul\":8737:8738   */\n      0x00\n        /* \"#utility.yul\":8754:8774   */\n      tag_368\n        /* \"#utility.yul\":8772:8773   */\n      dup3\n        /* \"#utility.yul\":8754:8774   */\n      tag_244\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":8749:8774   */\n      swap2\n      pop\n        /* \"#utility.yul\":8788:8808   */\n      tag_369\n        /* \"#utility.yul\":8806:8807   */\n      dup4\n        /* \"#utility.yul\":8788:8808   */\n      tag_244\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8783:8808   */\n      swap3\n      pop\n        /* \"#utility.yul\":8827:8828   */\n      dup3\n        /* \"#utility.yul\":8817:8852   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":8832:8850   */\n      tag_371\n      tag_259\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":8817:8852   */\n    tag_370:\n        /* \"#utility.yul\":8874:8875   */\n      dup3\n        /* \"#utility.yul\":8871:8872   */\n      dup3\n        /* \"#utility.yul\":8867:8876   */\n      div\n        /* \"#utility.yul\":8862:8876   */\n      swap1\n      pop\n        /* \"#utility.yul\":8697:8882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8888:9123   */\n    tag_260:\n        /* \"#utility.yul\":9028:9062   */\n      0x56616c756520646f6573206e6f7420636f76657220666565732e20456e746572\n        /* \"#utility.yul\":9024:9025   */\n      0x00\n        /* \"#utility.yul\":9016:9022   */\n      dup3\n        /* \"#utility.yul\":9012:9026   */\n      add\n        /* \"#utility.yul\":9005:9063   */\n      mstore\n        /* \"#utility.yul\":9097:9115   */\n      0x20612068696768657220616d6f756e7400000000000000000000000000000000\n        /* \"#utility.yul\":9092:9094   */\n      0x20\n        /* \"#utility.yul\":9084:9090   */\n      dup3\n        /* \"#utility.yul\":9080:9095   */\n      add\n        /* \"#utility.yul\":9073:9116   */\n      mstore\n        /* \"#utility.yul\":8888:9123   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9129:9495   */\n    tag_261:\n        /* \"#utility.yul\":9271:9274   */\n      0x00\n        /* \"#utility.yul\":9292:9359   */\n      tag_374\n        /* \"#utility.yul\":9356:9358   */\n      0x30\n        /* \"#utility.yul\":9351:9354   */\n      dup4\n        /* \"#utility.yul\":9292:9359   */\n      tag_233\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9285:9359   */\n      swap2\n      pop\n        /* \"#utility.yul\":9368:9461   */\n      tag_375\n        /* \"#utility.yul\":9457:9460   */\n      dup3\n        /* \"#utility.yul\":9368:9461   */\n      tag_260\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9486:9488   */\n      0x40\n        /* \"#utility.yul\":9481:9484   */\n      dup3\n        /* \"#utility.yul\":9477:9489   */\n      add\n        /* \"#utility.yul\":9470:9489   */\n      swap1\n      pop\n        /* \"#utility.yul\":9129:9495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9501:9920   */\n    tag_106:\n        /* \"#utility.yul\":9667:9671   */\n      0x00\n        /* \"#utility.yul\":9705:9707   */\n      0x20\n        /* \"#utility.yul\":9694:9703   */\n      dup3\n        /* \"#utility.yul\":9690:9708   */\n      add\n        /* \"#utility.yul\":9682:9708   */\n      swap1\n      pop\n        /* \"#utility.yul\":9754:9763   */\n      dup2\n        /* \"#utility.yul\":9748:9752   */\n      dup2\n        /* \"#utility.yul\":9744:9764   */\n      sub\n        /* \"#utility.yul\":9740:9741   */\n      0x00\n        /* \"#utility.yul\":9729:9738   */\n      dup4\n        /* \"#utility.yul\":9725:9742   */\n      add\n        /* \"#utility.yul\":9718:9765   */\n      mstore\n        /* \"#utility.yul\":9782:9913   */\n      tag_377\n        /* \"#utility.yul\":9908:9912   */\n      dup2\n        /* \"#utility.yul\":9782:9913   */\n      tag_261\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":9774:9913   */\n      swap1\n      pop\n        /* \"#utility.yul\":9501:9920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9926:10163   */\n    tag_262:\n        /* \"#utility.yul\":10066:10100   */\n      0x56616c75652063616e6e6f7420636f76657220616e7920666565732e20456e74\n        /* \"#utility.yul\":10062:10063   */\n      0x00\n        /* \"#utility.yul\":10054:10060   */\n      dup3\n        /* \"#utility.yul\":10050:10064   */\n      add\n        /* \"#utility.yul\":10043:10101   */\n      mstore\n        /* \"#utility.yul\":10135:10155   */\n      0x657220612068696768657220616d6f756e740000000000000000000000000000\n        /* \"#utility.yul\":10130:10132   */\n      0x20\n        /* \"#utility.yul\":10122:10128   */\n      dup3\n        /* \"#utility.yul\":10118:10133   */\n      add\n        /* \"#utility.yul\":10111:10156   */\n      mstore\n        /* \"#utility.yul\":9926:10163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10169:10535   */\n    tag_263:\n        /* \"#utility.yul\":10311:10314   */\n      0x00\n        /* \"#utility.yul\":10332:10399   */\n      tag_380\n        /* \"#utility.yul\":10396:10398   */\n      0x32\n        /* \"#utility.yul\":10391:10394   */\n      dup4\n        /* \"#utility.yul\":10332:10399   */\n      tag_233\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10325:10399   */\n      swap2\n      pop\n        /* \"#utility.yul\":10408:10501   */\n      tag_381\n        /* \"#utility.yul\":10497:10500   */\n      dup3\n        /* \"#utility.yul\":10408:10501   */\n      tag_262\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":10526:10528   */\n      0x40\n        /* \"#utility.yul\":10521:10524   */\n      dup3\n        /* \"#utility.yul\":10517:10529   */\n      add\n        /* \"#utility.yul\":10510:10529   */\n      swap1\n      pop\n        /* \"#utility.yul\":10169:10535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10541:10960   */\n    tag_111:\n        /* \"#utility.yul\":10707:10711   */\n      0x00\n        /* \"#utility.yul\":10745:10747   */\n      0x20\n        /* \"#utility.yul\":10734:10743   */\n      dup3\n        /* \"#utility.yul\":10730:10748   */\n      add\n        /* \"#utility.yul\":10722:10748   */\n      swap1\n      pop\n        /* \"#utility.yul\":10794:10803   */\n      dup2\n        /* \"#utility.yul\":10788:10792   */\n      dup2\n        /* \"#utility.yul\":10784:10804   */\n      sub\n        /* \"#utility.yul\":10780:10781   */\n      0x00\n        /* \"#utility.yul\":10769:10778   */\n      dup4\n        /* \"#utility.yul\":10765:10782   */\n      add\n        /* \"#utility.yul\":10758:10805   */\n      mstore\n        /* \"#utility.yul\":10822:10953   */\n      tag_383\n        /* \"#utility.yul\":10948:10952   */\n      dup2\n        /* \"#utility.yul\":10822:10953   */\n      tag_263\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":10814:10953   */\n      swap1\n      pop\n        /* \"#utility.yul\":10541:10960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10966:11160   */\n    tag_116:\n        /* \"#utility.yul\":11006:11010   */\n      0x00\n        /* \"#utility.yul\":11026:11046   */\n      tag_385\n        /* \"#utility.yul\":11044:11045   */\n      dup3\n        /* \"#utility.yul\":11026:11046   */\n      tag_244\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11021:11046   */\n      swap2\n      pop\n        /* \"#utility.yul\":11060:11080   */\n      tag_386\n        /* \"#utility.yul\":11078:11079   */\n      dup4\n        /* \"#utility.yul\":11060:11080   */\n      tag_244\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11055:11080   */\n      swap3\n      pop\n        /* \"#utility.yul\":11104:11105   */\n      dup3\n        /* \"#utility.yul\":11101:11102   */\n      dup3\n        /* \"#utility.yul\":11097:11106   */\n      sub\n        /* \"#utility.yul\":11089:11106   */\n      swap1\n      pop\n        /* \"#utility.yul\":11128:11129   */\n      dup2\n        /* \"#utility.yul\":11122:11126   */\n      dup2\n        /* \"#utility.yul\":11119:11130   */\n      gt\n        /* \"#utility.yul\":11116:11153   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":11133:11151   */\n      tag_388\n      tag_258\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11116:11153   */\n    tag_387:\n        /* \"#utility.yul\":10966:11160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11166:11346   */\n    tag_264:\n        /* \"#utility.yul\":11306:11338   */\n      0x4275726e2072617465206d6173206265206c657373207468616e203530250000\n        /* \"#utility.yul\":11302:11303   */\n      0x00\n        /* \"#utility.yul\":11294:11300   */\n      dup3\n        /* \"#utility.yul\":11290:11304   */\n      add\n        /* \"#utility.yul\":11283:11339   */\n      mstore\n        /* \"#utility.yul\":11166:11346   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11352:11718   */\n    tag_265:\n        /* \"#utility.yul\":11494:11497   */\n      0x00\n        /* \"#utility.yul\":11515:11582   */\n      tag_391\n        /* \"#utility.yul\":11579:11581   */\n      0x1e\n        /* \"#utility.yul\":11574:11577   */\n      dup4\n        /* \"#utility.yul\":11515:11582   */\n      tag_233\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":11508:11582   */\n      swap2\n      pop\n        /* \"#utility.yul\":11591:11684   */\n      tag_392\n        /* \"#utility.yul\":11680:11683   */\n      dup3\n        /* \"#utility.yul\":11591:11684   */\n      tag_264\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11709:11711   */\n      0x20\n        /* \"#utility.yul\":11704:11707   */\n      dup3\n        /* \"#utility.yul\":11700:11712   */\n      add\n        /* \"#utility.yul\":11693:11712   */\n      swap1\n      pop\n        /* \"#utility.yul\":11352:11718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11724:12143   */\n    tag_173:\n        /* \"#utility.yul\":11890:11894   */\n      0x00\n        /* \"#utility.yul\":11928:11930   */\n      0x20\n        /* \"#utility.yul\":11917:11926   */\n      dup3\n        /* \"#utility.yul\":11913:11931   */\n      add\n        /* \"#utility.yul\":11905:11931   */\n      swap1\n      pop\n        /* \"#utility.yul\":11977:11986   */\n      dup2\n        /* \"#utility.yul\":11971:11975   */\n      dup2\n        /* \"#utility.yul\":11967:11987   */\n      sub\n        /* \"#utility.yul\":11963:11964   */\n      0x00\n        /* \"#utility.yul\":11952:11961   */\n      dup4\n        /* \"#utility.yul\":11948:11965   */\n      add\n        /* \"#utility.yul\":11941:11988   */\n      mstore\n        /* \"#utility.yul\":12005:12136   */\n      tag_394\n        /* \"#utility.yul\":12131:12135   */\n      dup2\n        /* \"#utility.yul\":12005:12136   */\n      tag_265\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11997:12136   */\n      swap1\n      pop\n        /* \"#utility.yul\":11724:12143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12149:12591   */\n    tag_191:\n        /* \"#utility.yul\":12298:12302   */\n      0x00\n        /* \"#utility.yul\":12336:12338   */\n      0x60\n        /* \"#utility.yul\":12325:12334   */\n      dup3\n        /* \"#utility.yul\":12321:12339   */\n      add\n        /* \"#utility.yul\":12313:12339   */\n      swap1\n      pop\n        /* \"#utility.yul\":12349:12420   */\n      tag_396\n        /* \"#utility.yul\":12417:12418   */\n      0x00\n        /* \"#utility.yul\":12406:12415   */\n      dup4\n        /* \"#utility.yul\":12402:12419   */\n      add\n        /* \"#utility.yul\":12393:12399   */\n      dup7\n        /* \"#utility.yul\":12349:12420   */\n      tag_252\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":12430:12502   */\n      tag_397\n        /* \"#utility.yul\":12498:12500   */\n      0x20\n        /* \"#utility.yul\":12487:12496   */\n      dup4\n        /* \"#utility.yul\":12483:12501   */\n      add\n        /* \"#utility.yul\":12474:12480   */\n      dup6\n        /* \"#utility.yul\":12430:12502   */\n      tag_249\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":12512:12584   */\n      tag_398\n        /* \"#utility.yul\":12580:12582   */\n      0x40\n        /* \"#utility.yul\":12569:12578   */\n      dup4\n        /* \"#utility.yul\":12565:12583   */\n      add\n        /* \"#utility.yul\":12556:12562   */\n      dup5\n        /* \"#utility.yul\":12512:12584   */\n      tag_249\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12149:12591   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12597:12788   */\n    tag_225:\n        /* \"#utility.yul\":12637:12640   */\n      0x00\n        /* \"#utility.yul\":12656:12676   */\n      tag_400\n        /* \"#utility.yul\":12674:12675   */\n      dup3\n        /* \"#utility.yul\":12656:12676   */\n      tag_244\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12651:12676   */\n      swap2\n      pop\n        /* \"#utility.yul\":12690:12710   */\n      tag_401\n        /* \"#utility.yul\":12708:12709   */\n      dup4\n        /* \"#utility.yul\":12690:12710   */\n      tag_244\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12685:12710   */\n      swap3\n      pop\n        /* \"#utility.yul\":12733:12734   */\n      dup3\n        /* \"#utility.yul\":12730:12731   */\n      dup3\n        /* \"#utility.yul\":12726:12735   */\n      add\n        /* \"#utility.yul\":12719:12735   */\n      swap1\n      pop\n        /* \"#utility.yul\":12754:12757   */\n      dup1\n        /* \"#utility.yul\":12751:12752   */\n      dup3\n        /* \"#utility.yul\":12748:12758   */\n      gt\n        /* \"#utility.yul\":12745:12781   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":12761:12779   */\n      tag_403\n      tag_258\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":12745:12781   */\n    tag_402:\n        /* \"#utility.yul\":12597:12788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e422f4f1b7c161b2d3706c2d56f3caf8d169cb758df30f760ab18fb45524426d64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_973": {
									"entryPoint": null,
									"id": 973,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 489,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 294,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 627,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint16_fromMemory": {
									"entryPoint": 1624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 1577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10865:7",
										"nodeType": "YulBlock",
										"src": "0:10865:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "423:28:7",
													"nodeType": "YulBlock",
													"src": "423:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "443:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:12:7",
																"nodeType": "YulFunctionCall",
																"src": "433:12:7"
															},
															"nativeSrc": "433:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:7"
											},
											{
												"body": {
													"nativeSrc": "546:28:7",
													"nodeType": "YulBlock",
													"src": "546:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:7",
																		"nodeType": "YulLiteral",
																		"src": "563:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:7",
																		"nodeType": "YulLiteral",
																		"src": "566:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:7"
																},
																"nativeSrc": "556:12:7",
																"nodeType": "YulFunctionCall",
																"src": "556:12:7"
															},
															"nativeSrc": "556:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:7"
											},
											{
												"body": {
													"nativeSrc": "628:54:7",
													"nodeType": "YulBlock",
													"src": "628:54:7",
													"statements": [
														{
															"nativeSrc": "638:38:7",
															"nodeType": "YulAssignment",
															"src": "638:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:7",
																				"nodeType": "YulLiteral",
																				"src": "663:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:7"
																		},
																		"nativeSrc": "652:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:7",
																				"nodeType": "YulLiteral",
																				"src": "672:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:7"
																		},
																		"nativeSrc": "668:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:7"
																},
																"nativeSrc": "648:28:7",
																"nodeType": "YulFunctionCall",
																"src": "648:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:7",
														"nodeType": "YulTypedName",
														"src": "611:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:7",
														"nodeType": "YulTypedName",
														"src": "621:6:7",
														"type": ""
													}
												],
												"src": "580:102:7"
											},
											{
												"body": {
													"nativeSrc": "716:152:7",
													"nodeType": "YulBlock",
													"src": "716:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:7",
																		"nodeType": "YulLiteral",
																		"src": "733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:7",
																		"nodeType": "YulLiteral",
																		"src": "736:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:7"
																},
																"nativeSrc": "726:88:7",
																"nodeType": "YulFunctionCall",
																"src": "726:88:7"
															},
															"nativeSrc": "726:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:7",
																		"nodeType": "YulLiteral",
																		"src": "830:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:7",
																		"nodeType": "YulLiteral",
																		"src": "833:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:7"
																},
																"nativeSrc": "823:15:7",
																"nodeType": "YulFunctionCall",
																"src": "823:15:7"
															},
															"nativeSrc": "823:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "854:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:7",
																		"nodeType": "YulLiteral",
																		"src": "857:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:7"
																},
																"nativeSrc": "847:15:7",
																"nodeType": "YulFunctionCall",
																"src": "847:15:7"
															},
															"nativeSrc": "847:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:7"
											},
											{
												"body": {
													"nativeSrc": "917:238:7",
													"nodeType": "YulBlock",
													"src": "917:238:7",
													"statements": [
														{
															"nativeSrc": "927:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:7"
																		},
																		"nativeSrc": "957:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:7"
																},
																"nativeSrc": "945:40:7",
																"nodeType": "YulFunctionCall",
																"src": "945:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:7",
																	"nodeType": "YulTypedName",
																	"src": "931:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:7",
																"nodeType": "YulBlock",
																"src": "1096:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:7"
																			},
																			"nativeSrc": "1098:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:7"
																		},
																		"nativeSrc": "1098:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:7"
																		},
																		"nativeSrc": "1036:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:7"
																		},
																		"nativeSrc": "1072:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:7"
																},
																"nativeSrc": "1033:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:7"
															},
															"nativeSrc": "1030:88:7",
															"nodeType": "YulIf",
															"src": "1030:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:7"
																},
																"nativeSrc": "1127:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:7"
															},
															"nativeSrc": "1127:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:7",
														"nodeType": "YulTypedName",
														"src": "903:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:7",
														"nodeType": "YulTypedName",
														"src": "911:4:7",
														"type": ""
													}
												],
												"src": "874:281:7"
											},
											{
												"body": {
													"nativeSrc": "1202:88:7",
													"nodeType": "YulBlock",
													"src": "1202:88:7",
													"statements": [
														{
															"nativeSrc": "1212:30:7",
															"nodeType": "YulAssignment",
															"src": "1212:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:7"
																},
																"nativeSrc": "1222:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:7"
																},
																"nativeSrc": "1251:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:7"
															},
															"nativeSrc": "1251:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:7",
														"nodeType": "YulTypedName",
														"src": "1186:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:7",
														"nodeType": "YulTypedName",
														"src": "1195:6:7",
														"type": ""
													}
												],
												"src": "1161:129:7"
											},
											{
												"body": {
													"nativeSrc": "1363:241:7",
													"nodeType": "YulBlock",
													"src": "1363:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:7",
																"nodeType": "YulBlock",
																"src": "1468:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:7"
																			},
																			"nativeSrc": "1470:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:7"
																		},
																		"nativeSrc": "1470:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:7"
																},
																"nativeSrc": "1437:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:7"
															},
															"nativeSrc": "1434:56:7",
															"nodeType": "YulIf",
															"src": "1434:56:7"
														},
														{
															"nativeSrc": "1500:37:7",
															"nodeType": "YulAssignment",
															"src": "1500:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:7"
																},
																"nativeSrc": "1508:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:7"
																}
															]
														},
														{
															"nativeSrc": "1574:23:7",
															"nodeType": "YulAssignment",
															"src": "1574:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:7"
																},
																"nativeSrc": "1582:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:7",
														"nodeType": "YulTypedName",
														"src": "1347:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:7",
														"nodeType": "YulTypedName",
														"src": "1358:4:7",
														"type": ""
													}
												],
												"src": "1296:308:7"
											},
											{
												"body": {
													"nativeSrc": "1672:184:7",
													"nodeType": "YulBlock",
													"src": "1672:184:7",
													"statements": [
														{
															"nativeSrc": "1682:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:7",
																"nodeType": "YulLiteral",
																"src": "1691:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:7",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:7",
																"nodeType": "YulBlock",
																"src": "1751:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:7"
																					},
																					"nativeSrc": "1772:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:7"
																							},
																							"nativeSrc": "1791:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:7"
																					},
																					"nativeSrc": "1785:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:7"
																			},
																			"nativeSrc": "1765:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:7"
																		},
																		"nativeSrc": "1765:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:7"
																},
																"nativeSrc": "1709:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:7"
															},
															"nativeSrc": "1701:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:7",
																"nodeType": "YulBlock",
																"src": "1723:19:7",
																"statements": [
																	{
																		"nativeSrc": "1725:15:7",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:7",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:7"
																			},
																			"nativeSrc": "1730:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:7",
																"nodeType": "YulBlock",
																"src": "1705:3:7",
																"statements": []
															},
															"src": "1701:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:7"
																		},
																		"nativeSrc": "1830:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:7"
																},
																"nativeSrc": "1823:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:7"
															},
															"nativeSrc": "1823:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:7",
														"nodeType": "YulTypedName",
														"src": "1654:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:7",
														"nodeType": "YulTypedName",
														"src": "1659:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:7",
														"nodeType": "YulTypedName",
														"src": "1664:6:7",
														"type": ""
													}
												],
												"src": "1610:246:7"
											},
											{
												"body": {
													"nativeSrc": "1957:339:7",
													"nodeType": "YulBlock",
													"src": "1957:339:7",
													"statements": [
														{
															"nativeSrc": "1967:75:7",
															"nodeType": "YulAssignment",
															"src": "1967:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:7"
																		},
																		"nativeSrc": "1992:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:7"
																},
																"nativeSrc": "1976:66:7",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:7"
																},
																"nativeSrc": "2051:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:7"
															},
															"nativeSrc": "2051:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:7"
														},
														{
															"nativeSrc": "2081:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:7"
																},
																"nativeSrc": "2092:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:7",
																"nodeType": "YulBlock",
																"src": "2146:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:7"
																			},
																			"nativeSrc": "2148:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:7"
																		},
																		"nativeSrc": "2148:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:7"
																		},
																		"nativeSrc": "2123:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:7"
																},
																"nativeSrc": "2120:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:7"
															},
															"nativeSrc": "2117:112:7",
															"nodeType": "YulIf",
															"src": "2117:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:7"
																},
																"nativeSrc": "2238:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:7"
															},
															"nativeSrc": "2238:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:7",
														"nodeType": "YulTypedName",
														"src": "1930:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:7",
														"nodeType": "YulTypedName",
														"src": "1935:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:7",
														"nodeType": "YulTypedName",
														"src": "1943:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:7",
														"nodeType": "YulTypedName",
														"src": "1951:5:7",
														"type": ""
													}
												],
												"src": "1862:434:7"
											},
											{
												"body": {
													"nativeSrc": "2389:282:7",
													"nodeType": "YulBlock",
													"src": "2389:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:7",
																"nodeType": "YulBlock",
																"src": "2438:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:7"
																			},
																			"nativeSrc": "2440:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:7"
																		},
																		"nativeSrc": "2440:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:7"
																				},
																				"nativeSrc": "2413:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:7"
																		},
																		"nativeSrc": "2409:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:7"
																},
																"nativeSrc": "2402:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:7"
															},
															"nativeSrc": "2399:122:7",
															"nodeType": "YulIf",
															"src": "2399:122:7"
														},
														{
															"nativeSrc": "2530:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:7"
																},
																"nativeSrc": "2544:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:7",
															"nodeType": "YulAssignment",
															"src": "2566:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:7"
																		},
																		"nativeSrc": "2634:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:7"
																},
																"nativeSrc": "2575:90:7",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:7",
														"nodeType": "YulTypedName",
														"src": "2367:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:7",
														"nodeType": "YulTypedName",
														"src": "2375:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:7",
														"nodeType": "YulTypedName",
														"src": "2383:5:7",
														"type": ""
													}
												],
												"src": "2316:355:7"
											},
											{
												"body": {
													"nativeSrc": "2721:45:7",
													"nodeType": "YulBlock",
													"src": "2721:45:7",
													"statements": [
														{
															"nativeSrc": "2731:29:7",
															"nodeType": "YulAssignment",
															"src": "2731:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2746:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2746:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2753:6:7",
																		"nodeType": "YulLiteral",
																		"src": "2753:6:7",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:7"
																},
																"nativeSrc": "2742:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2742:18:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2731:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2731:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "2677:89:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2703:5:7",
														"nodeType": "YulTypedName",
														"src": "2703:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2713:7:7",
														"nodeType": "YulTypedName",
														"src": "2713:7:7",
														"type": ""
													}
												],
												"src": "2677:89:7"
											},
											{
												"body": {
													"nativeSrc": "2814:78:7",
													"nodeType": "YulBlock",
													"src": "2814:78:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2870:16:7",
																"nodeType": "YulBlock",
																"src": "2870:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2879:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2879:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2882:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2872:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2872:6:7"
																			},
																			"nativeSrc": "2872:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2872:12:7"
																		},
																		"nativeSrc": "2872:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2872:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2837:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2837:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2861:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "2844:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "2844:16:7"
																				},
																				"nativeSrc": "2844:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2844:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2834:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2834:2:7"
																		},
																		"nativeSrc": "2834:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2834:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2827:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2827:6:7"
																},
																"nativeSrc": "2827:42:7",
																"nodeType": "YulFunctionCall",
																"src": "2827:42:7"
															},
															"nativeSrc": "2824:62:7",
															"nodeType": "YulIf",
															"src": "2824:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "2772:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2807:5:7",
														"nodeType": "YulTypedName",
														"src": "2807:5:7",
														"type": ""
													}
												],
												"src": "2772:120:7"
											},
											{
												"body": {
													"nativeSrc": "2960:79:7",
													"nodeType": "YulBlock",
													"src": "2960:79:7",
													"statements": [
														{
															"nativeSrc": "2970:22:7",
															"nodeType": "YulAssignment",
															"src": "2970:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2985:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2985:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2979:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2979:5:7"
																},
																"nativeSrc": "2979:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2979:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2970:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3027:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3027:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "3001:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "3001:25:7"
																},
																"nativeSrc": "3001:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3001:32:7"
															},
															"nativeSrc": "3001:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "3001:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "2898:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2938:6:7",
														"nodeType": "YulTypedName",
														"src": "2938:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2946:3:7",
														"nodeType": "YulTypedName",
														"src": "2946:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2954:5:7",
														"nodeType": "YulTypedName",
														"src": "2954:5:7",
														"type": ""
													}
												],
												"src": "2898:141:7"
											},
											{
												"body": {
													"nativeSrc": "3175:877:7",
													"nodeType": "YulBlock",
													"src": "3175:877:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:7",
																"nodeType": "YulBlock",
																"src": "3221:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:7"
																			},
																			"nativeSrc": "3223:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:7"
																		},
																		"nativeSrc": "3223:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:7"
																		},
																		"nativeSrc": "3192:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:7"
																},
																"nativeSrc": "3188:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:7"
															},
															"nativeSrc": "3185:119:7",
															"nodeType": "YulIf",
															"src": "3185:119:7"
														},
														{
															"nativeSrc": "3314:291:7",
															"nodeType": "YulBlock",
															"src": "3314:291:7",
															"statements": [
																{
																	"nativeSrc": "3329:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3353:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3353:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3364:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3364:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3349:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3349:3:7"
																				},
																				"nativeSrc": "3349:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3349:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3343:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3343:5:7"
																		},
																		"nativeSrc": "3343:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3343:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3414:83:7",
																		"nodeType": "YulBlock",
																		"src": "3414:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3416:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3416:77:7"
																					},
																					"nativeSrc": "3416:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3416:79:7"
																				},
																				"nativeSrc": "3416:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3416:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3386:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3386:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3394:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3394:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3383:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3383:2:7"
																		},
																		"nativeSrc": "3383:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:30:7"
																	},
																	"nativeSrc": "3380:117:7",
																	"nodeType": "YulIf",
																	"src": "3380:117:7"
																},
																{
																	"nativeSrc": "3511:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3511:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3567:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3567:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3578:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3578:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3563:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3563:3:7"
																				},
																				"nativeSrc": "3563:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3563:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3587:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3587:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3521:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3521:41:7"
																		},
																		"nativeSrc": "3521:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3521:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3511:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3511:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3615:292:7",
															"nodeType": "YulBlock",
															"src": "3615:292:7",
															"statements": [
																{
																	"nativeSrc": "3630:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3630:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3654:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3654:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3665:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3665:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3650:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3650:3:7"
																				},
																				"nativeSrc": "3650:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3650:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3644:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3644:5:7"
																		},
																		"nativeSrc": "3644:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3644:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3634:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3634:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3716:83:7",
																		"nodeType": "YulBlock",
																		"src": "3716:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3718:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3718:77:7"
																					},
																					"nativeSrc": "3718:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3718:79:7"
																				},
																				"nativeSrc": "3718:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3718:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3688:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3688:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3696:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3696:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3685:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3685:2:7"
																		},
																		"nativeSrc": "3685:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3685:30:7"
																	},
																	"nativeSrc": "3682:117:7",
																	"nodeType": "YulIf",
																	"src": "3682:117:7"
																},
																{
																	"nativeSrc": "3813:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3813:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3869:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3869:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3880:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3880:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3865:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3865:3:7"
																				},
																				"nativeSrc": "3865:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3865:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3889:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3889:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3823:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3823:41:7"
																		},
																		"nativeSrc": "3823:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3813:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3813:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3917:128:7",
															"nodeType": "YulBlock",
															"src": "3917:128:7",
															"statements": [
																{
																	"nativeSrc": "3932:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3932:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3946:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3946:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3936:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3936:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3962:73:7",
																	"nodeType": "YulAssignment",
																	"src": "3962:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4007:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4007:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4018:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4018:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4003:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:7"
																				},
																				"nativeSrc": "4003:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4003:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4027:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4027:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "3972:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "3972:30:7"
																		},
																		"nativeSrc": "3972:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3972:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3962:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3962:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint16_fromMemory",
												"nativeSrc": "3045:1007:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3129:9:7",
														"nodeType": "YulTypedName",
														"src": "3129:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3140:7:7",
														"nodeType": "YulTypedName",
														"src": "3140:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3152:6:7",
														"nodeType": "YulTypedName",
														"src": "3152:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3160:6:7",
														"nodeType": "YulTypedName",
														"src": "3160:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3168:6:7",
														"nodeType": "YulTypedName",
														"src": "3168:6:7",
														"type": ""
													}
												],
												"src": "3045:1007:7"
											},
											{
												"body": {
													"nativeSrc": "4117:40:7",
													"nodeType": "YulBlock",
													"src": "4117:40:7",
													"statements": [
														{
															"nativeSrc": "4128:22:7",
															"nodeType": "YulAssignment",
															"src": "4128:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4144:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4144:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4138:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4138:5:7"
																},
																"nativeSrc": "4138:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4138:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4128:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4128:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4058:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4100:5:7",
														"nodeType": "YulTypedName",
														"src": "4100:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4110:6:7",
														"nodeType": "YulTypedName",
														"src": "4110:6:7",
														"type": ""
													}
												],
												"src": "4058:99:7"
											},
											{
												"body": {
													"nativeSrc": "4191:152:7",
													"nodeType": "YulBlock",
													"src": "4191:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4208:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4208:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4211:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4211:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4201:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4201:6:7"
																},
																"nativeSrc": "4201:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4201:88:7"
															},
															"nativeSrc": "4201:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4201:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4305:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4305:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4308:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4308:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4298:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4298:6:7"
																},
																"nativeSrc": "4298:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4298:15:7"
															},
															"nativeSrc": "4298:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4298:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4329:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4329:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4332:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4332:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4322:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4322:6:7"
																},
																"nativeSrc": "4322:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4322:15:7"
															},
															"nativeSrc": "4322:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4322:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4163:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4163:180:7"
											},
											{
												"body": {
													"nativeSrc": "4400:269:7",
													"nodeType": "YulBlock",
													"src": "4400:269:7",
													"statements": [
														{
															"nativeSrc": "4410:22:7",
															"nodeType": "YulAssignment",
															"src": "4410:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4424:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4424:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4430:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4430:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4420:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4420:3:7"
																},
																"nativeSrc": "4420:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4420:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4410:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4410:6:7"
																}
															]
														},
														{
															"nativeSrc": "4441:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4441:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4471:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4471:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4477:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4477:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4467:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4467:3:7"
																},
																"nativeSrc": "4467:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4467:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4445:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4445:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4518:51:7",
																"nodeType": "YulBlock",
																"src": "4518:51:7",
																"statements": [
																	{
																		"nativeSrc": "4532:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4532:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4546:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4546:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4554:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4554:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4542:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4542:3:7"
																			},
																			"nativeSrc": "4542:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4542:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4532:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4532:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4498:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4498:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4491:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4491:6:7"
																},
																"nativeSrc": "4491:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4491:26:7"
															},
															"nativeSrc": "4488:81:7",
															"nodeType": "YulIf",
															"src": "4488:81:7"
														},
														{
															"body": {
																"nativeSrc": "4621:42:7",
																"nodeType": "YulBlock",
																"src": "4621:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4635:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4635:16:7"
																			},
																			"nativeSrc": "4635:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4635:18:7"
																		},
																		"nativeSrc": "4635:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4635:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4585:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4585:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4608:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4608:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4616:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4616:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4605:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4605:2:7"
																		},
																		"nativeSrc": "4605:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4605:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4582:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4582:2:7"
																},
																"nativeSrc": "4582:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4582:38:7"
															},
															"nativeSrc": "4579:84:7",
															"nodeType": "YulIf",
															"src": "4579:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4349:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4384:4:7",
														"nodeType": "YulTypedName",
														"src": "4384:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4393:6:7",
														"nodeType": "YulTypedName",
														"src": "4393:6:7",
														"type": ""
													}
												],
												"src": "4349:320:7"
											},
											{
												"body": {
													"nativeSrc": "4729:87:7",
													"nodeType": "YulBlock",
													"src": "4729:87:7",
													"statements": [
														{
															"nativeSrc": "4739:11:7",
															"nodeType": "YulAssignment",
															"src": "4739:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "4747:3:7",
																"nodeType": "YulIdentifier",
																"src": "4747:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4739:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4739:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4767:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4767:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4770:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4760:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4760:6:7"
																},
																"nativeSrc": "4760:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4760:14:7"
															},
															"nativeSrc": "4760:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "4760:14:7"
														},
														{
															"nativeSrc": "4783:26:7",
															"nodeType": "YulAssignment",
															"src": "4783:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4801:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4801:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4804:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4804:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4791:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4791:9:7"
																},
																"nativeSrc": "4791:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4791:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4783:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4783:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4675:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4716:3:7",
														"nodeType": "YulTypedName",
														"src": "4716:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4724:4:7",
														"nodeType": "YulTypedName",
														"src": "4724:4:7",
														"type": ""
													}
												],
												"src": "4675:141:7"
											},
											{
												"body": {
													"nativeSrc": "4866:49:7",
													"nodeType": "YulBlock",
													"src": "4866:49:7",
													"statements": [
														{
															"nativeSrc": "4876:33:7",
															"nodeType": "YulAssignment",
															"src": "4876:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4894:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4894:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4901:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4901:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4890:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4890:3:7"
																		},
																		"nativeSrc": "4890:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4890:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4906:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4906:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4886:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4886:3:7"
																},
																"nativeSrc": "4886:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4886:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4876:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4876:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4822:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4849:5:7",
														"nodeType": "YulTypedName",
														"src": "4849:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4859:6:7",
														"nodeType": "YulTypedName",
														"src": "4859:6:7",
														"type": ""
													}
												],
												"src": "4822:93:7"
											},
											{
												"body": {
													"nativeSrc": "4974:54:7",
													"nodeType": "YulBlock",
													"src": "4974:54:7",
													"statements": [
														{
															"nativeSrc": "4984:37:7",
															"nodeType": "YulAssignment",
															"src": "4984:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5009:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5009:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5015:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5015:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5005:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:7"
																},
																"nativeSrc": "5005:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5005:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4984:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4984:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4921:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4949:4:7",
														"nodeType": "YulTypedName",
														"src": "4949:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4955:5:7",
														"nodeType": "YulTypedName",
														"src": "4955:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4965:8:7",
														"nodeType": "YulTypedName",
														"src": "4965:8:7",
														"type": ""
													}
												],
												"src": "4921:107:7"
											},
											{
												"body": {
													"nativeSrc": "5110:317:7",
													"nodeType": "YulBlock",
													"src": "5110:317:7",
													"statements": [
														{
															"nativeSrc": "5120:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5120:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5141:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5141:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5153:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5153:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5137:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5137:3:7"
																},
																"nativeSrc": "5137:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5137:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5124:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5124:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5164:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5164:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5195:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5195:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5206:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5176:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5176:18:7"
																},
																"nativeSrc": "5176:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5176:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5168:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5168:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5282:51:7",
															"nodeType": "YulAssignment",
															"src": "5282:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5313:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5313:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5324:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5324:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5294:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5294:18:7"
																},
																"nativeSrc": "5294:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5294:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5282:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5282:8:7"
																}
															]
														},
														{
															"nativeSrc": "5342:30:7",
															"nodeType": "YulAssignment",
															"src": "5342:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5355:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5355:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5366:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5366:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5362:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5362:3:7"
																		},
																		"nativeSrc": "5362:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5362:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5351:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5351:3:7"
																},
																"nativeSrc": "5351:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5351:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5342:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5342:5:7"
																}
															]
														},
														{
															"nativeSrc": "5381:40:7",
															"nodeType": "YulAssignment",
															"src": "5381:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5394:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5394:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5405:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5405:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5415:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5415:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5401:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5401:3:7"
																		},
																		"nativeSrc": "5401:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5401:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5391:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5391:2:7"
																},
																"nativeSrc": "5391:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5391:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5381:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5034:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5071:5:7",
														"nodeType": "YulTypedName",
														"src": "5071:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5078:10:7",
														"nodeType": "YulTypedName",
														"src": "5078:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5090:8:7",
														"nodeType": "YulTypedName",
														"src": "5090:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5103:6:7",
														"nodeType": "YulTypedName",
														"src": "5103:6:7",
														"type": ""
													}
												],
												"src": "5034:393:7"
											},
											{
												"body": {
													"nativeSrc": "5478:32:7",
													"nodeType": "YulBlock",
													"src": "5478:32:7",
													"statements": [
														{
															"nativeSrc": "5488:16:7",
															"nodeType": "YulAssignment",
															"src": "5488:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "5499:5:7",
																"nodeType": "YulIdentifier",
																"src": "5499:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5488:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5488:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5433:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5460:5:7",
														"nodeType": "YulTypedName",
														"src": "5460:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5470:7:7",
														"nodeType": "YulTypedName",
														"src": "5470:7:7",
														"type": ""
													}
												],
												"src": "5433:77:7"
											},
											{
												"body": {
													"nativeSrc": "5548:28:7",
													"nodeType": "YulBlock",
													"src": "5548:28:7",
													"statements": [
														{
															"nativeSrc": "5558:12:7",
															"nodeType": "YulAssignment",
															"src": "5558:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5565:5:7",
																"nodeType": "YulIdentifier",
																"src": "5565:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5558:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5558:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5516:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5534:5:7",
														"nodeType": "YulTypedName",
														"src": "5534:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5544:3:7",
														"nodeType": "YulTypedName",
														"src": "5544:3:7",
														"type": ""
													}
												],
												"src": "5516:60:7"
											},
											{
												"body": {
													"nativeSrc": "5642:82:7",
													"nodeType": "YulBlock",
													"src": "5642:82:7",
													"statements": [
														{
															"nativeSrc": "5652:66:7",
															"nodeType": "YulAssignment",
															"src": "5652:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5710:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5710:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5692:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5692:17:7"
																				},
																				"nativeSrc": "5692:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5692:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5683:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5683:8:7"
																		},
																		"nativeSrc": "5683:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5683:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5665:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5665:17:7"
																},
																"nativeSrc": "5665:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5665:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5652:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5652:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5582:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5622:5:7",
														"nodeType": "YulTypedName",
														"src": "5622:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5632:9:7",
														"nodeType": "YulTypedName",
														"src": "5632:9:7",
														"type": ""
													}
												],
												"src": "5582:142:7"
											},
											{
												"body": {
													"nativeSrc": "5777:28:7",
													"nodeType": "YulBlock",
													"src": "5777:28:7",
													"statements": [
														{
															"nativeSrc": "5787:12:7",
															"nodeType": "YulAssignment",
															"src": "5787:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5794:5:7",
																"nodeType": "YulIdentifier",
																"src": "5794:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5787:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5787:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5730:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5763:5:7",
														"nodeType": "YulTypedName",
														"src": "5763:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5773:3:7",
														"nodeType": "YulTypedName",
														"src": "5773:3:7",
														"type": ""
													}
												],
												"src": "5730:75:7"
											},
											{
												"body": {
													"nativeSrc": "5887:193:7",
													"nodeType": "YulBlock",
													"src": "5887:193:7",
													"statements": [
														{
															"nativeSrc": "5897:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5897:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5952:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5952:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5921:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5921:30:7"
																},
																"nativeSrc": "5921:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5921:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5901:16:7",
																	"nodeType": "YulTypedName",
																	"src": "5901:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5976:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6016:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6016:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6010:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6010:5:7"
																				},
																				"nativeSrc": "6010:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6010:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6023:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6023:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6055:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6055:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6031:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6031:23:7"
																				},
																				"nativeSrc": "6031:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6031:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5982:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "5982:27:7"
																		},
																		"nativeSrc": "5982:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5982:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5969:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5969:6:7"
																},
																"nativeSrc": "5969:105:7",
																"nodeType": "YulFunctionCall",
																"src": "5969:105:7"
															},
															"nativeSrc": "5969:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "5969:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5811:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5864:4:7",
														"nodeType": "YulTypedName",
														"src": "5864:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5870:6:7",
														"nodeType": "YulTypedName",
														"src": "5870:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5878:7:7",
														"nodeType": "YulTypedName",
														"src": "5878:7:7",
														"type": ""
													}
												],
												"src": "5811:269:7"
											},
											{
												"body": {
													"nativeSrc": "6135:24:7",
													"nodeType": "YulBlock",
													"src": "6135:24:7",
													"statements": [
														{
															"nativeSrc": "6145:8:7",
															"nodeType": "YulAssignment",
															"src": "6145:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6152:1:7",
																"nodeType": "YulLiteral",
																"src": "6152:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6145:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6145:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6086:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6131:3:7",
														"nodeType": "YulTypedName",
														"src": "6131:3:7",
														"type": ""
													}
												],
												"src": "6086:73:7"
											},
											{
												"body": {
													"nativeSrc": "6218:136:7",
													"nodeType": "YulBlock",
													"src": "6218:136:7",
													"statements": [
														{
															"nativeSrc": "6228:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6228:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6242:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6242:30:7"
																},
																"nativeSrc": "6242:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6242:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6232:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6232:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6327:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6327:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6333:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6333:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6341:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6341:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6283:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6283:43:7"
																},
																"nativeSrc": "6283:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6283:65:7"
															},
															"nativeSrc": "6283:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6283:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6165:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6204:4:7",
														"nodeType": "YulTypedName",
														"src": "6204:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6210:6:7",
														"nodeType": "YulTypedName",
														"src": "6210:6:7",
														"type": ""
													}
												],
												"src": "6165:189:7"
											},
											{
												"body": {
													"nativeSrc": "6410:136:7",
													"nodeType": "YulBlock",
													"src": "6410:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6477:63:7",
																"nodeType": "YulBlock",
																"src": "6477:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6521:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6521:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6528:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6528:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6491:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6491:29:7"
																			},
																			"nativeSrc": "6491:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:39:7"
																		},
																		"nativeSrc": "6491:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6491:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6430:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6430:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6437:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6437:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6427:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6427:2:7"
																},
																"nativeSrc": "6427:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6427:14:7"
															},
															"nativeSrc": "6420:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6442:26:7",
																"nodeType": "YulBlock",
																"src": "6442:26:7",
																"statements": [
																	{
																		"nativeSrc": "6444:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6444:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6457:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6457:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6464:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6464:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6453:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6453:3:7"
																			},
																			"nativeSrc": "6453:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6453:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6444:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6424:2:7",
																"nodeType": "YulBlock",
																"src": "6424:2:7",
																"statements": []
															},
															"src": "6420:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6360:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6398:5:7",
														"nodeType": "YulTypedName",
														"src": "6398:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6405:3:7",
														"nodeType": "YulTypedName",
														"src": "6405:3:7",
														"type": ""
													}
												],
												"src": "6360:186:7"
											},
											{
												"body": {
													"nativeSrc": "6631:464:7",
													"nodeType": "YulBlock",
													"src": "6631:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6657:431:7",
																"nodeType": "YulBlock",
																"src": "6657:431:7",
																"statements": [
																	{
																		"nativeSrc": "6671:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6671:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6719:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6719:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6687:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "6687:31:7"
																			},
																			"nativeSrc": "6687:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6687:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6675:8:7",
																				"nodeType": "YulTypedName",
																				"src": "6675:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6738:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6738:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6761:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6761:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6789:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6789:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6771:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "6771:17:7"
																					},
																					"nativeSrc": "6771:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6771:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6757:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6757:3:7"
																			},
																			"nativeSrc": "6757:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6757:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6742:11:7",
																				"nodeType": "YulTypedName",
																				"src": "6742:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6958:27:7",
																			"nodeType": "YulBlock",
																			"src": "6958:27:7",
																			"statements": [
																				{
																					"nativeSrc": "6960:23:7",
																					"nodeType": "YulAssignment",
																					"src": "6960:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6975:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "6975:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6960:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "6960:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6942:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6942:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6954:2:7",
																					"nodeType": "YulLiteral",
																					"src": "6954:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6939:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6939:2:7"
																			},
																			"nativeSrc": "6939:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6939:18:7"
																		},
																		"nativeSrc": "6936:49:7",
																		"nodeType": "YulIf",
																		"src": "6936:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7027:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7027:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7044:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7044:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7072:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7072:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7054:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7054:17:7"
																							},
																							"nativeSrc": "7054:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7054:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7040:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7040:3:7"
																					},
																					"nativeSrc": "7040:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7040:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6998:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "6998:28:7"
																			},
																			"nativeSrc": "6998:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6998:80:7"
																		},
																		"nativeSrc": "6998:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6998:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6648:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6648:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6653:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6645:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6645:2:7"
																},
																"nativeSrc": "6645:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6645:11:7"
															},
															"nativeSrc": "6642:446:7",
															"nodeType": "YulIf",
															"src": "6642:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6552:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6607:5:7",
														"nodeType": "YulTypedName",
														"src": "6607:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6614:3:7",
														"nodeType": "YulTypedName",
														"src": "6614:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6619:10:7",
														"nodeType": "YulTypedName",
														"src": "6619:10:7",
														"type": ""
													}
												],
												"src": "6552:543:7"
											},
											{
												"body": {
													"nativeSrc": "7164:54:7",
													"nodeType": "YulBlock",
													"src": "7164:54:7",
													"statements": [
														{
															"nativeSrc": "7174:37:7",
															"nodeType": "YulAssignment",
															"src": "7174:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7199:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7199:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7205:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7205:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7195:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:7"
																},
																"nativeSrc": "7195:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7195:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7174:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7174:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7101:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7139:4:7",
														"nodeType": "YulTypedName",
														"src": "7139:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7145:5:7",
														"nodeType": "YulTypedName",
														"src": "7145:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7155:8:7",
														"nodeType": "YulTypedName",
														"src": "7155:8:7",
														"type": ""
													}
												],
												"src": "7101:117:7"
											},
											{
												"body": {
													"nativeSrc": "7275:118:7",
													"nodeType": "YulBlock",
													"src": "7275:118:7",
													"statements": [
														{
															"nativeSrc": "7285:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7285:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7334:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7334:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7337:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7337:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7330:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7330:3:7"
																				},
																				"nativeSrc": "7330:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7330:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7349:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7349:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7345:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7345:3:7"
																				},
																				"nativeSrc": "7345:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7345:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7301:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7301:28:7"
																		},
																		"nativeSrc": "7301:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7301:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7297:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7297:3:7"
																},
																"nativeSrc": "7297:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7297:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7289:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7289:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7362:25:7",
															"nodeType": "YulAssignment",
															"src": "7362:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7376:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7376:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7382:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7382:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7372:3:7"
																},
																"nativeSrc": "7372:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7372:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7362:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7224:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7252:4:7",
														"nodeType": "YulTypedName",
														"src": "7252:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7258:5:7",
														"nodeType": "YulTypedName",
														"src": "7258:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7268:6:7",
														"nodeType": "YulTypedName",
														"src": "7268:6:7",
														"type": ""
													}
												],
												"src": "7224:169:7"
											},
											{
												"body": {
													"nativeSrc": "7479:214:7",
													"nodeType": "YulBlock",
													"src": "7479:214:7",
													"statements": [
														{
															"nativeSrc": "7612:37:7",
															"nodeType": "YulAssignment",
															"src": "7612:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7639:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7639:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7645:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7645:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7620:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7620:18:7"
																},
																"nativeSrc": "7620:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7620:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7612:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7612:4:7"
																}
															]
														},
														{
															"nativeSrc": "7658:29:7",
															"nodeType": "YulAssignment",
															"src": "7658:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7669:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7669:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7679:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7679:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7682:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7682:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7675:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7675:3:7"
																		},
																		"nativeSrc": "7675:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7675:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7666:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7666:2:7"
																},
																"nativeSrc": "7666:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7666:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7658:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7658:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7398:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7460:4:7",
														"nodeType": "YulTypedName",
														"src": "7460:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7466:3:7",
														"nodeType": "YulTypedName",
														"src": "7466:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7474:4:7",
														"nodeType": "YulTypedName",
														"src": "7474:4:7",
														"type": ""
													}
												],
												"src": "7398:295:7"
											},
											{
												"body": {
													"nativeSrc": "7790:1303:7",
													"nodeType": "YulBlock",
													"src": "7790:1303:7",
													"statements": [
														{
															"nativeSrc": "7801:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7801:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7848:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7848:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7815:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "7815:32:7"
																},
																"nativeSrc": "7815:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7815:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7805:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7805:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7937:22:7",
																"nodeType": "YulBlock",
																"src": "7937:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7939:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7939:16:7"
																			},
																			"nativeSrc": "7939:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7939:18:7"
																		},
																		"nativeSrc": "7939:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7939:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7909:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7909:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7917:18:7",
																		"nodeType": "YulLiteral",
																		"src": "7917:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7906:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7906:2:7"
																},
																"nativeSrc": "7906:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7906:30:7"
															},
															"nativeSrc": "7903:56:7",
															"nodeType": "YulIf",
															"src": "7903:56:7"
														},
														{
															"nativeSrc": "7969:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7969:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8015:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8015:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8009:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8009:5:7"
																		},
																		"nativeSrc": "8009:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8009:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7983:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "7983:25:7"
																},
																"nativeSrc": "7983:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7983:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7973:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7973:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8114:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8114:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8120:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8120:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8128:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8128:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8068:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8068:45:7"
																},
																"nativeSrc": "8068:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8068:67:7"
															},
															"nativeSrc": "8068:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8068:67:7"
														},
														{
															"nativeSrc": "8145:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8145:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8162:1:7",
																"nodeType": "YulLiteral",
																"src": "8162:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8149:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8149:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8173:17:7",
															"nodeType": "YulAssignment",
															"src": "8173:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8186:4:7",
																"nodeType": "YulLiteral",
																"src": "8186:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8173:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8173:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8237:611:7",
																		"nodeType": "YulBlock",
																		"src": "8237:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8251:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8251:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8270:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8270:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8282:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8282:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8278:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8278:3:7"
																							},
																							"nativeSrc": "8278:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8278:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8266:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8266:3:7"
																					},
																					"nativeSrc": "8266:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8266:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8255:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8255:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8302:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8302:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8348:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8348:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8316:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8316:31:7"
																					},
																					"nativeSrc": "8316:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8316:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8306:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8306:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8366:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8366:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8375:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8375:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8370:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8370:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8434:163:7",
																					"nodeType": "YulBlock",
																					"src": "8434:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8459:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8459:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8477:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8477:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8482:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8482:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8473:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8473:3:7"
																												},
																												"nativeSrc": "8473:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8473:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8467:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8467:5:7"
																										},
																										"nativeSrc": "8467:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8467:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8452:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8452:6:7"
																								},
																								"nativeSrc": "8452:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8452:42:7"
																							},
																							"nativeSrc": "8452:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8452:42:7"
																						},
																						{
																							"nativeSrc": "8511:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8511:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8525:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8525:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8533:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8533:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8521:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8521:3:7"
																								},
																								"nativeSrc": "8521:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8521:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8511:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8511:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8552:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8552:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8569:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8569:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8580:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8580:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8565:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8565:3:7"
																								},
																								"nativeSrc": "8565:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8565:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8552:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8552:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8400:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8400:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8403:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8403:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8397:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8397:2:7"
																					},
																					"nativeSrc": "8397:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8397:14:7"
																				},
																				"nativeSrc": "8389:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8412:21:7",
																					"nodeType": "YulBlock",
																					"src": "8412:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8414:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8414:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8423:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8423:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8426:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8426:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8419:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8419:3:7"
																								},
																								"nativeSrc": "8419:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8419:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8414:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8414:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8393:3:7",
																					"nodeType": "YulBlock",
																					"src": "8393:3:7",
																					"statements": []
																				},
																				"src": "8389:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8633:156:7",
																					"nodeType": "YulBlock",
																					"src": "8633:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8651:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8651:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8678:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8678:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8683:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8683:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8674:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8674:3:7"
																										},
																										"nativeSrc": "8674:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8674:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8668:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8668:5:7"
																								},
																								"nativeSrc": "8668:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8668:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8655:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8655:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8718:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8718:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8745:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8745:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8760:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "8760:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8768:4:7",
																														"nodeType": "YulLiteral",
																														"src": "8768:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8756:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8756:3:7"
																												},
																												"nativeSrc": "8756:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8756:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8726:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "8726:18:7"
																										},
																										"nativeSrc": "8726:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8726:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8711:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8711:6:7"
																								},
																								"nativeSrc": "8711:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8711:64:7"
																							},
																							"nativeSrc": "8711:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8711:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8616:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8616:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8625:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8625:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8613:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8613:2:7"
																					},
																					"nativeSrc": "8613:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8613:19:7"
																				},
																				"nativeSrc": "8610:179:7",
																				"nodeType": "YulIf",
																				"src": "8610:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8809:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8809:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8823:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "8823:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8831:1:7",
																											"nodeType": "YulLiteral",
																											"src": "8831:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8819:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "8819:3:7"
																									},
																									"nativeSrc": "8819:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "8819:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8835:1:7",
																									"nodeType": "YulLiteral",
																									"src": "8835:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8815:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8815:3:7"
																							},
																							"nativeSrc": "8815:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8815:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8802:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8802:6:7"
																					},
																					"nativeSrc": "8802:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8802:36:7"
																				},
																				"nativeSrc": "8802:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8802:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8230:618:7",
																	"nodeType": "YulCase",
																	"src": "8230:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8235:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8235:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8865:222:7",
																		"nodeType": "YulBlock",
																		"src": "8865:222:7",
																		"statements": [
																			{
																				"nativeSrc": "8879:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8879:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8892:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8892:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8883:5:7",
																						"nodeType": "YulTypedName",
																						"src": "8883:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8916:67:7",
																					"nodeType": "YulBlock",
																					"src": "8916:67:7",
																					"statements": [
																						{
																							"nativeSrc": "8934:35:7",
																							"nodeType": "YulAssignment",
																							"src": "8934:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8953:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8953:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8958:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8958:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8949:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8949:3:7"
																										},
																										"nativeSrc": "8949:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8949:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8943:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8943:5:7"
																								},
																								"nativeSrc": "8943:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8943:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8934:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8934:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8909:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8909:6:7"
																				},
																				"nativeSrc": "8906:77:7",
																				"nodeType": "YulIf",
																				"src": "8906:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9003:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9003:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9062:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9062:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9069:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9069:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9009:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9009:52:7"
																							},
																							"nativeSrc": "9009:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9009:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8996:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8996:6:7"
																					},
																					"nativeSrc": "8996:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8996:81:7"
																				},
																				"nativeSrc": "8996:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8996:81:7"
																			}
																		]
																	},
																	"nativeSrc": "8857:230:7",
																	"nodeType": "YulCase",
																	"src": "8857:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8210:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8210:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8218:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8218:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8207:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8207:2:7"
																},
																"nativeSrc": "8207:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8207:14:7"
															},
															"nativeSrc": "8200:887:7",
															"nodeType": "YulSwitch",
															"src": "8200:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7698:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7779:4:7",
														"nodeType": "YulTypedName",
														"src": "7779:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7785:3:7",
														"nodeType": "YulTypedName",
														"src": "7785:3:7",
														"type": ""
													}
												],
												"src": "7698:1395:7"
											},
											{
												"body": {
													"nativeSrc": "9144:81:7",
													"nodeType": "YulBlock",
													"src": "9144:81:7",
													"statements": [
														{
															"nativeSrc": "9154:65:7",
															"nodeType": "YulAssignment",
															"src": "9154:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9169:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9169:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9176:42:7",
																		"nodeType": "YulLiteral",
																		"src": "9176:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9165:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9165:3:7"
																},
																"nativeSrc": "9165:54:7",
																"nodeType": "YulFunctionCall",
																"src": "9165:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9154:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9154:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9099:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9126:5:7",
														"nodeType": "YulTypedName",
														"src": "9126:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9136:7:7",
														"nodeType": "YulTypedName",
														"src": "9136:7:7",
														"type": ""
													}
												],
												"src": "9099:126:7"
											},
											{
												"body": {
													"nativeSrc": "9276:51:7",
													"nodeType": "YulBlock",
													"src": "9276:51:7",
													"statements": [
														{
															"nativeSrc": "9286:35:7",
															"nodeType": "YulAssignment",
															"src": "9286:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9315:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9315:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9297:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9297:17:7"
																},
																"nativeSrc": "9297:24:7",
																"nodeType": "YulFunctionCall",
																"src": "9297:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9286:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9286:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9231:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9258:5:7",
														"nodeType": "YulTypedName",
														"src": "9258:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9268:7:7",
														"nodeType": "YulTypedName",
														"src": "9268:7:7",
														"type": ""
													}
												],
												"src": "9231:96:7"
											},
											{
												"body": {
													"nativeSrc": "9398:53:7",
													"nodeType": "YulBlock",
													"src": "9398:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9415:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9415:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9438:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9438:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9420:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9420:17:7"
																		},
																		"nativeSrc": "9420:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9420:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9408:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9408:6:7"
																},
																"nativeSrc": "9408:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9408:37:7"
															},
															"nativeSrc": "9408:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9408:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9333:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9386:5:7",
														"nodeType": "YulTypedName",
														"src": "9386:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9393:3:7",
														"nodeType": "YulTypedName",
														"src": "9393:3:7",
														"type": ""
													}
												],
												"src": "9333:118:7"
											},
											{
												"body": {
													"nativeSrc": "9555:124:7",
													"nodeType": "YulBlock",
													"src": "9555:124:7",
													"statements": [
														{
															"nativeSrc": "9565:26:7",
															"nodeType": "YulAssignment",
															"src": "9565:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9577:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9577:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9588:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9588:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9573:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9573:3:7"
																},
																"nativeSrc": "9573:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9573:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9565:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9565:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9645:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9645:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9658:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9658:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9669:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9669:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9654:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9654:3:7"
																		},
																		"nativeSrc": "9654:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9654:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9601:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9601:43:7"
																},
																"nativeSrc": "9601:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9601:71:7"
															},
															"nativeSrc": "9601:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9601:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9457:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9527:9:7",
														"nodeType": "YulTypedName",
														"src": "9527:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9539:6:7",
														"nodeType": "YulTypedName",
														"src": "9539:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9550:4:7",
														"nodeType": "YulTypedName",
														"src": "9550:4:7",
														"type": ""
													}
												],
												"src": "9457:222:7"
											},
											{
												"body": {
													"nativeSrc": "9713:152:7",
													"nodeType": "YulBlock",
													"src": "9713:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9730:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9730:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9733:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9733:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9723:6:7"
																},
																"nativeSrc": "9723:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9723:88:7"
															},
															"nativeSrc": "9723:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9723:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9827:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9827:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9830:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9830:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9820:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9820:6:7"
																},
																"nativeSrc": "9820:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9820:15:7"
															},
															"nativeSrc": "9820:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9820:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9851:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9851:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9854:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9854:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9844:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9844:6:7"
																},
																"nativeSrc": "9844:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9844:15:7"
															},
															"nativeSrc": "9844:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9844:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9685:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9685:180:7"
											},
											{
												"body": {
													"nativeSrc": "9915:147:7",
													"nodeType": "YulBlock",
													"src": "9915:147:7",
													"statements": [
														{
															"nativeSrc": "9925:25:7",
															"nodeType": "YulAssignment",
															"src": "9925:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9948:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9948:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9930:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9930:17:7"
																},
																"nativeSrc": "9930:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9930:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9925:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9925:1:7"
																}
															]
														},
														{
															"nativeSrc": "9959:25:7",
															"nodeType": "YulAssignment",
															"src": "9959:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9982:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9982:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9964:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9964:17:7"
																},
																"nativeSrc": "9964:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9964:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9959:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9959:1:7"
																}
															]
														},
														{
															"nativeSrc": "9993:16:7",
															"nodeType": "YulAssignment",
															"src": "9993:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10004:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10004:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10007:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10007:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10000:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10000:3:7"
																},
																"nativeSrc": "10000:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10000:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9993:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9993:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10033:22:7",
																"nodeType": "YulBlock",
																"src": "10033:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10035:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10035:16:7"
																			},
																			"nativeSrc": "10035:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10035:18:7"
																		},
																		"nativeSrc": "10035:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10035:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10025:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10025:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10028:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10028:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10022:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10022:2:7"
																},
																"nativeSrc": "10022:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10022:10:7"
															},
															"nativeSrc": "10019:36:7",
															"nodeType": "YulIf",
															"src": "10019:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9871:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9902:1:7",
														"nodeType": "YulTypedName",
														"src": "9902:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9905:1:7",
														"nodeType": "YulTypedName",
														"src": "9905:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9911:3:7",
														"nodeType": "YulTypedName",
														"src": "9911:3:7",
														"type": ""
													}
												],
												"src": "9871:191:7"
											},
											{
												"body": {
													"nativeSrc": "10133:53:7",
													"nodeType": "YulBlock",
													"src": "10133:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10150:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10150:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10173:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10173:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10155:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10155:17:7"
																		},
																		"nativeSrc": "10155:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10155:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10143:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10143:6:7"
																},
																"nativeSrc": "10143:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10143:37:7"
															},
															"nativeSrc": "10143:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10143:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10068:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10121:5:7",
														"nodeType": "YulTypedName",
														"src": "10121:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10128:3:7",
														"nodeType": "YulTypedName",
														"src": "10128:3:7",
														"type": ""
													}
												],
												"src": "10068:118:7"
											},
											{
												"body": {
													"nativeSrc": "10346:288:7",
													"nodeType": "YulBlock",
													"src": "10346:288:7",
													"statements": [
														{
															"nativeSrc": "10356:26:7",
															"nodeType": "YulAssignment",
															"src": "10356:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10368:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10368:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10379:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10379:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10364:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10364:3:7"
																},
																"nativeSrc": "10364:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10364:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10356:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10356:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10436:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10436:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10449:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10449:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10460:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10460:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10445:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10445:3:7"
																		},
																		"nativeSrc": "10445:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10445:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10392:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10392:43:7"
																},
																"nativeSrc": "10392:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10392:71:7"
															},
															"nativeSrc": "10392:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10392:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10517:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10517:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10530:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10530:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10541:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10541:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10526:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10526:3:7"
																		},
																		"nativeSrc": "10526:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10526:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10473:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10473:43:7"
																},
																"nativeSrc": "10473:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10473:72:7"
															},
															"nativeSrc": "10473:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10473:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10599:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10599:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10612:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10612:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10623:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10623:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10608:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10608:3:7"
																		},
																		"nativeSrc": "10608:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10608:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10555:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10555:43:7"
																},
																"nativeSrc": "10555:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10555:72:7"
															},
															"nativeSrc": "10555:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10555:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10192:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10302:9:7",
														"nodeType": "YulTypedName",
														"src": "10302:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10314:6:7",
														"nodeType": "YulTypedName",
														"src": "10314:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10322:6:7",
														"nodeType": "YulTypedName",
														"src": "10322:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10330:6:7",
														"nodeType": "YulTypedName",
														"src": "10330:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10341:4:7",
														"nodeType": "YulTypedName",
														"src": "10341:4:7",
														"type": ""
													}
												],
												"src": "10192:442:7"
											},
											{
												"body": {
													"nativeSrc": "10738:124:7",
													"nodeType": "YulBlock",
													"src": "10738:124:7",
													"statements": [
														{
															"nativeSrc": "10748:26:7",
															"nodeType": "YulAssignment",
															"src": "10748:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10760:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10760:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10771:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10771:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10756:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10756:3:7"
																},
																"nativeSrc": "10756:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10756:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10748:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10748:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10828:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10828:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10841:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10841:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10852:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10852:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10837:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10837:3:7"
																		},
																		"nativeSrc": "10837:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10837:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10784:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10784:43:7"
																},
																"nativeSrc": "10784:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10784:71:7"
															},
															"nativeSrc": "10784:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10784:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10640:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10710:9:7",
														"nodeType": "YulTypedName",
														"src": "10710:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10722:6:7",
														"nodeType": "YulTypedName",
														"src": "10722:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10733:4:7",
														"nodeType": "YulTypedName",
														"src": "10733:4:7",
														"type": ""
													}
												],
												"src": "10640:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint16_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200246b3803806200246b833981810160405281019062000036919062000658565b33838381600390816200004a919062000926565b5080600490816200005c919062000926565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c9919062000a4d565b60405180910390fd5b620000e3816200012660201b60201c565b5080600560146101000a81548161ffff021916908361ffff1602179055506200011d3369d3c21bcecceda1000000620001e960201b60201c565b50505062000b36565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200025c575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000253919062000a4d565b60405180910390fd5b6200026f5f83836200027360201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620002c7578060025f828254620002ba919062000a95565b9250508190555062000398565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000353578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200034a9392919062000ae0565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620003e1578060025f82825403925050819055506200042b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200048a919062000b1b565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620004f882620004b0565b810181811067ffffffffffffffff821117156200051a5762000519620004c0565b5b80604052505050565b5f6200052e62000497565b90506200053c8282620004ed565b919050565b5f67ffffffffffffffff8211156200055e576200055d620004c0565b5b6200056982620004b0565b9050602081019050919050565b5f5b838110156200059557808201518184015260208101905062000578565b5f8484015250505050565b5f620005b6620005b08462000541565b62000523565b905082815260208101848484011115620005d557620005d4620004ac565b5b620005e284828562000576565b509392505050565b5f82601f830112620006015762000600620004a8565b5b815162000613848260208601620005a0565b91505092915050565b5f61ffff82169050919050565b62000634816200061c565b81146200063f575f80fd5b50565b5f81519050620006528162000629565b92915050565b5f805f60608486031215620006725762000671620004a0565b5b5f84015167ffffffffffffffff811115620006925762000691620004a4565b5b620006a086828701620005ea565b935050602084015167ffffffffffffffff811115620006c457620006c3620004a4565b5b620006d286828701620005ea565b9250506040620006e58682870162000642565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200073e57607f821691505b602082108103620007545762000753620006f9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007b87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200077b565b620007c486836200077b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200080e620008086200080284620007dc565b620007e5565b620007dc565b9050919050565b5f819050919050565b6200082983620007ee565b62000841620008388262000815565b84845462000787565b825550505050565b5f90565b6200085762000849565b620008648184846200081e565b505050565b5b818110156200088b576200087f5f826200084d565b6001810190506200086a565b5050565b601f821115620008da57620008a4816200075a565b620008af846200076c565b81016020851015620008bf578190505b620008d7620008ce856200076c565b83018262000869565b50505b505050565b5f82821c905092915050565b5f620008fc5f1984600802620008df565b1980831691505092915050565b5f620009168383620008eb565b9150826002028217905092915050565b6200093182620006ef565b67ffffffffffffffff8111156200094d576200094c620004c0565b5b62000959825462000726565b620009668282856200088f565b5f60209050601f8311600181146200099c575f841562000987578287015190505b62000993858262000909565b86555062000a02565b601f198416620009ac866200075a565b5f5b82811015620009d557848901518255600182019150602085019450602081019050620009ae565b86831015620009f55784890151620009f1601f891682620008eb565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000a358262000a0a565b9050919050565b62000a478162000a29565b82525050565b5f60208201905062000a625f83018462000a3c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000aa182620007dc565b915062000aae83620007dc565b925082820190508082111562000ac95762000ac862000a68565b5b92915050565b62000ada81620007dc565b82525050565b5f60608201905062000af55f83018662000a3c565b62000b04602083018562000acf565b62000b13604083018462000acf565b949350505050565b5f60208201905062000b305f83018462000acf565b92915050565b6119278062000b445f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80638da5cb5b11610095578063b4969b9611610064578063b4969b961461029a578063bed99850146102b6578063dd62ed3e146102d4578063f2fde38b14610304576100fe565b80638da5cb5b1461021257806395d89b4114610230578063a0712d681461024e578063a9059cbb1461026a576100fe565b8063313ce567116100d1578063313ce5671461019e57806342966c68146101bc57806370a08231146101d8578063715018a614610208576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a610320565b6040516101179190611296565b60405180910390f35b61013a60048036038101906101359190611347565b6103b0565b604051610147919061139f565b60405180910390f35b6101586103d2565b60405161016591906113c7565b60405180910390f35b610188600480360381019061018391906113e0565b6103db565b604051610195919061139f565b60405180910390f35b6101a661058b565b6040516101b3919061144b565b60405180910390f35b6101d660048036038101906101d19190611464565b610593565b005b6101f260048036038101906101ed919061148f565b6105f6565b6040516101ff91906113c7565b60405180910390f35b61021061063b565b005b61021a61064e565b60405161022791906114c9565b60405180910390f35b610238610676565b6040516102459190611296565b60405180910390f35b61026860048036038101906102639190611464565b610706565b005b610284600480360381019061027f9190611347565b61071b565b604051610291919061139f565b60405180910390f35b6102b460048036038101906102af9190611519565b6108b3565b005b6102be610926565b6040516102cb9190611553565b60405180910390f35b6102ee60048036038101906102e9919061156c565b61093a565b6040516102fb91906113c7565b60405180910390f35b61031e6004803603810190610319919061148f565b6109bc565b005b60606003805461032f906115d7565b80601f016020809104026020016040519081016040528092919081815260200182805461035b906115d7565b80156103a65780601f1061037d576101008083540402835291602001916103a6565b820191905f5260205f20905b81548152906001019060200180831161038957829003601f168201915b5050505050905090565b5f806103ba610a40565b90506103c7818585610a47565b600191505092915050565b5f600254905090565b5f8180612710600560149054906101000a900461ffff1661ffff16836104019190611634565b61040b91906116a2565b1061044b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044290611742565b60405180910390fd5b6001612710600560149054906101000a900461ffff1661ffff16836104709190611634565b61047a91906116a2565b10156104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b2906117d0565b60405180910390fd5b5f612710600560149054906101000a900461ffff1661ffff16856104df9190611634565b6104e991906116a2565b90505f81856104f891906117ee565b90505f610503610a40565b9050610510888288610a59565b61051b888884610aec565b5f83111561057c5761052d8884610bdc565b8773ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58460405161057391906113c7565b60405180910390a25b60019450505050509392505050565b5f6012905090565b61059b610c5b565b6105a53382610bdc565b3373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040516105eb91906113c7565b60405180910390a250565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610643610c5b565b61064c5f610ce2565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610685906115d7565b80601f01602080910402602001604051908101604052809291908181526020018280546106b1906115d7565b80156106fc5780601f106106d3576101008083540402835291602001916106fc565b820191905f5260205f20905b8154815290600101906020018083116106df57829003601f168201915b5050505050905090565b61070e610c5b565b6107183382610da5565b50565b5f8180612710600560149054906101000a900461ffff1661ffff16836107419190611634565b61074b91906116a2565b1061078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078290611742565b60405180910390fd5b6001612710600560149054906101000a900461ffff1661ffff16836107b09190611634565b6107ba91906116a2565b10156107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f2906117d0565b60405180910390fd5b5f612710600560149054906101000a900461ffff1661ffff168561081f9190611634565b61082991906116a2565b90505f818561083891906117ee565b9050610845338783610aec565b5f8211156108a6576108573383610bdc565b3373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58360405161089d91906113c7565b60405180910390a25b6001935050505092915050565b6108bb610c5b565b806113888161ffff161115610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc9061186b565b60405180910390fd5b81600560146101000a81548161ffff021916908361ffff1602179055505050565b600560149054906101000a900461ffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6109c4610c5b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a34575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a2b91906114c9565b60405180910390fd5b610a3d81610ce2565b50565b5f33905090565b610a548383836001610e24565b505050565b5f610a64848461093a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ae65781811015610ad7578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ace93929190611889565b60405180910390fd5b610ae584848484035f610e24565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b5391906114c9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bcc575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bc391906114c9565b60405180910390fd5b610bd7838383610ff3565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c4c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c4391906114c9565b60405180910390fd5b610c57825f83610ff3565b5050565b610c63610a40565b73ffffffffffffffffffffffffffffffffffffffff16610c8161064e565b73ffffffffffffffffffffffffffffffffffffffff1614610ce057610ca4610a40565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cd791906114c9565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e15575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e0c91906114c9565b60405180910390fd5b610e205f8383610ff3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e94575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e8b91906114c9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f04575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610efb91906114c9565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fed578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fe491906113c7565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611043578060025f82825461103791906118be565b92505081905550611111565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110cc578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110c393929190611889565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611158578060025f82825403925050819055506111a2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111ff91906113c7565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611243578082015181840152602081019050611228565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6112688261120c565b6112728185611216565b9350611282818560208601611226565b61128b8161124e565b840191505092915050565b5f6020820190508181035f8301526112ae818461125e565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112e3826112ba565b9050919050565b6112f3816112d9565b81146112fd575f80fd5b50565b5f8135905061130e816112ea565b92915050565b5f819050919050565b61132681611314565b8114611330575f80fd5b50565b5f813590506113418161131d565b92915050565b5f806040838503121561135d5761135c6112b6565b5b5f61136a85828601611300565b925050602061137b85828601611333565b9150509250929050565b5f8115159050919050565b61139981611385565b82525050565b5f6020820190506113b25f830184611390565b92915050565b6113c181611314565b82525050565b5f6020820190506113da5f8301846113b8565b92915050565b5f805f606084860312156113f7576113f66112b6565b5b5f61140486828701611300565b935050602061141586828701611300565b925050604061142686828701611333565b9150509250925092565b5f60ff82169050919050565b61144581611430565b82525050565b5f60208201905061145e5f83018461143c565b92915050565b5f60208284031215611479576114786112b6565b5b5f61148684828501611333565b91505092915050565b5f602082840312156114a4576114a36112b6565b5b5f6114b184828501611300565b91505092915050565b6114c3816112d9565b82525050565b5f6020820190506114dc5f8301846114ba565b92915050565b5f61ffff82169050919050565b6114f8816114e2565b8114611502575f80fd5b50565b5f81359050611513816114ef565b92915050565b5f6020828403121561152e5761152d6112b6565b5b5f61153b84828501611505565b91505092915050565b61154d816114e2565b82525050565b5f6020820190506115665f830184611544565b92915050565b5f8060408385031215611582576115816112b6565b5b5f61158f85828601611300565b92505060206115a085828601611300565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115ee57607f821691505b602082108103611601576116006115aa565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61163e82611314565b915061164983611314565b925082820261165781611314565b9150828204841483151761166e5761166d611607565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6116ac82611314565b91506116b783611314565b9250826116c7576116c6611675565b5b828204905092915050565b7f56616c756520646f6573206e6f7420636f76657220666565732e20456e7465725f8201527f20612068696768657220616d6f756e7400000000000000000000000000000000602082015250565b5f61172c603083611216565b9150611737826116d2565b604082019050919050565b5f6020820190508181035f83015261175981611720565b9050919050565b7f56616c75652063616e6e6f7420636f76657220616e7920666565732e20456e745f8201527f657220612068696768657220616d6f756e740000000000000000000000000000602082015250565b5f6117ba603283611216565b91506117c582611760565b604082019050919050565b5f6020820190508181035f8301526117e7816117ae565b9050919050565b5f6117f882611314565b915061180383611314565b925082820390508181111561181b5761181a611607565b5b92915050565b7f4275726e2072617465206d6173206265206c657373207468616e2035302500005f82015250565b5f611855601e83611216565b915061186082611821565b602082019050919050565b5f6020820190508181035f83015261188281611849565b9050919050565b5f60608201905061189c5f8301866114ba565b6118a960208301856113b8565b6118b660408301846113b8565b949350505050565b5f6118c882611314565b91506118d383611314565b92508282019050808211156118eb576118ea611607565b5b9291505056fea2646970667358221220e422f4f1b7c161b2d3706c2d56f3caf8d169cb758df30f760ab18fb45524426d64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x246B CODESIZE SUB DUP1 PUSH3 0x246B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x658 JUMP JUMPDEST CALLER DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x926 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x926 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC9 SWAP2 SWAP1 PUSH3 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE3 DUP2 PUSH3 0x126 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x11D CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH3 0x1E9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xB36 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x25C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x253 SWAP2 SWAP1 PUSH3 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x26F PUSH0 DUP4 DUP4 PUSH3 0x273 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2C7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x2BA SWAP2 SWAP1 PUSH3 0xA95 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x398 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x353 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x34A SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3E1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x42B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x48A SWAP2 SWAP1 PUSH3 0xB1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x4F8 DUP3 PUSH3 0x4B0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x51A JUMPI PUSH3 0x519 PUSH3 0x4C0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x52E PUSH3 0x497 JUMP JUMPDEST SWAP1 POP PUSH3 0x53C DUP3 DUP3 PUSH3 0x4ED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x55E JUMPI PUSH3 0x55D PUSH3 0x4C0 JUMP JUMPDEST JUMPDEST PUSH3 0x569 DUP3 PUSH3 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x595 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x578 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5B6 PUSH3 0x5B0 DUP5 PUSH3 0x541 JUMP JUMPDEST PUSH3 0x523 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x5D5 JUMPI PUSH3 0x5D4 PUSH3 0x4AC JUMP JUMPDEST JUMPDEST PUSH3 0x5E2 DUP5 DUP3 DUP6 PUSH3 0x576 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x601 JUMPI PUSH3 0x600 PUSH3 0x4A8 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x613 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x634 DUP2 PUSH3 0x61C JUMP JUMPDEST DUP2 EQ PUSH3 0x63F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x652 DUP2 PUSH3 0x629 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x672 JUMPI PUSH3 0x671 PUSH3 0x4A0 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x692 JUMPI PUSH3 0x691 PUSH3 0x4A4 JUMP JUMPDEST JUMPDEST PUSH3 0x6A0 DUP7 DUP3 DUP8 ADD PUSH3 0x5EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6C4 JUMPI PUSH3 0x6C3 PUSH3 0x4A4 JUMP JUMPDEST JUMPDEST PUSH3 0x6D2 DUP7 DUP3 DUP8 ADD PUSH3 0x5EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x6E5 DUP7 DUP3 DUP8 ADD PUSH3 0x642 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x73E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x754 JUMPI PUSH3 0x753 PUSH3 0x6F9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x7B8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x77B JUMP JUMPDEST PUSH3 0x7C4 DUP7 DUP4 PUSH3 0x77B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x80E PUSH3 0x808 PUSH3 0x802 DUP5 PUSH3 0x7DC JUMP JUMPDEST PUSH3 0x7E5 JUMP JUMPDEST PUSH3 0x7DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x829 DUP4 PUSH3 0x7EE JUMP JUMPDEST PUSH3 0x841 PUSH3 0x838 DUP3 PUSH3 0x815 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x787 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x857 PUSH3 0x849 JUMP JUMPDEST PUSH3 0x864 DUP2 DUP5 DUP5 PUSH3 0x81E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x88B JUMPI PUSH3 0x87F PUSH0 DUP3 PUSH3 0x84D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x86A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x8DA JUMPI PUSH3 0x8A4 DUP2 PUSH3 0x75A JUMP JUMPDEST PUSH3 0x8AF DUP5 PUSH3 0x76C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x8BF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x8D7 PUSH3 0x8CE DUP6 PUSH3 0x76C JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x869 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x8FC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x8DF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x916 DUP4 DUP4 PUSH3 0x8EB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x931 DUP3 PUSH3 0x6EF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x94D JUMPI PUSH3 0x94C PUSH3 0x4C0 JUMP JUMPDEST JUMPDEST PUSH3 0x959 DUP3 SLOAD PUSH3 0x726 JUMP JUMPDEST PUSH3 0x966 DUP3 DUP3 DUP6 PUSH3 0x88F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x99C JUMPI PUSH0 DUP5 ISZERO PUSH3 0x987 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x993 DUP6 DUP3 PUSH3 0x909 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xA02 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x9AC DUP7 PUSH3 0x75A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x9D5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9AE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x9F5 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x9F1 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x8EB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xA35 DUP3 PUSH3 0xA0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA47 DUP2 PUSH3 0xA29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA62 PUSH0 DUP4 ADD DUP5 PUSH3 0xA3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xAA1 DUP3 PUSH3 0x7DC JUMP JUMPDEST SWAP2 POP PUSH3 0xAAE DUP4 PUSH3 0x7DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xAC9 JUMPI PUSH3 0xAC8 PUSH3 0xA68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xADA DUP2 PUSH3 0x7DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xAF5 PUSH0 DUP4 ADD DUP7 PUSH3 0xA3C JUMP JUMPDEST PUSH3 0xB04 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xACF JUMP JUMPDEST PUSH3 0xB13 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xACF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB30 PUSH0 DUP4 ADD DUP5 PUSH3 0xACF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1927 DUP1 PUSH3 0xB44 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB4969B96 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB4969B96 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x304 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x208 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x706 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x32F SWAP1 PUSH2 0x15D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35B SWAP1 PUSH2 0x15D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x389 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3BA PUSH2 0xA40 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C7 DUP2 DUP6 DUP6 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP1 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST LT PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST LT ISZERO PUSH2 0x4BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B2 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP6 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x503 PUSH2 0xA40 JUMP JUMPDEST SWAP1 POP PUSH2 0x510 DUP9 DUP3 DUP9 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x51B DUP9 DUP9 DUP5 PUSH2 0xAEC JUMP JUMPDEST PUSH0 DUP4 GT ISZERO PUSH2 0x57C JUMPI PUSH2 0x52D DUP9 DUP5 PUSH2 0xBDC JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x59B PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x5A5 CALLER DUP3 PUSH2 0xBDC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x643 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x64C PUSH0 PUSH2 0xCE2 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B1 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70E PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x718 CALLER DUP3 PUSH2 0xDA5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP1 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST LT PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST LT ISZERO PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F2 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP6 PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x838 SWAP2 SWAP1 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP PUSH2 0x845 CALLER DUP8 DUP4 PUSH2 0xAEC JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x857 CALLER DUP4 PUSH2 0xBDC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8BB PUSH2 0xC5B JUMP JUMPDEST DUP1 PUSH2 0x1388 DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FC SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C4 PUSH2 0xC5B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA34 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2B SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA3D DUP2 PUSH2 0xCE2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA54 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA64 DUP5 DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xAE6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAD7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE24 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD7 DUP4 DUP4 DUP4 PUSH2 0xFF3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 DUP3 PUSH0 DUP4 PUSH2 0xFF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC63 PUSH2 0xA40 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC81 PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE0 JUMPI PUSH2 0xCA4 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD7 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE15 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE20 PUSH0 DUP4 DUP4 PUSH2 0xFF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE94 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8B SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF04 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFED JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFE4 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1043 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1111 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10CC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1158 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11A2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11FF SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1243 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1228 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1268 DUP3 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x1272 DUP2 DUP6 PUSH2 0x1216 JUMP JUMPDEST SWAP4 POP PUSH2 0x1282 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x128B DUP2 PUSH2 0x124E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12AE DUP2 DUP5 PUSH2 0x125E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12E3 DUP3 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F3 DUP2 PUSH2 0x12D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x12FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x130E DUP2 PUSH2 0x12EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1326 DUP2 PUSH2 0x1314 JUMP JUMPDEST DUP2 EQ PUSH2 0x1330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1341 DUP2 PUSH2 0x131D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x136A DUP6 DUP3 DUP7 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x137B DUP6 DUP3 DUP7 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1399 DUP2 PUSH2 0x1385 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1390 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C1 DUP2 PUSH2 0x1314 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DA PUSH0 DUP4 ADD DUP5 PUSH2 0x13B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13F7 JUMPI PUSH2 0x13F6 PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1404 DUP7 DUP3 DUP8 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1415 DUP7 DUP3 DUP8 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1426 DUP7 DUP3 DUP8 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1445 DUP2 PUSH2 0x1430 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145E PUSH0 DUP4 ADD DUP5 PUSH2 0x143C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH2 0x1478 PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1486 DUP5 DUP3 DUP6 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A4 JUMPI PUSH2 0x14A3 PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B1 DUP5 DUP3 DUP6 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C3 DUP2 PUSH2 0x12D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14DC PUSH0 DUP4 ADD DUP5 PUSH2 0x14BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F8 DUP2 PUSH2 0x14E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1502 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1513 DUP2 PUSH2 0x14EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152E JUMPI PUSH2 0x152D PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x153B DUP5 DUP3 DUP6 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x154D DUP2 PUSH2 0x14E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1566 PUSH0 DUP4 ADD DUP5 PUSH2 0x1544 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x158F DUP6 DUP3 DUP7 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A0 DUP6 DUP3 DUP7 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15EE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x15AA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x163E DUP3 PUSH2 0x1314 JUMP JUMPDEST SWAP2 POP PUSH2 0x1649 DUP4 PUSH2 0x1314 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1657 DUP2 PUSH2 0x1314 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x166E JUMPI PUSH2 0x166D PUSH2 0x1607 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16AC DUP3 PUSH2 0x1314 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B7 DUP4 PUSH2 0x1314 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16C7 JUMPI PUSH2 0x16C6 PUSH2 0x1675 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56616C756520646F6573206E6F7420636F76657220666565732E20456E746572 PUSH0 DUP3 ADD MSTORE PUSH32 0x20612068696768657220616D6F756E7400000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x172C PUSH1 0x30 DUP4 PUSH2 0x1216 JUMP JUMPDEST SWAP2 POP PUSH2 0x1737 DUP3 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1759 DUP2 PUSH2 0x1720 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C75652063616E6E6F7420636F76657220616E7920666565732E20456E74 PUSH0 DUP3 ADD MSTORE PUSH32 0x657220612068696768657220616D6F756E740000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17BA PUSH1 0x32 DUP4 PUSH2 0x1216 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C5 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E7 DUP2 PUSH2 0x17AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F8 DUP3 PUSH2 0x1314 JUMP JUMPDEST SWAP2 POP PUSH2 0x1803 DUP4 PUSH2 0x1314 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x181B JUMPI PUSH2 0x181A PUSH2 0x1607 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4275726E2072617465206D6173206265206C657373207468616E203530250000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1855 PUSH1 0x1E DUP4 PUSH2 0x1216 JUMP JUMPDEST SWAP2 POP PUSH2 0x1860 DUP3 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1882 DUP2 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x189C PUSH0 DUP4 ADD DUP7 PUSH2 0x14BA JUMP JUMPDEST PUSH2 0x18A9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x18B6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13B8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18C8 DUP3 PUSH2 0x1314 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D3 DUP4 PUSH2 0x1314 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18EA PUSH2 0x1607 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x22 DELEGATECALL CALL 0xB7 0xC1 PUSH2 0xB2D3 PUSH17 0x6C2D56F3CAF8D169CB758DF30F760AB18F 0xB4 SSTORE 0x24 TIMESTAMP PUSH14 0x64736F6C63430008180033000000 ",
							"sourceMap": "245:2648:6:-:0;;;411:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;514:10;491:5;497:7;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;547:9:6::2;536:8;;:20;;;;;;;;;;;;;;;;;;567:32;573:10;584:14;567:5;;;:32;;:::i;:::-;411:233:::0;;;245:2648;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:89::-;2713:7;2753:6;2746:5;2742:18;2731:29;;2677:89;;;:::o;2772:120::-;2844:23;2861:5;2844:23;:::i;:::-;2837:5;2834:34;2824:62;;2882:1;2879;2872:12;2824:62;2772:120;:::o;2898:141::-;2954:5;2985:6;2979:13;2970:22;;3001:32;3027:5;3001:32;:::i;:::-;2898:141;;;;:::o;3045:1007::-;3152:6;3160;3168;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3364:1;3353:9;3349:17;3343:24;3394:18;3386:6;3383:30;3380:117;;;3416:79;;:::i;:::-;3380:117;3521:74;3587:7;3578:6;3567:9;3563:22;3521:74;:::i;:::-;3511:84;;3314:291;3665:2;3654:9;3650:18;3644:25;3696:18;3688:6;3685:30;3682:117;;;3718:79;;:::i;:::-;3682:117;3823:74;3889:7;3880:6;3869:9;3865:22;3823:74;:::i;:::-;3813:84;;3615:292;3946:2;3972:63;4027:7;4018:6;4007:9;4003:22;3972:63;:::i;:::-;3962:73;;3917:128;3045:1007;;;;;:::o;4058:99::-;4110:6;4144:5;4138:12;4128:22;;4058:99;;;:::o;4163:180::-;4211:77;4208:1;4201:88;4308:4;4305:1;4298:15;4332:4;4329:1;4322:15;4349:320;4393:6;4430:1;4424:4;4420:12;4410:22;;4477:1;4471:4;4467:12;4498:18;4488:81;;4554:4;4546:6;4542:17;4532:27;;4488:81;4616:2;4608:6;4605:14;4585:18;4582:38;4579:84;;4635:18;;:::i;:::-;4579:84;4400:269;4349:320;;;:::o;4675:141::-;4724:4;4747:3;4739:11;;4770:3;4767:1;4760:14;4804:4;4801:1;4791:18;4783:26;;4675:141;;;:::o;4822:93::-;4859:6;4906:2;4901;4894:5;4890:14;4886:23;4876:33;;4822:93;;;:::o;4921:107::-;4965:8;5015:5;5009:4;5005:16;4984:37;;4921:107;;;;:::o;5034:393::-;5103:6;5153:1;5141:10;5137:18;5176:97;5206:66;5195:9;5176:97;:::i;:::-;5294:39;5324:8;5313:9;5294:39;:::i;:::-;5282:51;;5366:4;5362:9;5355:5;5351:21;5342:30;;5415:4;5405:8;5401:19;5394:5;5391:30;5381:40;;5110:317;;5034:393;;;;;:::o;5433:77::-;5470:7;5499:5;5488:16;;5433:77;;;:::o;5516:60::-;5544:3;5565:5;5558:12;;5516:60;;;:::o;5582:142::-;5632:9;5665:53;5683:34;5692:24;5710:5;5692:24;:::i;:::-;5683:34;:::i;:::-;5665:53;:::i;:::-;5652:66;;5582:142;;;:::o;5730:75::-;5773:3;5794:5;5787:12;;5730:75;;;:::o;5811:269::-;5921:39;5952:7;5921:39;:::i;:::-;5982:91;6031:41;6055:16;6031:41;:::i;:::-;6023:6;6016:4;6010:11;5982:91;:::i;:::-;5976:4;5969:105;5887:193;5811:269;;;:::o;6086:73::-;6131:3;6086:73;:::o;6165:189::-;6242:32;;:::i;:::-;6283:65;6341:6;6333;6327:4;6283:65;:::i;:::-;6218:136;6165:189;;:::o;6360:186::-;6420:120;6437:3;6430:5;6427:14;6420:120;;;6491:39;6528:1;6521:5;6491:39;:::i;:::-;6464:1;6457:5;6453:13;6444:22;;6420:120;;;6360:186;;:::o;6552:543::-;6653:2;6648:3;6645:11;6642:446;;;6687:38;6719:5;6687:38;:::i;:::-;6771:29;6789:10;6771:29;:::i;:::-;6761:8;6757:44;6954:2;6942:10;6939:18;6936:49;;;6975:8;6960:23;;6936:49;6998:80;7054:22;7072:3;7054:22;:::i;:::-;7044:8;7040:37;7027:11;6998:80;:::i;:::-;6657:431;;6642:446;6552:543;;;:::o;7101:117::-;7155:8;7205:5;7199:4;7195:16;7174:37;;7101:117;;;;:::o;7224:169::-;7268:6;7301:51;7349:1;7345:6;7337:5;7334:1;7330:13;7301:51;:::i;:::-;7297:56;7382:4;7376;7372:15;7362:25;;7275:118;7224:169;;;;:::o;7398:295::-;7474:4;7620:29;7645:3;7639:4;7620:29;:::i;:::-;7612:37;;7682:3;7679:1;7675:11;7669:4;7666:21;7658:29;;7398:295;;;;:::o;7698:1395::-;7815:37;7848:3;7815:37;:::i;:::-;7917:18;7909:6;7906:30;7903:56;;;7939:18;;:::i;:::-;7903:56;7983:38;8015:4;8009:11;7983:38;:::i;:::-;8068:67;8128:6;8120;8114:4;8068:67;:::i;:::-;8162:1;8186:4;8173:17;;8218:2;8210:6;8207:14;8235:1;8230:618;;;;8892:1;8909:6;8906:77;;;8958:9;8953:3;8949:19;8943:26;8934:35;;8906:77;9009:67;9069:6;9062:5;9009:67;:::i;:::-;9003:4;8996:81;8865:222;8200:887;;8230:618;8282:4;8278:9;8270:6;8266:22;8316:37;8348:4;8316:37;:::i;:::-;8375:1;8389:208;8403:7;8400:1;8397:14;8389:208;;;8482:9;8477:3;8473:19;8467:26;8459:6;8452:42;8533:1;8525:6;8521:14;8511:24;;8580:2;8569:9;8565:18;8552:31;;8426:4;8423:1;8419:12;8414:17;;8389:208;;;8625:6;8616:7;8613:19;8610:179;;;8683:9;8678:3;8674:19;8668:26;8726:48;8768:4;8760:6;8756:17;8745:9;8726:48;:::i;:::-;8718:6;8711:64;8633:156;8610:179;8835:1;8831;8823:6;8819:14;8815:22;8809:4;8802:36;8237:611;;;8200:887;;7790:1303;;;7698:1395;;:::o;9099:126::-;9136:7;9176:42;9169:5;9165:54;9154:65;;9099:126;;;:::o;9231:96::-;9268:7;9297:24;9315:5;9297:24;:::i;:::-;9286:35;;9231:96;;;:::o;9333:118::-;9420:24;9438:5;9420:24;:::i;:::-;9415:3;9408:37;9333:118;;:::o;9457:222::-;9550:4;9588:2;9577:9;9573:18;9565:26;;9601:71;9669:1;9658:9;9654:17;9645:6;9601:71;:::i;:::-;9457:222;;;;:::o;9685:180::-;9733:77;9730:1;9723:88;9830:4;9827:1;9820:15;9854:4;9851:1;9844:15;9871:191;9911:3;9930:20;9948:1;9930:20;:::i;:::-;9925:25;;9964:20;9982:1;9964:20;:::i;:::-;9959:25;;10007:1;10004;10000:9;9993:16;;10028:3;10025:1;10022:10;10019:36;;;10035:18;;:::i;:::-;10019:36;9871:191;;;;:::o;10068:118::-;10155:24;10173:5;10155:24;:::i;:::-;10150:3;10143:37;10068:118;;:::o;10192:442::-;10341:4;10379:2;10368:9;10364:18;10356:26;;10392:71;10460:1;10449:9;10445:17;10436:6;10392:71;:::i;:::-;10473:72;10541:2;10530:9;10526:18;10517:6;10473:72;:::i;:::-;10555;10623:2;10612:9;10608:18;10599:6;10555:72;:::i;:::-;10192:442;;;;;;:::o;10640:222::-;10733:4;10771:2;10760:9;10756:18;10748:26;;10784:71;10852:1;10841:9;10837:17;10828:6;10784:71;:::i;:::-;10640:222;;;;:::o;245:2648:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2631,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3620,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 3036,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3163,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3493,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2624,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2649,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3298,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2796,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4083,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2362,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 944,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1526,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnRate_943": {
									"entryPoint": 2342,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_1065": {
									"entryPoint": 1427,
									"id": 1065,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1419,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1045": {
									"entryPoint": 1798,
									"id": 1045,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 800,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1614,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1595,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBurnRate_1080": {
									"entryPoint": 2227,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1654,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 978,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1204": {
									"entryPoint": 987,
									"id": 1204,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2492,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1137": {
									"entryPoint": 1819,
									"id": 1137,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 5401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 5444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 5346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4646,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4790,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 5359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12791:7",
										"nodeType": "YulBlock",
										"src": "0:12791:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:184:7",
													"nodeType": "YulBlock",
													"src": "349:184:7",
													"statements": [
														{
															"nativeSrc": "359:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:7",
																"nodeType": "YulLiteral",
																"src": "368:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:7",
																	"nodeType": "YulTypedName",
																	"src": "363:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:7",
																"nodeType": "YulBlock",
																"src": "428:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:7"
																					},
																					"nativeSrc": "449:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:7"
																							},
																							"nativeSrc": "468:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:7"
																					},
																					"nativeSrc": "462:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:7"
																			},
																			"nativeSrc": "442:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:7"
																		},
																		"nativeSrc": "442:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:7"
																},
																"nativeSrc": "386:13:7",
																"nodeType": "YulFunctionCall",
																"src": "386:13:7"
															},
															"nativeSrc": "378:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:7",
																"nodeType": "YulBlock",
																"src": "400:19:7",
																"statements": [
																	{
																		"nativeSrc": "402:15:7",
																		"nodeType": "YulAssignment",
																		"src": "402:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:7",
																					"nodeType": "YulLiteral",
																					"src": "414:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:7"
																			},
																			"nativeSrc": "407:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:7",
																"nodeType": "YulBlock",
																"src": "382:3:7",
																"statements": []
															},
															"src": "378:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:7"
																		},
																		"nativeSrc": "507:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:7",
																		"nodeType": "YulLiteral",
																		"src": "525:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:7"
																},
																"nativeSrc": "500:27:7",
																"nodeType": "YulFunctionCall",
																"src": "500:27:7"
															},
															"nativeSrc": "500:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:246:7"
											},
											{
												"body": {
													"nativeSrc": "587:54:7",
													"nodeType": "YulBlock",
													"src": "587:54:7",
													"statements": [
														{
															"nativeSrc": "597:38:7",
															"nodeType": "YulAssignment",
															"src": "597:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:7",
																				"nodeType": "YulLiteral",
																				"src": "622:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:7"
																		},
																		"nativeSrc": "611:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:7",
																				"nodeType": "YulLiteral",
																				"src": "631:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nativeSrc": "627:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:7"
																},
																"nativeSrc": "607:28:7",
																"nodeType": "YulFunctionCall",
																"src": "607:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:7",
														"nodeType": "YulTypedName",
														"src": "570:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:7",
														"nodeType": "YulTypedName",
														"src": "580:6:7",
														"type": ""
													}
												],
												"src": "539:102:7"
											},
											{
												"body": {
													"nativeSrc": "739:285:7",
													"nodeType": "YulBlock",
													"src": "739:285:7",
													"statements": [
														{
															"nativeSrc": "749:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:7"
																},
																"nativeSrc": "763:39:7",
																"nodeType": "YulFunctionCall",
																"src": "763:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:7",
																	"nodeType": "YulTypedName",
																	"src": "753:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:7",
															"nodeType": "YulAssignment",
															"src": "811:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:7"
																},
																"nativeSrc": "818:71:7",
																"nodeType": "YulFunctionCall",
																"src": "818:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:7",
																				"nodeType": "YulLiteral",
																				"src": "944:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:7"
																		},
																		"nativeSrc": "933:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:7"
																},
																"nativeSrc": "898:65:7",
																"nodeType": "YulFunctionCall",
																"src": "898:65:7"
															},
															"nativeSrc": "898:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:7"
														},
														{
															"nativeSrc": "972:46:7",
															"nodeType": "YulAssignment",
															"src": "972:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:7"
																		},
																		"nativeSrc": "988:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:7"
																},
																"nativeSrc": "979:39:7",
																"nodeType": "YulFunctionCall",
																"src": "979:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:7",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:7",
														"nodeType": "YulTypedName",
														"src": "727:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:7",
														"nodeType": "YulTypedName",
														"src": "735:3:7",
														"type": ""
													}
												],
												"src": "647:377:7"
											},
											{
												"body": {
													"nativeSrc": "1148:195:7",
													"nodeType": "YulBlock",
													"src": "1148:195:7",
													"statements": [
														{
															"nativeSrc": "1158:26:7",
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nativeSrc": "1166:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:7"
																		},
																		"nativeSrc": "1201:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:7"
																		},
																		"nativeSrc": "1220:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nativeSrc": "1194:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:7"
															},
															"nativeSrc": "1194:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:7"
														},
														{
															"nativeSrc": "1250:86:7",
															"nodeType": "YulAssignment",
															"src": "1250:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:7"
																},
																"nativeSrc": "1258:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:7",
														"nodeType": "YulTypedName",
														"src": "1120:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:7",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:7",
														"nodeType": "YulTypedName",
														"src": "1143:4:7",
														"type": ""
													}
												],
												"src": "1030:313:7"
											},
											{
												"body": {
													"nativeSrc": "1389:35:7",
													"nodeType": "YulBlock",
													"src": "1389:35:7",
													"statements": [
														{
															"nativeSrc": "1399:19:7",
															"nodeType": "YulAssignment",
															"src": "1399:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:7"
																},
																"nativeSrc": "1409:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:7",
														"nodeType": "YulTypedName",
														"src": "1382:6:7",
														"type": ""
													}
												],
												"src": "1349:75:7"
											},
											{
												"body": {
													"nativeSrc": "1519:28:7",
													"nodeType": "YulBlock",
													"src": "1519:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:7"
																},
																"nativeSrc": "1529:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:7"
															},
															"nativeSrc": "1529:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:7"
											},
											{
												"body": {
													"nativeSrc": "1642:28:7",
													"nodeType": "YulBlock",
													"src": "1642:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:7"
																},
																"nativeSrc": "1652:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:7"
															},
															"nativeSrc": "1652:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:7"
											},
											{
												"body": {
													"nativeSrc": "1721:81:7",
													"nodeType": "YulBlock",
													"src": "1721:81:7",
													"statements": [
														{
															"nativeSrc": "1731:65:7",
															"nodeType": "YulAssignment",
															"src": "1731:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:7"
																},
																"nativeSrc": "1742:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:7",
														"nodeType": "YulTypedName",
														"src": "1703:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:7",
														"nodeType": "YulTypedName",
														"src": "1713:7:7",
														"type": ""
													}
												],
												"src": "1676:126:7"
											},
											{
												"body": {
													"nativeSrc": "1853:51:7",
													"nodeType": "YulBlock",
													"src": "1853:51:7",
													"statements": [
														{
															"nativeSrc": "1863:35:7",
															"nodeType": "YulAssignment",
															"src": "1863:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:7"
																},
																"nativeSrc": "1874:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:7",
														"nodeType": "YulTypedName",
														"src": "1835:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:7",
														"nodeType": "YulTypedName",
														"src": "1845:7:7",
														"type": ""
													}
												],
												"src": "1808:96:7"
											},
											{
												"body": {
													"nativeSrc": "1953:79:7",
													"nodeType": "YulBlock",
													"src": "1953:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:7",
																"nodeType": "YulBlock",
																"src": "2010:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:7"
																			},
																			"nativeSrc": "2012:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:7"
																		},
																		"nativeSrc": "2012:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:7"
																				},
																				"nativeSrc": "1983:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:7"
																		},
																		"nativeSrc": "1973:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:7"
																},
																"nativeSrc": "1966:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:7"
															},
															"nativeSrc": "1963:63:7",
															"nodeType": "YulIf",
															"src": "1963:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:7",
														"nodeType": "YulTypedName",
														"src": "1946:5:7",
														"type": ""
													}
												],
												"src": "1910:122:7"
											},
											{
												"body": {
													"nativeSrc": "2090:87:7",
													"nodeType": "YulBlock",
													"src": "2090:87:7",
													"statements": [
														{
															"nativeSrc": "2100:29:7",
															"nodeType": "YulAssignment",
															"src": "2100:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:7"
																},
																"nativeSrc": "2109:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:7"
																},
																"nativeSrc": "2138:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:7"
															},
															"nativeSrc": "2138:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:7",
														"nodeType": "YulTypedName",
														"src": "2068:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:7",
														"nodeType": "YulTypedName",
														"src": "2076:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:7",
														"nodeType": "YulTypedName",
														"src": "2084:5:7",
														"type": ""
													}
												],
												"src": "2038:139:7"
											},
											{
												"body": {
													"nativeSrc": "2228:32:7",
													"nodeType": "YulBlock",
													"src": "2228:32:7",
													"statements": [
														{
															"nativeSrc": "2238:16:7",
															"nodeType": "YulAssignment",
															"src": "2238:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:7",
																"nodeType": "YulIdentifier",
																"src": "2249:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:7",
														"nodeType": "YulTypedName",
														"src": "2210:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:7",
														"nodeType": "YulTypedName",
														"src": "2220:7:7",
														"type": ""
													}
												],
												"src": "2183:77:7"
											},
											{
												"body": {
													"nativeSrc": "2309:79:7",
													"nodeType": "YulBlock",
													"src": "2309:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:7",
																"nodeType": "YulBlock",
																"src": "2366:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:7"
																			},
																			"nativeSrc": "2368:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:7"
																		},
																		"nativeSrc": "2368:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:7"
																				},
																				"nativeSrc": "2339:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:7"
																		},
																		"nativeSrc": "2329:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:7"
																},
																"nativeSrc": "2322:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:7"
															},
															"nativeSrc": "2319:63:7",
															"nodeType": "YulIf",
															"src": "2319:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:7",
														"nodeType": "YulTypedName",
														"src": "2302:5:7",
														"type": ""
													}
												],
												"src": "2266:122:7"
											},
											{
												"body": {
													"nativeSrc": "2446:87:7",
													"nodeType": "YulBlock",
													"src": "2446:87:7",
													"statements": [
														{
															"nativeSrc": "2456:29:7",
															"nodeType": "YulAssignment",
															"src": "2456:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:7"
																},
																"nativeSrc": "2465:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:7"
																},
																"nativeSrc": "2494:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:7"
															},
															"nativeSrc": "2494:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:7",
														"nodeType": "YulTypedName",
														"src": "2424:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:7",
														"nodeType": "YulTypedName",
														"src": "2432:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:7",
														"nodeType": "YulTypedName",
														"src": "2440:5:7",
														"type": ""
													}
												],
												"src": "2394:139:7"
											},
											{
												"body": {
													"nativeSrc": "2622:391:7",
													"nodeType": "YulBlock",
													"src": "2622:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:7",
																"nodeType": "YulBlock",
																"src": "2668:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:7"
																			},
																			"nativeSrc": "2670:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:7"
																		},
																		"nativeSrc": "2670:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:7"
																		},
																		"nativeSrc": "2639:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:7"
																},
																"nativeSrc": "2635:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:7"
															},
															"nativeSrc": "2632:119:7",
															"nodeType": "YulIf",
															"src": "2632:119:7"
														},
														{
															"nativeSrc": "2761:117:7",
															"nodeType": "YulBlock",
															"src": "2761:117:7",
															"statements": [
																{
																	"nativeSrc": "2776:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:7"
																				},
																				"nativeSrc": "2836:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:7"
																		},
																		"nativeSrc": "2815:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:7",
															"nodeType": "YulBlock",
															"src": "2888:118:7",
															"statements": [
																{
																	"nativeSrc": "2903:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:7"
																				},
																				"nativeSrc": "2964:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:7"
																		},
																		"nativeSrc": "2943:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:7",
														"nodeType": "YulTypedName",
														"src": "2584:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:7",
														"nodeType": "YulTypedName",
														"src": "2595:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:7",
														"nodeType": "YulTypedName",
														"src": "2607:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:7",
														"nodeType": "YulTypedName",
														"src": "2615:6:7",
														"type": ""
													}
												],
												"src": "2539:474:7"
											},
											{
												"body": {
													"nativeSrc": "3061:48:7",
													"nodeType": "YulBlock",
													"src": "3061:48:7",
													"statements": [
														{
															"nativeSrc": "3071:32:7",
															"nodeType": "YulAssignment",
															"src": "3071:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:7"
																		},
																		"nativeSrc": "3089:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:7"
																},
																"nativeSrc": "3082:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:7",
														"nodeType": "YulTypedName",
														"src": "3043:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:7",
														"nodeType": "YulTypedName",
														"src": "3053:7:7",
														"type": ""
													}
												],
												"src": "3019:90:7"
											},
											{
												"body": {
													"nativeSrc": "3174:50:7",
													"nodeType": "YulBlock",
													"src": "3174:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:7"
																		},
																		"nativeSrc": "3196:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:7"
																},
																"nativeSrc": "3184:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:7"
															},
															"nativeSrc": "3184:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:7",
														"nodeType": "YulTypedName",
														"src": "3162:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:7",
														"nodeType": "YulTypedName",
														"src": "3169:3:7",
														"type": ""
													}
												],
												"src": "3115:109:7"
											},
											{
												"body": {
													"nativeSrc": "3322:118:7",
													"nodeType": "YulBlock",
													"src": "3322:118:7",
													"statements": [
														{
															"nativeSrc": "3332:26:7",
															"nodeType": "YulAssignment",
															"src": "3332:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:7"
																},
																"nativeSrc": "3340:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:7"
																		},
																		"nativeSrc": "3415:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:7"
																},
																"nativeSrc": "3368:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:7"
															},
															"nativeSrc": "3368:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:7",
														"nodeType": "YulTypedName",
														"src": "3294:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:7",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:7",
														"nodeType": "YulTypedName",
														"src": "3317:4:7",
														"type": ""
													}
												],
												"src": "3230:210:7"
											},
											{
												"body": {
													"nativeSrc": "3511:53:7",
													"nodeType": "YulBlock",
													"src": "3511:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:7"
																		},
																		"nativeSrc": "3533:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:7"
																},
																"nativeSrc": "3521:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:7"
															},
															"nativeSrc": "3521:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:7",
														"nodeType": "YulTypedName",
														"src": "3499:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:7",
														"nodeType": "YulTypedName",
														"src": "3506:3:7",
														"type": ""
													}
												],
												"src": "3446:118:7"
											},
											{
												"body": {
													"nativeSrc": "3668:124:7",
													"nodeType": "YulBlock",
													"src": "3668:124:7",
													"statements": [
														{
															"nativeSrc": "3678:26:7",
															"nodeType": "YulAssignment",
															"src": "3678:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:7"
																},
																"nativeSrc": "3686:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:7"
																		},
																		"nativeSrc": "3767:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:7"
																},
																"nativeSrc": "3714:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:7"
															},
															"nativeSrc": "3714:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:7",
														"nodeType": "YulTypedName",
														"src": "3640:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:7",
														"nodeType": "YulTypedName",
														"src": "3652:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:7",
														"nodeType": "YulTypedName",
														"src": "3663:4:7",
														"type": ""
													}
												],
												"src": "3570:222:7"
											},
											{
												"body": {
													"nativeSrc": "3898:519:7",
													"nodeType": "YulBlock",
													"src": "3898:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:7",
																"nodeType": "YulBlock",
																"src": "3944:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:7"
																			},
																			"nativeSrc": "3946:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:7"
																		},
																		"nativeSrc": "3946:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:7"
																		},
																		"nativeSrc": "3915:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:7"
																},
																"nativeSrc": "3911:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:7"
															},
															"nativeSrc": "3908:119:7",
															"nodeType": "YulIf",
															"src": "3908:119:7"
														},
														{
															"nativeSrc": "4037:117:7",
															"nodeType": "YulBlock",
															"src": "4037:117:7",
															"statements": [
																{
																	"nativeSrc": "4052:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:7"
																				},
																				"nativeSrc": "4112:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:7"
																		},
																		"nativeSrc": "4091:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:7",
															"nodeType": "YulBlock",
															"src": "4164:118:7",
															"statements": [
																{
																	"nativeSrc": "4179:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:7"
																				},
																				"nativeSrc": "4240:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:7"
																		},
																		"nativeSrc": "4219:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:7",
															"nodeType": "YulBlock",
															"src": "4292:118:7",
															"statements": [
																{
																	"nativeSrc": "4307:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:7"
																				},
																				"nativeSrc": "4368:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:7"
																		},
																		"nativeSrc": "4347:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:7",
														"nodeType": "YulTypedName",
														"src": "3852:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:7",
														"nodeType": "YulTypedName",
														"src": "3863:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:7",
														"nodeType": "YulTypedName",
														"src": "3875:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:7",
														"nodeType": "YulTypedName",
														"src": "3883:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:7",
														"nodeType": "YulTypedName",
														"src": "3891:6:7",
														"type": ""
													}
												],
												"src": "3798:619:7"
											},
											{
												"body": {
													"nativeSrc": "4466:43:7",
													"nodeType": "YulBlock",
													"src": "4466:43:7",
													"statements": [
														{
															"nativeSrc": "4476:27:7",
															"nodeType": "YulAssignment",
															"src": "4476:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:7"
																},
																"nativeSrc": "4487:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:7",
														"nodeType": "YulTypedName",
														"src": "4448:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:7",
														"nodeType": "YulTypedName",
														"src": "4458:7:7",
														"type": ""
													}
												],
												"src": "4423:86:7"
											},
											{
												"body": {
													"nativeSrc": "4576:51:7",
													"nodeType": "YulBlock",
													"src": "4576:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:7"
																		},
																		"nativeSrc": "4598:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:7"
																},
																"nativeSrc": "4586:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:7"
															},
															"nativeSrc": "4586:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:7",
														"nodeType": "YulTypedName",
														"src": "4564:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:7",
														"nodeType": "YulTypedName",
														"src": "4571:3:7",
														"type": ""
													}
												],
												"src": "4515:112:7"
											},
											{
												"body": {
													"nativeSrc": "4727:120:7",
													"nodeType": "YulBlock",
													"src": "4727:120:7",
													"statements": [
														{
															"nativeSrc": "4737:26:7",
															"nodeType": "YulAssignment",
															"src": "4737:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:7"
																},
																"nativeSrc": "4745:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:7"
																		},
																		"nativeSrc": "4822:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:7"
																},
																"nativeSrc": "4773:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:7"
															},
															"nativeSrc": "4773:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:7",
														"nodeType": "YulTypedName",
														"src": "4699:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:7",
														"nodeType": "YulTypedName",
														"src": "4711:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:7",
														"nodeType": "YulTypedName",
														"src": "4722:4:7",
														"type": ""
													}
												],
												"src": "4633:214:7"
											},
											{
												"body": {
													"nativeSrc": "4919:263:7",
													"nodeType": "YulBlock",
													"src": "4919:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:7",
																"nodeType": "YulBlock",
																"src": "4965:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:7"
																			},
																			"nativeSrc": "4967:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:7"
																		},
																		"nativeSrc": "4967:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:7"
																		},
																		"nativeSrc": "4936:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:7"
																},
																"nativeSrc": "4932:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:7"
															},
															"nativeSrc": "4929:119:7",
															"nodeType": "YulIf",
															"src": "4929:119:7"
														},
														{
															"nativeSrc": "5058:117:7",
															"nodeType": "YulBlock",
															"src": "5058:117:7",
															"statements": [
																{
																	"nativeSrc": "5073:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:7"
																				},
																				"nativeSrc": "5133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:7"
																		},
																		"nativeSrc": "5112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4853:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:7",
														"nodeType": "YulTypedName",
														"src": "4889:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:7",
														"nodeType": "YulTypedName",
														"src": "4900:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:7",
														"nodeType": "YulTypedName",
														"src": "4912:6:7",
														"type": ""
													}
												],
												"src": "4853:329:7"
											},
											{
												"body": {
													"nativeSrc": "5254:263:7",
													"nodeType": "YulBlock",
													"src": "5254:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5300:83:7",
																"nodeType": "YulBlock",
																"src": "5300:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5302:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:7"
																			},
																			"nativeSrc": "5302:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:7"
																		},
																		"nativeSrc": "5302:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5275:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5284:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5271:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:7"
																		},
																		"nativeSrc": "5271:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5267:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:7"
																},
																"nativeSrc": "5267:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5267:32:7"
															},
															"nativeSrc": "5264:119:7",
															"nodeType": "YulIf",
															"src": "5264:119:7"
														},
														{
															"nativeSrc": "5393:117:7",
															"nodeType": "YulBlock",
															"src": "5393:117:7",
															"statements": [
																{
																	"nativeSrc": "5408:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5422:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5412:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5437:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5437:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5472:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5483:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5468:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:7"
																				},
																				"nativeSrc": "5468:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5492:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5447:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:7"
																		},
																		"nativeSrc": "5447:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5437:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5188:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5224:9:7",
														"nodeType": "YulTypedName",
														"src": "5224:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5235:7:7",
														"nodeType": "YulTypedName",
														"src": "5235:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5247:6:7",
														"nodeType": "YulTypedName",
														"src": "5247:6:7",
														"type": ""
													}
												],
												"src": "5188:329:7"
											},
											{
												"body": {
													"nativeSrc": "5588:53:7",
													"nodeType": "YulBlock",
													"src": "5588:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5605:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5628:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5610:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:7"
																		},
																		"nativeSrc": "5610:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5598:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:7"
																},
																"nativeSrc": "5598:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5598:37:7"
															},
															"nativeSrc": "5598:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5523:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5576:5:7",
														"nodeType": "YulTypedName",
														"src": "5576:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5583:3:7",
														"nodeType": "YulTypedName",
														"src": "5583:3:7",
														"type": ""
													}
												],
												"src": "5523:118:7"
											},
											{
												"body": {
													"nativeSrc": "5745:124:7",
													"nodeType": "YulBlock",
													"src": "5745:124:7",
													"statements": [
														{
															"nativeSrc": "5755:26:7",
															"nodeType": "YulAssignment",
															"src": "5755:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5767:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5778:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5763:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:7"
																},
																"nativeSrc": "5763:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5763:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5755:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5835:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5848:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5859:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5844:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:7"
																		},
																		"nativeSrc": "5844:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5791:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:7"
																},
																"nativeSrc": "5791:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5791:71:7"
															},
															"nativeSrc": "5791:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5647:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5717:9:7",
														"nodeType": "YulTypedName",
														"src": "5717:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5729:6:7",
														"nodeType": "YulTypedName",
														"src": "5729:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5740:4:7",
														"nodeType": "YulTypedName",
														"src": "5740:4:7",
														"type": ""
													}
												],
												"src": "5647:222:7"
											},
											{
												"body": {
													"nativeSrc": "5919:45:7",
													"nodeType": "YulBlock",
													"src": "5919:45:7",
													"statements": [
														{
															"nativeSrc": "5929:29:7",
															"nodeType": "YulAssignment",
															"src": "5929:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5944:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5944:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5951:6:7",
																		"nodeType": "YulLiteral",
																		"src": "5951:6:7",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5940:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5940:3:7"
																},
																"nativeSrc": "5940:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5940:18:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5929:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5929:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "5875:89:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5901:5:7",
														"nodeType": "YulTypedName",
														"src": "5901:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5911:7:7",
														"nodeType": "YulTypedName",
														"src": "5911:7:7",
														"type": ""
													}
												],
												"src": "5875:89:7"
											},
											{
												"body": {
													"nativeSrc": "6012:78:7",
													"nodeType": "YulBlock",
													"src": "6012:78:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6068:16:7",
																"nodeType": "YulBlock",
																"src": "6068:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6077:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6077:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6080:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6080:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6070:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6070:6:7"
																			},
																			"nativeSrc": "6070:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6070:12:7"
																		},
																		"nativeSrc": "6070:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6070:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6035:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6035:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6059:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6059:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "6042:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "6042:16:7"
																				},
																				"nativeSrc": "6042:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6042:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6032:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6032:2:7"
																		},
																		"nativeSrc": "6032:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6032:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6025:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6025:6:7"
																},
																"nativeSrc": "6025:42:7",
																"nodeType": "YulFunctionCall",
																"src": "6025:42:7"
															},
															"nativeSrc": "6022:62:7",
															"nodeType": "YulIf",
															"src": "6022:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "5970:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6005:5:7",
														"nodeType": "YulTypedName",
														"src": "6005:5:7",
														"type": ""
													}
												],
												"src": "5970:120:7"
											},
											{
												"body": {
													"nativeSrc": "6147:86:7",
													"nodeType": "YulBlock",
													"src": "6147:86:7",
													"statements": [
														{
															"nativeSrc": "6157:29:7",
															"nodeType": "YulAssignment",
															"src": "6157:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6179:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6179:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6166:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6166:12:7"
																},
																"nativeSrc": "6166:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6166:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6157:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6157:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6221:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6221:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "6195:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "6195:25:7"
																},
																"nativeSrc": "6195:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6195:32:7"
															},
															"nativeSrc": "6195:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "6195:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nativeSrc": "6096:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6125:6:7",
														"nodeType": "YulTypedName",
														"src": "6125:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6133:3:7",
														"nodeType": "YulTypedName",
														"src": "6133:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6141:5:7",
														"nodeType": "YulTypedName",
														"src": "6141:5:7",
														"type": ""
													}
												],
												"src": "6096:137:7"
											},
											{
												"body": {
													"nativeSrc": "6304:262:7",
													"nodeType": "YulBlock",
													"src": "6304:262:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6350:83:7",
																"nodeType": "YulBlock",
																"src": "6350:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6352:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6352:77:7"
																			},
																			"nativeSrc": "6352:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6352:79:7"
																		},
																		"nativeSrc": "6352:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6352:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6325:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6325:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6334:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6334:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6321:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6321:3:7"
																		},
																		"nativeSrc": "6321:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6321:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6346:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6346:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6317:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6317:3:7"
																},
																"nativeSrc": "6317:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6317:32:7"
															},
															"nativeSrc": "6314:119:7",
															"nodeType": "YulIf",
															"src": "6314:119:7"
														},
														{
															"nativeSrc": "6443:116:7",
															"nodeType": "YulBlock",
															"src": "6443:116:7",
															"statements": [
																{
																	"nativeSrc": "6458:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6458:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6472:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6472:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6462:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6462:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6487:62:7",
																	"nodeType": "YulAssignment",
																	"src": "6487:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6521:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6521:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6532:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6532:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6517:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6517:3:7"
																				},
																				"nativeSrc": "6517:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6517:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6541:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6541:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nativeSrc": "6497:19:7",
																			"nodeType": "YulIdentifier",
																			"src": "6497:19:7"
																		},
																		"nativeSrc": "6497:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6497:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6487:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6487:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nativeSrc": "6239:327:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6274:9:7",
														"nodeType": "YulTypedName",
														"src": "6274:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6285:7:7",
														"nodeType": "YulTypedName",
														"src": "6285:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6297:6:7",
														"nodeType": "YulTypedName",
														"src": "6297:6:7",
														"type": ""
													}
												],
												"src": "6239:327:7"
											},
											{
												"body": {
													"nativeSrc": "6635:52:7",
													"nodeType": "YulBlock",
													"src": "6635:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6652:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6652:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6674:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6674:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nativeSrc": "6657:16:7",
																			"nodeType": "YulIdentifier",
																			"src": "6657:16:7"
																		},
																		"nativeSrc": "6657:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6657:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6645:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6645:6:7"
																},
																"nativeSrc": "6645:36:7",
																"nodeType": "YulFunctionCall",
																"src": "6645:36:7"
															},
															"nativeSrc": "6645:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "6645:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nativeSrc": "6572:115:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6623:5:7",
														"nodeType": "YulTypedName",
														"src": "6623:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6630:3:7",
														"nodeType": "YulTypedName",
														"src": "6630:3:7",
														"type": ""
													}
												],
												"src": "6572:115:7"
											},
											{
												"body": {
													"nativeSrc": "6789:122:7",
													"nodeType": "YulBlock",
													"src": "6789:122:7",
													"statements": [
														{
															"nativeSrc": "6799:26:7",
															"nodeType": "YulAssignment",
															"src": "6799:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6811:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6811:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6822:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6822:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6807:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6807:3:7"
																},
																"nativeSrc": "6807:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6807:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6799:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6799:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6877:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6877:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6890:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6890:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6901:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6901:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6886:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6886:3:7"
																		},
																		"nativeSrc": "6886:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6886:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "6835:41:7",
																	"nodeType": "YulIdentifier",
																	"src": "6835:41:7"
																},
																"nativeSrc": "6835:69:7",
																"nodeType": "YulFunctionCall",
																"src": "6835:69:7"
															},
															"nativeSrc": "6835:69:7",
															"nodeType": "YulExpressionStatement",
															"src": "6835:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "6693:218:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6761:9:7",
														"nodeType": "YulTypedName",
														"src": "6761:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6773:6:7",
														"nodeType": "YulTypedName",
														"src": "6773:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6784:4:7",
														"nodeType": "YulTypedName",
														"src": "6784:4:7",
														"type": ""
													}
												],
												"src": "6693:218:7"
											},
											{
												"body": {
													"nativeSrc": "7000:391:7",
													"nodeType": "YulBlock",
													"src": "7000:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7046:83:7",
																"nodeType": "YulBlock",
																"src": "7046:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7048:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7048:77:7"
																			},
																			"nativeSrc": "7048:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7048:79:7"
																		},
																		"nativeSrc": "7048:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7048:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7021:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7021:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7030:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7030:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7017:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7017:3:7"
																		},
																		"nativeSrc": "7017:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7017:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7042:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7013:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7013:3:7"
																},
																"nativeSrc": "7013:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7013:32:7"
															},
															"nativeSrc": "7010:119:7",
															"nodeType": "YulIf",
															"src": "7010:119:7"
														},
														{
															"nativeSrc": "7139:117:7",
															"nodeType": "YulBlock",
															"src": "7139:117:7",
															"statements": [
																{
																	"nativeSrc": "7154:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7154:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7168:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7168:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7158:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7158:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7183:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7183:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7218:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7218:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7229:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7229:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7214:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7214:3:7"
																				},
																				"nativeSrc": "7214:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7214:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7238:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7238:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7193:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7193:20:7"
																		},
																		"nativeSrc": "7193:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7193:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7183:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7183:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7266:118:7",
															"nodeType": "YulBlock",
															"src": "7266:118:7",
															"statements": [
																{
																	"nativeSrc": "7281:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7281:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7295:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7295:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7285:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7285:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7311:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7311:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7346:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7346:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7357:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7357:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7342:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7342:3:7"
																				},
																				"nativeSrc": "7342:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7342:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7366:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7366:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7321:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7321:20:7"
																		},
																		"nativeSrc": "7321:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7321:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7311:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7311:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6917:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6962:9:7",
														"nodeType": "YulTypedName",
														"src": "6962:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6973:7:7",
														"nodeType": "YulTypedName",
														"src": "6973:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6985:6:7",
														"nodeType": "YulTypedName",
														"src": "6985:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6993:6:7",
														"nodeType": "YulTypedName",
														"src": "6993:6:7",
														"type": ""
													}
												],
												"src": "6917:474:7"
											},
											{
												"body": {
													"nativeSrc": "7425:152:7",
													"nodeType": "YulBlock",
													"src": "7425:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7442:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7442:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7445:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7445:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7435:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7435:6:7"
																},
																"nativeSrc": "7435:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7435:88:7"
															},
															"nativeSrc": "7435:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7435:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7539:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7539:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7542:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7542:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7532:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7532:6:7"
																},
																"nativeSrc": "7532:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7532:15:7"
															},
															"nativeSrc": "7532:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7532:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7563:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7563:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7566:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7566:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7556:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7556:6:7"
																},
																"nativeSrc": "7556:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7556:15:7"
															},
															"nativeSrc": "7556:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7556:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7397:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7397:180:7"
											},
											{
												"body": {
													"nativeSrc": "7634:269:7",
													"nodeType": "YulBlock",
													"src": "7634:269:7",
													"statements": [
														{
															"nativeSrc": "7644:22:7",
															"nodeType": "YulAssignment",
															"src": "7644:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7658:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7658:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7664:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7664:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7654:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:7"
																},
																"nativeSrc": "7654:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7654:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7644:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7644:6:7"
																}
															]
														},
														{
															"nativeSrc": "7675:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7675:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7705:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7705:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7711:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7711:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7701:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7701:3:7"
																},
																"nativeSrc": "7701:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7701:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7679:18:7",
																	"nodeType": "YulTypedName",
																	"src": "7679:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7752:51:7",
																"nodeType": "YulBlock",
																"src": "7752:51:7",
																"statements": [
																	{
																		"nativeSrc": "7766:27:7",
																		"nodeType": "YulAssignment",
																		"src": "7766:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7780:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7780:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7788:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7788:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7776:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7776:3:7"
																			},
																			"nativeSrc": "7776:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7776:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7766:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7766:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7732:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7732:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7725:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7725:6:7"
																},
																"nativeSrc": "7725:26:7",
																"nodeType": "YulFunctionCall",
																"src": "7725:26:7"
															},
															"nativeSrc": "7722:81:7",
															"nodeType": "YulIf",
															"src": "7722:81:7"
														},
														{
															"body": {
																"nativeSrc": "7855:42:7",
																"nodeType": "YulBlock",
																"src": "7855:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7869:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7869:16:7"
																			},
																			"nativeSrc": "7869:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7869:18:7"
																		},
																		"nativeSrc": "7869:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7869:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7819:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7819:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7842:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7842:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7850:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7850:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7839:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7839:2:7"
																		},
																		"nativeSrc": "7839:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7839:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7816:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7816:2:7"
																},
																"nativeSrc": "7816:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7816:38:7"
															},
															"nativeSrc": "7813:84:7",
															"nodeType": "YulIf",
															"src": "7813:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7583:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7618:4:7",
														"nodeType": "YulTypedName",
														"src": "7618:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7627:6:7",
														"nodeType": "YulTypedName",
														"src": "7627:6:7",
														"type": ""
													}
												],
												"src": "7583:320:7"
											},
											{
												"body": {
													"nativeSrc": "7937:152:7",
													"nodeType": "YulBlock",
													"src": "7937:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7954:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7954:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7957:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7957:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7947:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7947:6:7"
																},
																"nativeSrc": "7947:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7947:88:7"
															},
															"nativeSrc": "7947:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7947:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8051:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8051:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8054:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8054:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8044:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:7"
																},
																"nativeSrc": "8044:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8044:15:7"
															},
															"nativeSrc": "8044:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8044:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8075:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8078:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8078:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8068:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8068:6:7"
																},
																"nativeSrc": "8068:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8068:15:7"
															},
															"nativeSrc": "8068:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8068:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7909:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7909:180:7"
											},
											{
												"body": {
													"nativeSrc": "8143:362:7",
													"nodeType": "YulBlock",
													"src": "8143:362:7",
													"statements": [
														{
															"nativeSrc": "8153:25:7",
															"nodeType": "YulAssignment",
															"src": "8153:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8176:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8176:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8158:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8158:17:7"
																},
																"nativeSrc": "8158:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8158:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8153:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8153:1:7"
																}
															]
														},
														{
															"nativeSrc": "8187:25:7",
															"nodeType": "YulAssignment",
															"src": "8187:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8210:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8210:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8192:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8192:17:7"
																},
																"nativeSrc": "8192:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8192:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8187:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8187:1:7"
																}
															]
														},
														{
															"nativeSrc": "8221:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8221:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8244:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8244:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8247:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8247:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8240:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8240:3:7"
																},
																"nativeSrc": "8240:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8240:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8225:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8225:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8258:41:7",
															"nodeType": "YulAssignment",
															"src": "8258:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8287:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8287:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8269:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8269:17:7"
																},
																"nativeSrc": "8269:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8269:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8258:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8258:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8476:22:7",
																"nodeType": "YulBlock",
																"src": "8476:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8478:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8478:16:7"
																			},
																			"nativeSrc": "8478:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8478:18:7"
																		},
																		"nativeSrc": "8478:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8478:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8409:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8409:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8402:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8402:6:7"
																				},
																				"nativeSrc": "8402:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8402:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8432:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8432:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8439:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8439:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8448:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8448:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8435:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8435:3:7"
																						},
																						"nativeSrc": "8435:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8435:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8429:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8429:2:7"
																				},
																				"nativeSrc": "8429:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8429:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8382:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8382:2:7"
																		},
																		"nativeSrc": "8382:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8382:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:7"
																},
																"nativeSrc": "8362:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8362:113:7"
															},
															"nativeSrc": "8359:139:7",
															"nodeType": "YulIf",
															"src": "8359:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8095:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8126:1:7",
														"nodeType": "YulTypedName",
														"src": "8126:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8129:1:7",
														"nodeType": "YulTypedName",
														"src": "8129:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8135:7:7",
														"nodeType": "YulTypedName",
														"src": "8135:7:7",
														"type": ""
													}
												],
												"src": "8095:410:7"
											},
											{
												"body": {
													"nativeSrc": "8539:152:7",
													"nodeType": "YulBlock",
													"src": "8539:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8556:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8556:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8559:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8559:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8549:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8549:6:7"
																},
																"nativeSrc": "8549:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8549:88:7"
															},
															"nativeSrc": "8549:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8549:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8653:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8653:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8656:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8656:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8646:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8646:6:7"
																},
																"nativeSrc": "8646:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8646:15:7"
															},
															"nativeSrc": "8646:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8646:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8677:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8677:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8680:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8680:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8670:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8670:6:7"
																},
																"nativeSrc": "8670:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8670:15:7"
															},
															"nativeSrc": "8670:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8670:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8511:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8511:180:7"
											},
											{
												"body": {
													"nativeSrc": "8739:143:7",
													"nodeType": "YulBlock",
													"src": "8739:143:7",
													"statements": [
														{
															"nativeSrc": "8749:25:7",
															"nodeType": "YulAssignment",
															"src": "8749:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8772:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8772:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8754:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8754:17:7"
																},
																"nativeSrc": "8754:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8754:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8749:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8749:1:7"
																}
															]
														},
														{
															"nativeSrc": "8783:25:7",
															"nodeType": "YulAssignment",
															"src": "8783:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8806:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8806:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8788:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8788:17:7"
																},
																"nativeSrc": "8788:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8788:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8783:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8783:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8830:22:7",
																"nodeType": "YulBlock",
																"src": "8830:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8832:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8832:16:7"
																			},
																			"nativeSrc": "8832:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8832:18:7"
																		},
																		"nativeSrc": "8832:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8832:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8827:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8827:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8820:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8820:6:7"
																},
																"nativeSrc": "8820:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8820:9:7"
															},
															"nativeSrc": "8817:35:7",
															"nodeType": "YulIf",
															"src": "8817:35:7"
														},
														{
															"nativeSrc": "8862:14:7",
															"nodeType": "YulAssignment",
															"src": "8862:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8871:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8871:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8874:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8874:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8867:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8867:3:7"
																},
																"nativeSrc": "8867:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8867:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8862:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8862:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8697:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8728:1:7",
														"nodeType": "YulTypedName",
														"src": "8728:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8731:1:7",
														"nodeType": "YulTypedName",
														"src": "8731:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8737:1:7",
														"nodeType": "YulTypedName",
														"src": "8737:1:7",
														"type": ""
													}
												],
												"src": "8697:185:7"
											},
											{
												"body": {
													"nativeSrc": "8994:129:7",
													"nodeType": "YulBlock",
													"src": "8994:129:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9016:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9016:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9024:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9024:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9012:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9012:3:7"
																		},
																		"nativeSrc": "9012:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9012:14:7"
																	},
																	{
																		"hexValue": "56616c756520646f6573206e6f7420636f76657220666565732e20456e746572",
																		"kind": "string",
																		"nativeSrc": "9028:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9028:34:7",
																		"type": "",
																		"value": "Value does not cover fees. Enter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9005:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9005:6:7"
																},
																"nativeSrc": "9005:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9005:58:7"
															},
															"nativeSrc": "9005:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9005:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9084:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9084:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9092:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9092:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9080:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:7"
																		},
																		"nativeSrc": "9080:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:15:7"
																	},
																	{
																		"hexValue": "20612068696768657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "9097:18:7",
																		"nodeType": "YulLiteral",
																		"src": "9097:18:7",
																		"type": "",
																		"value": " a higher amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9073:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9073:6:7"
																},
																"nativeSrc": "9073:43:7",
																"nodeType": "YulFunctionCall",
																"src": "9073:43:7"
															},
															"nativeSrc": "9073:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "9073:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80",
												"nativeSrc": "8888:235:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8986:6:7",
														"nodeType": "YulTypedName",
														"src": "8986:6:7",
														"type": ""
													}
												],
												"src": "8888:235:7"
											},
											{
												"body": {
													"nativeSrc": "9275:220:7",
													"nodeType": "YulBlock",
													"src": "9275:220:7",
													"statements": [
														{
															"nativeSrc": "9285:74:7",
															"nodeType": "YulAssignment",
															"src": "9285:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9351:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9351:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9356:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9356:2:7",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9292:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9292:58:7"
																},
																"nativeSrc": "9292:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9292:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9285:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9285:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9457:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9457:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80",
																	"nativeSrc": "9368:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9368:88:7"
																},
																"nativeSrc": "9368:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9368:93:7"
															},
															"nativeSrc": "9368:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9368:93:7"
														},
														{
															"nativeSrc": "9470:19:7",
															"nodeType": "YulAssignment",
															"src": "9470:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9481:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9481:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9486:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9486:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9477:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9477:3:7"
																},
																"nativeSrc": "9477:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9477:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9470:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9470:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9129:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9263:3:7",
														"nodeType": "YulTypedName",
														"src": "9263:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9271:3:7",
														"nodeType": "YulTypedName",
														"src": "9271:3:7",
														"type": ""
													}
												],
												"src": "9129:366:7"
											},
											{
												"body": {
													"nativeSrc": "9672:248:7",
													"nodeType": "YulBlock",
													"src": "9672:248:7",
													"statements": [
														{
															"nativeSrc": "9682:26:7",
															"nodeType": "YulAssignment",
															"src": "9682:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9694:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9694:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9705:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9705:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9690:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9690:3:7"
																},
																"nativeSrc": "9690:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9690:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9682:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9682:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9729:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9729:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9740:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9740:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9725:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9725:3:7"
																		},
																		"nativeSrc": "9725:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9725:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9748:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9748:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9754:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9754:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9744:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9744:3:7"
																		},
																		"nativeSrc": "9744:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9744:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9718:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9718:6:7"
																},
																"nativeSrc": "9718:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9718:47:7"
															},
															"nativeSrc": "9718:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9718:47:7"
														},
														{
															"nativeSrc": "9774:139:7",
															"nodeType": "YulAssignment",
															"src": "9774:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9908:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9908:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9782:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9782:124:7"
																},
																"nativeSrc": "9782:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9782:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9774:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9774:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9501:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9652:9:7",
														"nodeType": "YulTypedName",
														"src": "9652:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9667:4:7",
														"nodeType": "YulTypedName",
														"src": "9667:4:7",
														"type": ""
													}
												],
												"src": "9501:419:7"
											},
											{
												"body": {
													"nativeSrc": "10032:131:7",
													"nodeType": "YulBlock",
													"src": "10032:131:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10054:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10054:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10062:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10062:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10050:3:7"
																		},
																		"nativeSrc": "10050:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10050:14:7"
																	},
																	{
																		"hexValue": "56616c75652063616e6e6f7420636f76657220616e7920666565732e20456e74",
																		"kind": "string",
																		"nativeSrc": "10066:34:7",
																		"nodeType": "YulLiteral",
																		"src": "10066:34:7",
																		"type": "",
																		"value": "Value cannot cover any fees. Ent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10043:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10043:6:7"
																},
																"nativeSrc": "10043:58:7",
																"nodeType": "YulFunctionCall",
																"src": "10043:58:7"
															},
															"nativeSrc": "10043:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "10043:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10122:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10122:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10130:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10130:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10118:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10118:3:7"
																		},
																		"nativeSrc": "10118:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10118:15:7"
																	},
																	{
																		"hexValue": "657220612068696768657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "10135:20:7",
																		"nodeType": "YulLiteral",
																		"src": "10135:20:7",
																		"type": "",
																		"value": "er a higher amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10111:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10111:6:7"
																},
																"nativeSrc": "10111:45:7",
																"nodeType": "YulFunctionCall",
																"src": "10111:45:7"
															},
															"nativeSrc": "10111:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "10111:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca",
												"nativeSrc": "9926:237:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10024:6:7",
														"nodeType": "YulTypedName",
														"src": "10024:6:7",
														"type": ""
													}
												],
												"src": "9926:237:7"
											},
											{
												"body": {
													"nativeSrc": "10315:220:7",
													"nodeType": "YulBlock",
													"src": "10315:220:7",
													"statements": [
														{
															"nativeSrc": "10325:74:7",
															"nodeType": "YulAssignment",
															"src": "10325:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10391:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10391:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10396:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10396:2:7",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10332:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10332:58:7"
																},
																"nativeSrc": "10332:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10332:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10325:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10325:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10497:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10497:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca",
																	"nativeSrc": "10408:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10408:88:7"
																},
																"nativeSrc": "10408:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10408:93:7"
															},
															"nativeSrc": "10408:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10408:93:7"
														},
														{
															"nativeSrc": "10510:19:7",
															"nodeType": "YulAssignment",
															"src": "10510:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10521:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10521:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10526:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10526:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10517:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10517:3:7"
																},
																"nativeSrc": "10517:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10517:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10510:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10510:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10169:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10303:3:7",
														"nodeType": "YulTypedName",
														"src": "10303:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10311:3:7",
														"nodeType": "YulTypedName",
														"src": "10311:3:7",
														"type": ""
													}
												],
												"src": "10169:366:7"
											},
											{
												"body": {
													"nativeSrc": "10712:248:7",
													"nodeType": "YulBlock",
													"src": "10712:248:7",
													"statements": [
														{
															"nativeSrc": "10722:26:7",
															"nodeType": "YulAssignment",
															"src": "10722:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10734:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10734:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10745:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10745:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10730:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10730:3:7"
																},
																"nativeSrc": "10730:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10730:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10722:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10722:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10769:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10769:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10780:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10780:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10765:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10765:3:7"
																		},
																		"nativeSrc": "10765:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10765:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10788:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10788:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10794:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10794:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10784:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10784:3:7"
																		},
																		"nativeSrc": "10784:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10784:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10758:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10758:6:7"
																},
																"nativeSrc": "10758:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10758:47:7"
															},
															"nativeSrc": "10758:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10758:47:7"
														},
														{
															"nativeSrc": "10814:139:7",
															"nodeType": "YulAssignment",
															"src": "10814:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10948:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10948:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10822:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10822:124:7"
																},
																"nativeSrc": "10822:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10822:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10814:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10814:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10541:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10692:9:7",
														"nodeType": "YulTypedName",
														"src": "10692:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10707:4:7",
														"nodeType": "YulTypedName",
														"src": "10707:4:7",
														"type": ""
													}
												],
												"src": "10541:419:7"
											},
											{
												"body": {
													"nativeSrc": "11011:149:7",
													"nodeType": "YulBlock",
													"src": "11011:149:7",
													"statements": [
														{
															"nativeSrc": "11021:25:7",
															"nodeType": "YulAssignment",
															"src": "11021:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11044:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11044:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11026:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11026:17:7"
																},
																"nativeSrc": "11026:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11026:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11021:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11021:1:7"
																}
															]
														},
														{
															"nativeSrc": "11055:25:7",
															"nodeType": "YulAssignment",
															"src": "11055:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11078:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11078:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11060:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11060:17:7"
																},
																"nativeSrc": "11060:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11060:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11055:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11055:1:7"
																}
															]
														},
														{
															"nativeSrc": "11089:17:7",
															"nodeType": "YulAssignment",
															"src": "11089:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11101:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11101:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11104:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11104:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11097:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11097:3:7"
																},
																"nativeSrc": "11097:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11097:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11089:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11089:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11131:22:7",
																"nodeType": "YulBlock",
																"src": "11131:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11133:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11133:16:7"
																			},
																			"nativeSrc": "11133:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11133:18:7"
																		},
																		"nativeSrc": "11133:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11133:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11122:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11122:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11128:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11128:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11119:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11119:2:7"
																},
																"nativeSrc": "11119:11:7",
																"nodeType": "YulFunctionCall",
																"src": "11119:11:7"
															},
															"nativeSrc": "11116:37:7",
															"nodeType": "YulIf",
															"src": "11116:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10966:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10997:1:7",
														"nodeType": "YulTypedName",
														"src": "10997:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11000:1:7",
														"nodeType": "YulTypedName",
														"src": "11000:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11006:4:7",
														"nodeType": "YulTypedName",
														"src": "11006:4:7",
														"type": ""
													}
												],
												"src": "10966:194:7"
											},
											{
												"body": {
													"nativeSrc": "11272:74:7",
													"nodeType": "YulBlock",
													"src": "11272:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11294:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11294:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11302:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11302:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11290:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11290:3:7"
																		},
																		"nativeSrc": "11290:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11290:14:7"
																	},
																	{
																		"hexValue": "4275726e2072617465206d6173206265206c657373207468616e20353025",
																		"kind": "string",
																		"nativeSrc": "11306:32:7",
																		"nodeType": "YulLiteral",
																		"src": "11306:32:7",
																		"type": "",
																		"value": "Burn rate mas be less than 50%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11283:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11283:6:7"
																},
																"nativeSrc": "11283:56:7",
																"nodeType": "YulFunctionCall",
																"src": "11283:56:7"
															},
															"nativeSrc": "11283:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "11283:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a",
												"nativeSrc": "11166:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11264:6:7",
														"nodeType": "YulTypedName",
														"src": "11264:6:7",
														"type": ""
													}
												],
												"src": "11166:180:7"
											},
											{
												"body": {
													"nativeSrc": "11498:220:7",
													"nodeType": "YulBlock",
													"src": "11498:220:7",
													"statements": [
														{
															"nativeSrc": "11508:74:7",
															"nodeType": "YulAssignment",
															"src": "11508:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11574:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11574:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11579:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11579:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11515:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11515:58:7"
																},
																"nativeSrc": "11515:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11515:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11508:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11680:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11680:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a",
																	"nativeSrc": "11591:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11591:88:7"
																},
																"nativeSrc": "11591:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11591:93:7"
															},
															"nativeSrc": "11591:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11591:93:7"
														},
														{
															"nativeSrc": "11693:19:7",
															"nodeType": "YulAssignment",
															"src": "11693:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11704:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11704:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11709:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11709:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11700:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11700:3:7"
																},
																"nativeSrc": "11700:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11700:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11693:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11352:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11486:3:7",
														"nodeType": "YulTypedName",
														"src": "11486:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11494:3:7",
														"nodeType": "YulTypedName",
														"src": "11494:3:7",
														"type": ""
													}
												],
												"src": "11352:366:7"
											},
											{
												"body": {
													"nativeSrc": "11895:248:7",
													"nodeType": "YulBlock",
													"src": "11895:248:7",
													"statements": [
														{
															"nativeSrc": "11905:26:7",
															"nodeType": "YulAssignment",
															"src": "11905:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11917:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11917:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11928:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11928:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11913:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11913:3:7"
																},
																"nativeSrc": "11913:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11913:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11905:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11905:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11952:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11963:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11963:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11948:3:7"
																		},
																		"nativeSrc": "11948:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11948:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11971:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11971:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11977:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11977:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11967:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11967:3:7"
																		},
																		"nativeSrc": "11967:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11967:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11941:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11941:6:7"
																},
																"nativeSrc": "11941:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11941:47:7"
															},
															"nativeSrc": "11941:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11941:47:7"
														},
														{
															"nativeSrc": "11997:139:7",
															"nodeType": "YulAssignment",
															"src": "11997:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12131:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12131:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12005:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12005:124:7"
																},
																"nativeSrc": "12005:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12005:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11997:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11997:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11724:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11875:9:7",
														"nodeType": "YulTypedName",
														"src": "11875:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11890:4:7",
														"nodeType": "YulTypedName",
														"src": "11890:4:7",
														"type": ""
													}
												],
												"src": "11724:419:7"
											},
											{
												"body": {
													"nativeSrc": "12303:288:7",
													"nodeType": "YulBlock",
													"src": "12303:288:7",
													"statements": [
														{
															"nativeSrc": "12313:26:7",
															"nodeType": "YulAssignment",
															"src": "12313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12325:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12325:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12336:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12321:3:7"
																},
																"nativeSrc": "12321:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12402:3:7"
																		},
																		"nativeSrc": "12402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12349:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12349:43:7"
																},
																"nativeSrc": "12349:71:7",
																"nodeType": "YulFunctionCall",
																"src": "12349:71:7"
															},
															"nativeSrc": "12349:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "12349:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12474:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12474:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12487:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12487:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12498:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12498:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12483:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12483:3:7"
																		},
																		"nativeSrc": "12483:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12483:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12430:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12430:43:7"
																},
																"nativeSrc": "12430:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12430:72:7"
															},
															"nativeSrc": "12430:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12430:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12556:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12556:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12569:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12569:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12580:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12580:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12565:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12565:3:7"
																		},
																		"nativeSrc": "12565:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12565:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12512:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12512:43:7"
																},
																"nativeSrc": "12512:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12512:72:7"
															},
															"nativeSrc": "12512:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12512:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12149:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12259:9:7",
														"nodeType": "YulTypedName",
														"src": "12259:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12271:6:7",
														"nodeType": "YulTypedName",
														"src": "12271:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12279:6:7",
														"nodeType": "YulTypedName",
														"src": "12279:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12287:6:7",
														"nodeType": "YulTypedName",
														"src": "12287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12298:4:7",
														"nodeType": "YulTypedName",
														"src": "12298:4:7",
														"type": ""
													}
												],
												"src": "12149:442:7"
											},
											{
												"body": {
													"nativeSrc": "12641:147:7",
													"nodeType": "YulBlock",
													"src": "12641:147:7",
													"statements": [
														{
															"nativeSrc": "12651:25:7",
															"nodeType": "YulAssignment",
															"src": "12651:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12674:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12674:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12656:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12656:17:7"
																},
																"nativeSrc": "12656:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12656:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12651:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12651:1:7"
																}
															]
														},
														{
															"nativeSrc": "12685:25:7",
															"nodeType": "YulAssignment",
															"src": "12685:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12708:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12708:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12690:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12690:17:7"
																},
																"nativeSrc": "12690:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12690:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12685:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12685:1:7"
																}
															]
														},
														{
															"nativeSrc": "12719:16:7",
															"nodeType": "YulAssignment",
															"src": "12719:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12730:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12730:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12733:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12733:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12726:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12726:3:7"
																},
																"nativeSrc": "12726:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12726:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12719:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12719:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12759:22:7",
																"nodeType": "YulBlock",
																"src": "12759:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12761:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12761:16:7"
																			},
																			"nativeSrc": "12761:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12761:18:7"
																		},
																		"nativeSrc": "12761:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12761:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12751:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12751:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12754:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12754:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12748:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12748:2:7"
																},
																"nativeSrc": "12748:10:7",
																"nodeType": "YulFunctionCall",
																"src": "12748:10:7"
															},
															"nativeSrc": "12745:36:7",
															"nodeType": "YulIf",
															"src": "12745:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12597:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12628:1:7",
														"nodeType": "YulTypedName",
														"src": "12628:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12631:1:7",
														"nodeType": "YulTypedName",
														"src": "12631:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12637:3:7",
														"nodeType": "YulTypedName",
														"src": "12637:3:7",
														"type": ""
													}
												],
												"src": "12597:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value does not cover fees. Enter\")\n\n        mstore(add(memPtr, 32), \" a higher amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value cannot cover any fees. Ent\")\n\n        mstore(add(memPtr, 32), \"er a higher amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Burn rate mas be less than 50%\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80638da5cb5b11610095578063b4969b9611610064578063b4969b961461029a578063bed99850146102b6578063dd62ed3e146102d4578063f2fde38b14610304576100fe565b80638da5cb5b1461021257806395d89b4114610230578063a0712d681461024e578063a9059cbb1461026a576100fe565b8063313ce567116100d1578063313ce5671461019e57806342966c68146101bc57806370a08231146101d8578063715018a614610208576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a610320565b6040516101179190611296565b60405180910390f35b61013a60048036038101906101359190611347565b6103b0565b604051610147919061139f565b60405180910390f35b6101586103d2565b60405161016591906113c7565b60405180910390f35b610188600480360381019061018391906113e0565b6103db565b604051610195919061139f565b60405180910390f35b6101a661058b565b6040516101b3919061144b565b60405180910390f35b6101d660048036038101906101d19190611464565b610593565b005b6101f260048036038101906101ed919061148f565b6105f6565b6040516101ff91906113c7565b60405180910390f35b61021061063b565b005b61021a61064e565b60405161022791906114c9565b60405180910390f35b610238610676565b6040516102459190611296565b60405180910390f35b61026860048036038101906102639190611464565b610706565b005b610284600480360381019061027f9190611347565b61071b565b604051610291919061139f565b60405180910390f35b6102b460048036038101906102af9190611519565b6108b3565b005b6102be610926565b6040516102cb9190611553565b60405180910390f35b6102ee60048036038101906102e9919061156c565b61093a565b6040516102fb91906113c7565b60405180910390f35b61031e6004803603810190610319919061148f565b6109bc565b005b60606003805461032f906115d7565b80601f016020809104026020016040519081016040528092919081815260200182805461035b906115d7565b80156103a65780601f1061037d576101008083540402835291602001916103a6565b820191905f5260205f20905b81548152906001019060200180831161038957829003601f168201915b5050505050905090565b5f806103ba610a40565b90506103c7818585610a47565b600191505092915050565b5f600254905090565b5f8180612710600560149054906101000a900461ffff1661ffff16836104019190611634565b61040b91906116a2565b1061044b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044290611742565b60405180910390fd5b6001612710600560149054906101000a900461ffff1661ffff16836104709190611634565b61047a91906116a2565b10156104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b2906117d0565b60405180910390fd5b5f612710600560149054906101000a900461ffff1661ffff16856104df9190611634565b6104e991906116a2565b90505f81856104f891906117ee565b90505f610503610a40565b9050610510888288610a59565b61051b888884610aec565b5f83111561057c5761052d8884610bdc565b8773ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58460405161057391906113c7565b60405180910390a25b60019450505050509392505050565b5f6012905090565b61059b610c5b565b6105a53382610bdc565b3373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040516105eb91906113c7565b60405180910390a250565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610643610c5b565b61064c5f610ce2565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610685906115d7565b80601f01602080910402602001604051908101604052809291908181526020018280546106b1906115d7565b80156106fc5780601f106106d3576101008083540402835291602001916106fc565b820191905f5260205f20905b8154815290600101906020018083116106df57829003601f168201915b5050505050905090565b61070e610c5b565b6107183382610da5565b50565b5f8180612710600560149054906101000a900461ffff1661ffff16836107419190611634565b61074b91906116a2565b1061078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078290611742565b60405180910390fd5b6001612710600560149054906101000a900461ffff1661ffff16836107b09190611634565b6107ba91906116a2565b10156107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f2906117d0565b60405180910390fd5b5f612710600560149054906101000a900461ffff1661ffff168561081f9190611634565b61082991906116a2565b90505f818561083891906117ee565b9050610845338783610aec565b5f8211156108a6576108573383610bdc565b3373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58360405161089d91906113c7565b60405180910390a25b6001935050505092915050565b6108bb610c5b565b806113888161ffff161115610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc9061186b565b60405180910390fd5b81600560146101000a81548161ffff021916908361ffff1602179055505050565b600560149054906101000a900461ffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6109c4610c5b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a34575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a2b91906114c9565b60405180910390fd5b610a3d81610ce2565b50565b5f33905090565b610a548383836001610e24565b505050565b5f610a64848461093a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ae65781811015610ad7578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ace93929190611889565b60405180910390fd5b610ae584848484035f610e24565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b5391906114c9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bcc575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bc391906114c9565b60405180910390fd5b610bd7838383610ff3565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c4c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c4391906114c9565b60405180910390fd5b610c57825f83610ff3565b5050565b610c63610a40565b73ffffffffffffffffffffffffffffffffffffffff16610c8161064e565b73ffffffffffffffffffffffffffffffffffffffff1614610ce057610ca4610a40565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cd791906114c9565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e15575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e0c91906114c9565b60405180910390fd5b610e205f8383610ff3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e94575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e8b91906114c9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f04575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610efb91906114c9565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fed578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fe491906113c7565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611043578060025f82825461103791906118be565b92505081905550611111565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110cc578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110c393929190611889565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611158578060025f82825403925050819055506111a2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111ff91906113c7565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611243578082015181840152602081019050611228565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6112688261120c565b6112728185611216565b9350611282818560208601611226565b61128b8161124e565b840191505092915050565b5f6020820190508181035f8301526112ae818461125e565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112e3826112ba565b9050919050565b6112f3816112d9565b81146112fd575f80fd5b50565b5f8135905061130e816112ea565b92915050565b5f819050919050565b61132681611314565b8114611330575f80fd5b50565b5f813590506113418161131d565b92915050565b5f806040838503121561135d5761135c6112b6565b5b5f61136a85828601611300565b925050602061137b85828601611333565b9150509250929050565b5f8115159050919050565b61139981611385565b82525050565b5f6020820190506113b25f830184611390565b92915050565b6113c181611314565b82525050565b5f6020820190506113da5f8301846113b8565b92915050565b5f805f606084860312156113f7576113f66112b6565b5b5f61140486828701611300565b935050602061141586828701611300565b925050604061142686828701611333565b9150509250925092565b5f60ff82169050919050565b61144581611430565b82525050565b5f60208201905061145e5f83018461143c565b92915050565b5f60208284031215611479576114786112b6565b5b5f61148684828501611333565b91505092915050565b5f602082840312156114a4576114a36112b6565b5b5f6114b184828501611300565b91505092915050565b6114c3816112d9565b82525050565b5f6020820190506114dc5f8301846114ba565b92915050565b5f61ffff82169050919050565b6114f8816114e2565b8114611502575f80fd5b50565b5f81359050611513816114ef565b92915050565b5f6020828403121561152e5761152d6112b6565b5b5f61153b84828501611505565b91505092915050565b61154d816114e2565b82525050565b5f6020820190506115665f830184611544565b92915050565b5f8060408385031215611582576115816112b6565b5b5f61158f85828601611300565b92505060206115a085828601611300565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115ee57607f821691505b602082108103611601576116006115aa565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61163e82611314565b915061164983611314565b925082820261165781611314565b9150828204841483151761166e5761166d611607565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6116ac82611314565b91506116b783611314565b9250826116c7576116c6611675565b5b828204905092915050565b7f56616c756520646f6573206e6f7420636f76657220666565732e20456e7465725f8201527f20612068696768657220616d6f756e7400000000000000000000000000000000602082015250565b5f61172c603083611216565b9150611737826116d2565b604082019050919050565b5f6020820190508181035f83015261175981611720565b9050919050565b7f56616c75652063616e6e6f7420636f76657220616e7920666565732e20456e745f8201527f657220612068696768657220616d6f756e740000000000000000000000000000602082015250565b5f6117ba603283611216565b91506117c582611760565b604082019050919050565b5f6020820190508181035f8301526117e7816117ae565b9050919050565b5f6117f882611314565b915061180383611314565b925082820390508181111561181b5761181a611607565b5b92915050565b7f4275726e2072617465206d6173206265206c657373207468616e2035302500005f82015250565b5f611855601e83611216565b915061186082611821565b602082019050919050565b5f6020820190508181035f83015261188281611849565b9050919050565b5f60608201905061189c5f8301866114ba565b6118a960208301856113b8565b6118b660408301846113b8565b949350505050565b5f6118c882611314565b91506118d383611314565b92508282019050808211156118eb576118ea611607565b5b9291505056fea2646970667358221220e422f4f1b7c161b2d3706c2d56f3caf8d169cb758df30f760ab18fb45524426d64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB4969B96 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB4969B96 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x304 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x208 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x706 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x32F SWAP1 PUSH2 0x15D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35B SWAP1 PUSH2 0x15D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x389 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3BA PUSH2 0xA40 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C7 DUP2 DUP6 DUP6 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP1 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST LT PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST LT ISZERO PUSH2 0x4BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B2 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP6 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x503 PUSH2 0xA40 JUMP JUMPDEST SWAP1 POP PUSH2 0x510 DUP9 DUP3 DUP9 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x51B DUP9 DUP9 DUP5 PUSH2 0xAEC JUMP JUMPDEST PUSH0 DUP4 GT ISZERO PUSH2 0x57C JUMPI PUSH2 0x52D DUP9 DUP5 PUSH2 0xBDC JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x59B PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x5A5 CALLER DUP3 PUSH2 0xBDC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x643 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x64C PUSH0 PUSH2 0xCE2 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B1 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70E PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x718 CALLER DUP3 PUSH2 0xDA5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP1 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST LT PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST LT ISZERO PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F2 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP6 PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x838 SWAP2 SWAP1 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP PUSH2 0x845 CALLER DUP8 DUP4 PUSH2 0xAEC JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x857 CALLER DUP4 PUSH2 0xBDC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8BB PUSH2 0xC5B JUMP JUMPDEST DUP1 PUSH2 0x1388 DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FC SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C4 PUSH2 0xC5B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA34 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2B SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA3D DUP2 PUSH2 0xCE2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA54 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA64 DUP5 DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xAE6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAD7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE24 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD7 DUP4 DUP4 DUP4 PUSH2 0xFF3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 DUP3 PUSH0 DUP4 PUSH2 0xFF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC63 PUSH2 0xA40 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC81 PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE0 JUMPI PUSH2 0xCA4 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD7 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE15 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE20 PUSH0 DUP4 DUP4 PUSH2 0xFF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE94 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8B SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF04 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFED JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFE4 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1043 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1111 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10CC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1158 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11A2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11FF SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1243 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1228 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1268 DUP3 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x1272 DUP2 DUP6 PUSH2 0x1216 JUMP JUMPDEST SWAP4 POP PUSH2 0x1282 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x128B DUP2 PUSH2 0x124E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12AE DUP2 DUP5 PUSH2 0x125E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12E3 DUP3 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F3 DUP2 PUSH2 0x12D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x12FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x130E DUP2 PUSH2 0x12EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1326 DUP2 PUSH2 0x1314 JUMP JUMPDEST DUP2 EQ PUSH2 0x1330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1341 DUP2 PUSH2 0x131D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x136A DUP6 DUP3 DUP7 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x137B DUP6 DUP3 DUP7 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1399 DUP2 PUSH2 0x1385 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1390 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C1 DUP2 PUSH2 0x1314 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DA PUSH0 DUP4 ADD DUP5 PUSH2 0x13B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13F7 JUMPI PUSH2 0x13F6 PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1404 DUP7 DUP3 DUP8 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1415 DUP7 DUP3 DUP8 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1426 DUP7 DUP3 DUP8 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1445 DUP2 PUSH2 0x1430 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145E PUSH0 DUP4 ADD DUP5 PUSH2 0x143C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH2 0x1478 PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1486 DUP5 DUP3 DUP6 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A4 JUMPI PUSH2 0x14A3 PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B1 DUP5 DUP3 DUP6 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C3 DUP2 PUSH2 0x12D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14DC PUSH0 DUP4 ADD DUP5 PUSH2 0x14BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F8 DUP2 PUSH2 0x14E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1502 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1513 DUP2 PUSH2 0x14EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152E JUMPI PUSH2 0x152D PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x153B DUP5 DUP3 DUP6 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x154D DUP2 PUSH2 0x14E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1566 PUSH0 DUP4 ADD DUP5 PUSH2 0x1544 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x12B6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x158F DUP6 DUP3 DUP7 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A0 DUP6 DUP3 DUP7 ADD PUSH2 0x1300 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15EE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x15AA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x163E DUP3 PUSH2 0x1314 JUMP JUMPDEST SWAP2 POP PUSH2 0x1649 DUP4 PUSH2 0x1314 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1657 DUP2 PUSH2 0x1314 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x166E JUMPI PUSH2 0x166D PUSH2 0x1607 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16AC DUP3 PUSH2 0x1314 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B7 DUP4 PUSH2 0x1314 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16C7 JUMPI PUSH2 0x16C6 PUSH2 0x1675 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56616C756520646F6573206E6F7420636F76657220666565732E20456E746572 PUSH0 DUP3 ADD MSTORE PUSH32 0x20612068696768657220616D6F756E7400000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x172C PUSH1 0x30 DUP4 PUSH2 0x1216 JUMP JUMPDEST SWAP2 POP PUSH2 0x1737 DUP3 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1759 DUP2 PUSH2 0x1720 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C75652063616E6E6F7420636F76657220616E7920666565732E20456E74 PUSH0 DUP3 ADD MSTORE PUSH32 0x657220612068696768657220616D6F756E740000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17BA PUSH1 0x32 DUP4 PUSH2 0x1216 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C5 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E7 DUP2 PUSH2 0x17AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F8 DUP3 PUSH2 0x1314 JUMP JUMPDEST SWAP2 POP PUSH2 0x1803 DUP4 PUSH2 0x1314 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x181B JUMPI PUSH2 0x181A PUSH2 0x1607 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4275726E2072617465206D6173206265206C657373207468616E203530250000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1855 PUSH1 0x1E DUP4 PUSH2 0x1216 JUMP JUMPDEST SWAP2 POP PUSH2 0x1860 DUP3 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1882 DUP2 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x189C PUSH0 DUP4 ADD DUP7 PUSH2 0x14BA JUMP JUMPDEST PUSH2 0x18A9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x18B6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13B8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18C8 DUP3 PUSH2 0x1314 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D3 DUP4 PUSH2 0x1314 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18EA PUSH2 0x1607 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x22 DELEGATECALL CALL 0xB7 0xC1 PUSH2 0xB2D3 PUSH17 0x6C2D56F3CAF8D169CB758DF30F760AB18F 0xB4 SSTORE 0x24 TIMESTAMP PUSH14 0x64736F6C63430008180033000000 ",
							"sourceMap": "245:2648:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2368:518:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1540:131:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1366:91:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1880:436;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1725:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;306:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;2368:518:6:-;2480:4;2464:5;891:6;882:5;870:8;;;;;;;;;;;861:17;;:6;:17;;;;:::i;:::-;860:27;;;;:::i;:::-;:37;857:100;;899:58;;;;;;;;;;:::i;:::-;;;;;;;;857:100;1001:1;993:5;981:8;;;;;;;;;;;972:17;;:6;:17;;;;:::i;:::-;971:27;;;;:::i;:::-;:31;968:96;;;1004:60;;;;;;;;;;:::i;:::-;;;;;;;;968:96;2497:18:::1;2539:5;2527:8;;;;;;;;;;;2519:16;;:5;:16;;;;:::i;:::-;2518:26;;;;:::i;:::-;2497:47;;2555:18;2584:10;2576:5;:18;;;;:::i;:::-;2555:39;;2607:15;2625:12;:10;:12::i;:::-;2607:30;;2648:37;2664:4;2670:7;2679:5;2648:15;:37::i;:::-;2696;2712:4;2718:2;2722:10;2696:15;:37::i;:::-;2763:1;2750:10;:14;2746:111;;;2781:22;2787:4;2792:10;2781:5;:22::i;:::-;2828:4;2823:22;;;2834:10;2823:22;;;;;;:::i;:::-;;;;;;;;2746:111;2874:4;2867:11;;;;;2368:518:::0;;;;;;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;1540:131:6:-;1531:13:0;:11;:13::i;:::-;1598:25:6::1;1604:10;1616:6;1598:5;:25::i;:::-;1644:10;1639:24;;;1656:6;1639:24;;;;;;:::i;:::-;;;;;;;;1540:131:::0;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1366:91:6:-;1531:13:0;:11;:13::i;:::-;1424:25:6::1;1430:10;1442:6;1424:5;:25::i;:::-;1366:91:::0;:::o;1880:436::-;1974:4;1958:5;891:6;882:5;870:8;;;;;;;;;;;861:17;;:6;:17;;;;:::i;:::-;860:27;;;;:::i;:::-;:37;857:100;;899:58;;;;;;;;;;:::i;:::-;;;;;;;;857:100;1001:1;993:5;981:8;;;;;;;;;;;972:17;;:6;:17;;;;:::i;:::-;971:27;;;;:::i;:::-;:31;968:96;;;1004:60;;;;;;;;;;:::i;:::-;;;;;;;;968:96;1991:18:::1;2033:5;2021:8;;;;;;;;;;;2013:16;;:5;:16;;;;:::i;:::-;2012:26;;;;:::i;:::-;1991:47;;2049:18;2078:10;2070:5;:18;;;;:::i;:::-;2049:39;;2109:42;2125:10;2136:2;2140:10;2109:15;:42::i;:::-;2179:1;2166:10;:14;2162:123;;;2197:28;2203:10;2214;2197:5;:28::i;:::-;2250:10;2245:28;;;2262:10;2245:28;;;;;;:::i;:::-;;;;;;;;2162:123;2304:4;2297:11;;;;1880:436:::0;;;;;:::o;1725:116::-;1531:13:0;:11;:13::i;:::-;1791:9:6::1;732:4;720:9;:16;;;716:62;;;738:40;;;;;;;;;;:::i;:::-;;;;;;;;716:62;1824:9:::2;1813:8;;:20;;;;;;;;;;;;;;;;;;1554:1:0::1;1725:116:6::0;:::o;306:22::-;;;;;;;;;;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:89::-;5911:7;5951:6;5944:5;5940:18;5929:29;;5875:89;;;:::o;5970:120::-;6042:23;6059:5;6042:23;:::i;:::-;6035:5;6032:34;6022:62;;6080:1;6077;6070:12;6022:62;5970:120;:::o;6096:137::-;6141:5;6179:6;6166:20;6157:29;;6195:32;6221:5;6195:32;:::i;:::-;6096:137;;;;:::o;6239:327::-;6297:6;6346:2;6334:9;6325:7;6321:23;6317:32;6314:119;;;6352:79;;:::i;:::-;6314:119;6472:1;6497:52;6541:7;6532:6;6521:9;6517:22;6497:52;:::i;:::-;6487:62;;6443:116;6239:327;;;;:::o;6572:115::-;6657:23;6674:5;6657:23;:::i;:::-;6652:3;6645:36;6572:115;;:::o;6693:218::-;6784:4;6822:2;6811:9;6807:18;6799:26;;6835:69;6901:1;6890:9;6886:17;6877:6;6835:69;:::i;:::-;6693:218;;;;:::o;6917:474::-;6985:6;6993;7042:2;7030:9;7021:7;7017:23;7013:32;7010:119;;;7048:79;;:::i;:::-;7010:119;7168:1;7193:53;7238:7;7229:6;7218:9;7214:22;7193:53;:::i;:::-;7183:63;;7139:117;7295:2;7321:53;7366:7;7357:6;7346:9;7342:22;7321:53;:::i;:::-;7311:63;;7266:118;6917:474;;;;;:::o;7397:180::-;7445:77;7442:1;7435:88;7542:4;7539:1;7532:15;7566:4;7563:1;7556:15;7583:320;7627:6;7664:1;7658:4;7654:12;7644:22;;7711:1;7705:4;7701:12;7732:18;7722:81;;7788:4;7780:6;7776:17;7766:27;;7722:81;7850:2;7842:6;7839:14;7819:18;7816:38;7813:84;;7869:18;;:::i;:::-;7813:84;7634:269;7583:320;;;:::o;7909:180::-;7957:77;7954:1;7947:88;8054:4;8051:1;8044:15;8078:4;8075:1;8068:15;8095:410;8135:7;8158:20;8176:1;8158:20;:::i;:::-;8153:25;;8192:20;8210:1;8192:20;:::i;:::-;8187:25;;8247:1;8244;8240:9;8269:30;8287:11;8269:30;:::i;:::-;8258:41;;8448:1;8439:7;8435:15;8432:1;8429:22;8409:1;8402:9;8382:83;8359:139;;8478:18;;:::i;:::-;8359:139;8143:362;8095:410;;;;:::o;8511:180::-;8559:77;8556:1;8549:88;8656:4;8653:1;8646:15;8680:4;8677:1;8670:15;8697:185;8737:1;8754:20;8772:1;8754:20;:::i;:::-;8749:25;;8788:20;8806:1;8788:20;:::i;:::-;8783:25;;8827:1;8817:35;;8832:18;;:::i;:::-;8817:35;8874:1;8871;8867:9;8862:14;;8697:185;;;;:::o;8888:235::-;9028:34;9024:1;9016:6;9012:14;9005:58;9097:18;9092:2;9084:6;9080:15;9073:43;8888:235;:::o;9129:366::-;9271:3;9292:67;9356:2;9351:3;9292:67;:::i;:::-;9285:74;;9368:93;9457:3;9368:93;:::i;:::-;9486:2;9481:3;9477:12;9470:19;;9129:366;;;:::o;9501:419::-;9667:4;9705:2;9694:9;9690:18;9682:26;;9754:9;9748:4;9744:20;9740:1;9729:9;9725:17;9718:47;9782:131;9908:4;9782:131;:::i;:::-;9774:139;;9501:419;;;:::o;9926:237::-;10066:34;10062:1;10054:6;10050:14;10043:58;10135:20;10130:2;10122:6;10118:15;10111:45;9926:237;:::o;10169:366::-;10311:3;10332:67;10396:2;10391:3;10332:67;:::i;:::-;10325:74;;10408:93;10497:3;10408:93;:::i;:::-;10526:2;10521:3;10517:12;10510:19;;10169:366;;;:::o;10541:419::-;10707:4;10745:2;10734:9;10730:18;10722:26;;10794:9;10788:4;10784:20;10780:1;10769:9;10765:17;10758:47;10822:131;10948:4;10822:131;:::i;:::-;10814:139;;10541:419;;;:::o;10966:194::-;11006:4;11026:20;11044:1;11026:20;:::i;:::-;11021:25;;11060:20;11078:1;11060:20;:::i;:::-;11055:25;;11104:1;11101;11097:9;11089:17;;11128:1;11122:4;11119:11;11116:37;;;11133:18;;:::i;:::-;11116:37;10966:194;;;;:::o;11166:180::-;11306:32;11302:1;11294:6;11290:14;11283:56;11166:180;:::o;11352:366::-;11494:3;11515:67;11579:2;11574:3;11515:67;:::i;:::-;11508:74;;11591:93;11680:3;11591:93;:::i;:::-;11709:2;11704:3;11700:12;11693:19;;11352:366;;;:::o;11724:419::-;11890:4;11928:2;11917:9;11913:18;11905:26;;11977:9;11971:4;11967:20;11963:1;11952:9;11948:17;11941:47;12005:131;12131:4;12005:131;:::i;:::-;11997:139;;11724:419;;;:::o;12149:442::-;12298:4;12336:2;12325:9;12321:18;12313:26;;12349:71;12417:1;12406:9;12402:17;12393:6;12349:71;:::i;:::-;12430:72;12498:2;12487:9;12483:18;12474:6;12430:72;:::i;:::-;12512;12580:2;12569:9;12565:18;12556:6;12512:72;:::i;:::-;12149:442;;;;;;:::o;12597:191::-;12637:3;12656:20;12674:1;12656:20;:::i;:::-;12651:25;;12690:20;12708:1;12690:20;:::i;:::-;12685:25;;12733:1;12730;12726:9;12719:16;;12754:3;12751:1;12748:10;12745:36;;;12761:18;;:::i;:::-;12745:36;12597:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1287800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"burn(uint256)": "infinite",
								"burnRate()": "2561",
								"decimals()": "361",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2538",
								"renounceOwnership()": "infinite",
								"setBurnRate(uint16)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 2893,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 644,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 644,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 644,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 411,
									"end": 644,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 411,
									"end": 644,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 411,
									"end": 644,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 411,
									"end": 644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 411,
									"end": 644,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 514,
									"end": 524,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 491,
									"end": 496,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 497,
									"end": 504,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 547,
									"end": 556,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 536,
									"end": 544,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 536,
									"end": 544,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFF"
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFF"
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 536,
									"end": 556,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 567,
									"end": 599,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 573,
									"end": 583,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 584,
									"end": 598,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 567,
									"end": 572,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 567,
									"end": 572,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 567,
									"end": 572,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 567,
									"end": 599,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 567,
									"end": 599,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 567,
									"end": 599,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 567,
									"end": 599,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 567,
									"end": 599,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 411,
									"end": 644,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2677,
									"end": 2766,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2677,
									"end": 2766,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2720,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2759,
									"name": "PUSH",
									"source": 7,
									"value": "FFFF"
								},
								{
									"begin": 2746,
									"end": 2751,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2742,
									"end": 2760,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2731,
									"end": 2760,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2731,
									"end": 2760,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2677,
									"end": 2766,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2677,
									"end": 2766,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2677,
									"end": 2766,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2677,
									"end": 2766,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2772,
									"end": 2892,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2772,
									"end": 2892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 2861,
									"end": 2866,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2844,
									"end": 2867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2867,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 2844,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 2842,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2834,
									"end": 2868,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2824,
									"end": 2886,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2824,
									"end": 2886,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2882,
									"end": 2883,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2879,
									"end": 2880,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2872,
									"end": 2884,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2824,
									"end": 2886,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2824,
									"end": 2886,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2772,
									"end": 2892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2772,
									"end": 2892,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2898,
									"end": 3039,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2898,
									"end": 3039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2954,
									"end": 2959,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2991,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 2992,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2970,
									"end": 2992,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2970,
									"end": 2992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3001,
									"end": 3033,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3027,
									"end": 3032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3001,
									"end": 3033,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3001,
									"end": 3033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3001,
									"end": 3033,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3001,
									"end": 3033,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2898,
									"end": 3039,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2898,
									"end": 3039,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2898,
									"end": 3039,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2898,
									"end": 3039,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2898,
									"end": 3039,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3045,
									"end": 4052,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3045,
									"end": 4052,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3152,
									"end": 3158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3160,
									"end": 3166,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3168,
									"end": 3174,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3217,
									"end": 3219,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3205,
									"end": 3214,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3196,
									"end": 3203,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3192,
									"end": 3215,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3220,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3185,
									"end": 3304,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3185,
									"end": 3304,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3185,
									"end": 3304,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3223,
									"end": 3302,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3223,
									"end": 3302,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3223,
									"end": 3302,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3223,
									"end": 3302,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3223,
									"end": 3302,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3185,
									"end": 3304,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3185,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3364,
									"end": 3365,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3353,
									"end": 3362,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3349,
									"end": 3366,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3367,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3394,
									"end": 3412,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3386,
									"end": 3392,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3383,
									"end": 3413,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3497,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3380,
									"end": 3497,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3416,
									"end": 3495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3416,
									"end": 3495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3495,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3416,
									"end": 3495,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3497,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3380,
									"end": 3497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3521,
									"end": 3595,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3587,
									"end": 3594,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3578,
									"end": 3584,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3567,
									"end": 3576,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3563,
									"end": 3585,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3521,
									"end": 3595,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3521,
									"end": 3595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3521,
									"end": 3595,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3521,
									"end": 3595,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3595,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3665,
									"end": 3667,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3654,
									"end": 3663,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3650,
									"end": 3668,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3644,
									"end": 3669,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3696,
									"end": 3714,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3688,
									"end": 3694,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3685,
									"end": 3715,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3799,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3799,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3682,
									"end": 3799,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3718,
									"end": 3797,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3718,
									"end": 3797,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3718,
									"end": 3797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3718,
									"end": 3797,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3718,
									"end": 3797,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3799,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3682,
									"end": 3799,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3823,
									"end": 3897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3889,
									"end": 3896,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3880,
									"end": 3886,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3869,
									"end": 3878,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3865,
									"end": 3887,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3823,
									"end": 3897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3823,
									"end": 3897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3823,
									"end": 3897,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3823,
									"end": 3897,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3813,
									"end": 3897,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3813,
									"end": 3897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3615,
									"end": 3907,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3946,
									"end": 3948,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3972,
									"end": 4035,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4027,
									"end": 4034,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4018,
									"end": 4024,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4007,
									"end": 4016,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4003,
									"end": 4025,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4035,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3972,
									"end": 4035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4035,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3972,
									"end": 4035,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3962,
									"end": 4035,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3962,
									"end": 4035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3917,
									"end": 4045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3045,
									"end": 4052,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3045,
									"end": 4052,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3045,
									"end": 4052,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3045,
									"end": 4052,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3045,
									"end": 4052,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3045,
									"end": 4052,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4058,
									"end": 4157,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4058,
									"end": 4157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4110,
									"end": 4116,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4144,
									"end": 4149,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4138,
									"end": 4150,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4150,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4058,
									"end": 4157,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4058,
									"end": 4157,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4058,
									"end": 4157,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4058,
									"end": 4157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4163,
									"end": 4343,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 4163,
									"end": 4343,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4211,
									"end": 4288,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4208,
									"end": 4209,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4201,
									"end": 4289,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4312,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4305,
									"end": 4306,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4298,
									"end": 4313,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4332,
									"end": 4336,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4329,
									"end": 4330,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4322,
									"end": 4337,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4349,
									"end": 4669,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 4349,
									"end": 4669,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4393,
									"end": 4399,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4424,
									"end": 4428,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4420,
									"end": 4432,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4410,
									"end": 4432,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4410,
									"end": 4432,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4477,
									"end": 4478,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4471,
									"end": 4475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4467,
									"end": 4479,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4498,
									"end": 4516,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4488,
									"end": 4569,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4488,
									"end": 4569,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4558,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4546,
									"end": 4552,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4542,
									"end": 4559,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4559,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4559,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4488,
									"end": 4569,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4488,
									"end": 4569,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4616,
									"end": 4618,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4608,
									"end": 4614,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4605,
									"end": 4619,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4585,
									"end": 4603,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4582,
									"end": 4620,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4579,
									"end": 4663,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4579,
									"end": 4663,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4635,
									"end": 4653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4635,
									"end": 4653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 4635,
									"end": 4653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4635,
									"end": 4653,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4635,
									"end": 4653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4579,
									"end": 4663,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4579,
									"end": 4663,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4400,
									"end": 4669,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4349,
									"end": 4669,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4349,
									"end": 4669,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4349,
									"end": 4669,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4349,
									"end": 4669,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4675,
									"end": 4816,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 4675,
									"end": 4816,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4724,
									"end": 4728,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4747,
									"end": 4750,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4739,
									"end": 4750,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4739,
									"end": 4750,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4770,
									"end": 4773,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4767,
									"end": 4768,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4760,
									"end": 4774,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4801,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4791,
									"end": 4809,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 4783,
									"end": 4809,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4783,
									"end": 4809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4675,
									"end": 4816,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4675,
									"end": 4816,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4675,
									"end": 4816,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4675,
									"end": 4816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4822,
									"end": 4915,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 4822,
									"end": 4915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4859,
									"end": 4865,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4906,
									"end": 4908,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4901,
									"end": 4903,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4894,
									"end": 4899,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4890,
									"end": 4904,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 4909,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4876,
									"end": 4909,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4876,
									"end": 4909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4822,
									"end": 4915,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4822,
									"end": 4915,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4822,
									"end": 4915,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4822,
									"end": 4915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5028,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4921,
									"end": 5028,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4965,
									"end": 4973,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5015,
									"end": 5020,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5009,
									"end": 5013,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5005,
									"end": 5021,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4984,
									"end": 5021,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4984,
									"end": 5021,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5028,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5028,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5028,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5028,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5028,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5427,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 5034,
									"end": 5427,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5103,
									"end": 5109,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5153,
									"end": 5154,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5141,
									"end": 5151,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5137,
									"end": 5155,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5176,
									"end": 5273,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5206,
									"end": 5272,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5195,
									"end": 5204,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5176,
									"end": 5273,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5176,
									"end": 5273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5176,
									"end": 5273,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5176,
									"end": 5273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5294,
									"end": 5333,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5324,
									"end": 5332,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5313,
									"end": 5322,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5294,
									"end": 5333,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5294,
									"end": 5333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5294,
									"end": 5333,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5294,
									"end": 5333,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5282,
									"end": 5333,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5282,
									"end": 5333,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5370,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5362,
									"end": 5371,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5355,
									"end": 5360,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5351,
									"end": 5372,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5342,
									"end": 5372,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5342,
									"end": 5372,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5415,
									"end": 5419,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5405,
									"end": 5413,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5401,
									"end": 5420,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5394,
									"end": 5399,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5391,
									"end": 5421,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5421,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5421,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5110,
									"end": 5427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5110,
									"end": 5427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5427,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5427,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5427,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5433,
									"end": 5510,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5433,
									"end": 5510,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5470,
									"end": 5477,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5499,
									"end": 5504,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5488,
									"end": 5504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5488,
									"end": 5504,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5433,
									"end": 5510,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5433,
									"end": 5510,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5433,
									"end": 5510,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5433,
									"end": 5510,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5516,
									"end": 5576,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5516,
									"end": 5576,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5544,
									"end": 5547,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5565,
									"end": 5570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5558,
									"end": 5570,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5558,
									"end": 5570,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5516,
									"end": 5576,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5516,
									"end": 5576,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5516,
									"end": 5576,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5516,
									"end": 5576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5582,
									"end": 5724,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5582,
									"end": 5724,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5632,
									"end": 5641,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5665,
									"end": 5718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5683,
									"end": 5717,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5692,
									"end": 5716,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5710,
									"end": 5715,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5692,
									"end": 5716,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5692,
									"end": 5716,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5692,
									"end": 5716,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5692,
									"end": 5716,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5683,
									"end": 5717,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5683,
									"end": 5717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5683,
									"end": 5717,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5683,
									"end": 5717,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5665,
									"end": 5718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5665,
									"end": 5718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5665,
									"end": 5718,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5665,
									"end": 5718,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5652,
									"end": 5718,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5652,
									"end": 5718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5582,
									"end": 5724,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5582,
									"end": 5724,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5582,
									"end": 5724,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5582,
									"end": 5724,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5730,
									"end": 5805,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5730,
									"end": 5805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5773,
									"end": 5776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5794,
									"end": 5799,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5787,
									"end": 5799,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5787,
									"end": 5799,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5730,
									"end": 5805,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5730,
									"end": 5805,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5730,
									"end": 5805,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5730,
									"end": 5805,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 6080,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 5811,
									"end": 6080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5921,
									"end": 5960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5952,
									"end": 5959,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5921,
									"end": 5960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5921,
									"end": 5960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5921,
									"end": 5960,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5921,
									"end": 5960,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5982,
									"end": 6073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6031,
									"end": 6072,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6055,
									"end": 6071,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6072,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6031,
									"end": 6072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6072,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6031,
									"end": 6072,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6023,
									"end": 6029,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6016,
									"end": 6020,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6010,
									"end": 6021,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5982,
									"end": 6073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 5982,
									"end": 6073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5982,
									"end": 6073,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5982,
									"end": 6073,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5976,
									"end": 5980,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5969,
									"end": 6074,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5887,
									"end": 6080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 6080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 6080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 6080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 6080,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6086,
									"end": 6159,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6086,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6131,
									"end": 6134,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6086,
									"end": 6159,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6086,
									"end": 6159,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6165,
									"end": 6354,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6165,
									"end": 6354,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6242,
									"end": 6274,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6242,
									"end": 6274,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6242,
									"end": 6274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6242,
									"end": 6274,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6242,
									"end": 6274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6348,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6341,
									"end": 6347,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6333,
									"end": 6339,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6331,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6348,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6283,
									"end": 6348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6348,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6283,
									"end": 6348,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6218,
									"end": 6354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6165,
									"end": 6354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6165,
									"end": 6354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6165,
									"end": 6354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6360,
									"end": 6546,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6360,
									"end": 6546,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6540,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6420,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6437,
									"end": 6440,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6427,
									"end": 6441,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6540,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6420,
									"end": 6540,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6530,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6528,
									"end": 6529,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6521,
									"end": 6526,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6530,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6491,
									"end": 6530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6530,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6491,
									"end": 6530,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6464,
									"end": 6465,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6457,
									"end": 6462,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6453,
									"end": 6466,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6444,
									"end": 6466,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6444,
									"end": 6466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6420,
									"end": 6540,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6540,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6420,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6360,
									"end": 6546,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6360,
									"end": 6546,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6360,
									"end": 6546,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6552,
									"end": 7095,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6552,
									"end": 7095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6653,
									"end": 6655,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6648,
									"end": 6651,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6645,
									"end": 6656,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6642,
									"end": 7088,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6642,
									"end": 7088,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6642,
									"end": 7088,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6687,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 6719,
									"end": 6724,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6687,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 6687,
									"end": 6725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6687,
									"end": 6725,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 6687,
									"end": 6725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6771,
									"end": 6800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6789,
									"end": 6799,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6771,
									"end": 6800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 6771,
									"end": 6800,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6771,
									"end": 6800,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6771,
									"end": 6800,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6761,
									"end": 6769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6757,
									"end": 6801,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6954,
									"end": 6956,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6942,
									"end": 6952,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6939,
									"end": 6957,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6936,
									"end": 6985,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6936,
									"end": 6985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 6936,
									"end": 6985,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6975,
									"end": 6983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6960,
									"end": 6983,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6960,
									"end": 6983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6936,
									"end": 6985,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 6936,
									"end": 6985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6998,
									"end": 7078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7054,
									"end": 7076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7072,
									"end": 7075,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7054,
									"end": 7076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 7054,
									"end": 7076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7054,
									"end": 7076,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7054,
									"end": 7076,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7044,
									"end": 7052,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7040,
									"end": 7077,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7027,
									"end": 7038,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6998,
									"end": 7078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6998,
									"end": 7078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6998,
									"end": 7078,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 6998,
									"end": 7078,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6657,
									"end": 7088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6657,
									"end": 7088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6642,
									"end": 7088,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6642,
									"end": 7088,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6552,
									"end": 7095,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6552,
									"end": 7095,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6552,
									"end": 7095,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6552,
									"end": 7095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7101,
									"end": 7218,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7101,
									"end": 7218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7155,
									"end": 7163,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7205,
									"end": 7210,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7199,
									"end": 7203,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7195,
									"end": 7211,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7174,
									"end": 7211,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7174,
									"end": 7211,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7101,
									"end": 7218,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7101,
									"end": 7218,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7101,
									"end": 7218,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7101,
									"end": 7218,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7101,
									"end": 7218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7224,
									"end": 7393,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7224,
									"end": 7393,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7268,
									"end": 7274,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7301,
									"end": 7352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 7349,
									"end": 7350,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7345,
									"end": 7351,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7337,
									"end": 7342,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7334,
									"end": 7335,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7330,
									"end": 7343,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7301,
									"end": 7352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7301,
									"end": 7352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7301,
									"end": 7352,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 7301,
									"end": 7352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7297,
									"end": 7353,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7382,
									"end": 7386,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7376,
									"end": 7380,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7372,
									"end": 7387,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7362,
									"end": 7387,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7362,
									"end": 7387,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7275,
									"end": 7393,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7224,
									"end": 7393,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7224,
									"end": 7393,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7224,
									"end": 7393,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7224,
									"end": 7393,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7224,
									"end": 7393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7398,
									"end": 7693,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7398,
									"end": 7693,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7474,
									"end": 7478,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7620,
									"end": 7649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7645,
									"end": 7648,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7639,
									"end": 7643,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7620,
									"end": 7649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7620,
									"end": 7649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7620,
									"end": 7649,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7620,
									"end": 7649,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7612,
									"end": 7649,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7612,
									"end": 7649,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7685,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7679,
									"end": 7680,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7675,
									"end": 7686,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7669,
									"end": 7673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7666,
									"end": 7687,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7398,
									"end": 7693,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7398,
									"end": 7693,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7398,
									"end": 7693,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7398,
									"end": 7693,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7398,
									"end": 7693,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7698,
									"end": 9093,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 7698,
									"end": 9093,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7815,
									"end": 7852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7815,
									"end": 7852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 7815,
									"end": 7852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7815,
									"end": 7852,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7815,
									"end": 7852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7917,
									"end": 7935,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7909,
									"end": 7915,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 7936,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7903,
									"end": 7959,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7903,
									"end": 7959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 7903,
									"end": 7959,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7939,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7939,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 7939,
									"end": 7957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7939,
									"end": 7957,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7939,
									"end": 7957,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7903,
									"end": 7959,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 7903,
									"end": 7959,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7983,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8015,
									"end": 8019,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8009,
									"end": 8020,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 7983,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 7983,
									"end": 8021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7983,
									"end": 8021,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7983,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8068,
									"end": 8135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8128,
									"end": 8134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8126,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8114,
									"end": 8118,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8068,
									"end": 8135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 8068,
									"end": 8135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8068,
									"end": 8135,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8068,
									"end": 8135,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8162,
									"end": 8163,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8186,
									"end": 8190,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8173,
									"end": 8190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8173,
									"end": 8190,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8218,
									"end": 8220,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8210,
									"end": 8216,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8207,
									"end": 8221,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8235,
									"end": 8236,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8230,
									"end": 8848,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8230,
									"end": 8848,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8230,
									"end": 8848,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8230,
									"end": 8848,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8892,
									"end": 8893,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8909,
									"end": 8915,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8906,
									"end": 8983,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8906,
									"end": 8983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8906,
									"end": 8983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 8967,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8953,
									"end": 8956,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 8949,
									"end": 8968,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8943,
									"end": 8969,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8934,
									"end": 8969,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8934,
									"end": 8969,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8906,
									"end": 8983,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8906,
									"end": 8983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9009,
									"end": 9076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 9069,
									"end": 9075,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9062,
									"end": 9067,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9009,
									"end": 9076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 9009,
									"end": 9076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9009,
									"end": 9076,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 9009,
									"end": 9076,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9003,
									"end": 9007,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8996,
									"end": 9077,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8865,
									"end": 9087,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8200,
									"end": 9087,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8200,
									"end": 9087,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8230,
									"end": 8848,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8230,
									"end": 8848,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8282,
									"end": 8286,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8278,
									"end": 8287,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8270,
									"end": 8276,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8266,
									"end": 8288,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8316,
									"end": 8353,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8348,
									"end": 8352,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8316,
									"end": 8353,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 8316,
									"end": 8353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8316,
									"end": 8353,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8316,
									"end": 8353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8375,
									"end": 8376,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8389,
									"end": 8597,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8389,
									"end": 8597,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8403,
									"end": 8410,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8400,
									"end": 8401,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8397,
									"end": 8411,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8389,
									"end": 8597,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8389,
									"end": 8597,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8389,
									"end": 8597,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8482,
									"end": 8491,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8477,
									"end": 8480,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8473,
									"end": 8492,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8467,
									"end": 8493,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8459,
									"end": 8465,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8452,
									"end": 8494,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8533,
									"end": 8534,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8525,
									"end": 8531,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8521,
									"end": 8535,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8511,
									"end": 8535,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8511,
									"end": 8535,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8580,
									"end": 8582,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8569,
									"end": 8578,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8565,
									"end": 8583,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8552,
									"end": 8583,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8552,
									"end": 8583,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8430,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8423,
									"end": 8424,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8419,
									"end": 8431,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8431,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8389,
									"end": 8597,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8389,
									"end": 8597,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8389,
									"end": 8597,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8389,
									"end": 8597,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8625,
									"end": 8631,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8616,
									"end": 8623,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8613,
									"end": 8632,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8610,
									"end": 8789,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8610,
									"end": 8789,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8610,
									"end": 8789,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8683,
									"end": 8692,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8678,
									"end": 8681,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8674,
									"end": 8693,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8668,
									"end": 8694,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8726,
									"end": 8774,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 8768,
									"end": 8772,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8760,
									"end": 8766,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8756,
									"end": 8773,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8745,
									"end": 8754,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8726,
									"end": 8774,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8726,
									"end": 8774,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8726,
									"end": 8774,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 8726,
									"end": 8774,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8718,
									"end": 8724,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8711,
									"end": 8775,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8633,
									"end": 8789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8610,
									"end": 8789,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8610,
									"end": 8789,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8835,
									"end": 8836,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8831,
									"end": 8832,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8823,
									"end": 8829,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8819,
									"end": 8833,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8815,
									"end": 8837,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8809,
									"end": 8813,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8802,
									"end": 8838,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8237,
									"end": 8848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8237,
									"end": 8848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8237,
									"end": 8848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8200,
									"end": 9087,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8200,
									"end": 9087,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8200,
									"end": 9087,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7790,
									"end": 9093,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7790,
									"end": 9093,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7790,
									"end": 9093,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7698,
									"end": 9093,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7698,
									"end": 9093,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7698,
									"end": 9093,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9099,
									"end": 9225,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9099,
									"end": 9225,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9136,
									"end": 9143,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9176,
									"end": 9218,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9169,
									"end": 9174,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9165,
									"end": 9219,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9154,
									"end": 9219,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9154,
									"end": 9219,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9099,
									"end": 9225,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9099,
									"end": 9225,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9099,
									"end": 9225,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9099,
									"end": 9225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9231,
									"end": 9327,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 9231,
									"end": 9327,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9268,
									"end": 9275,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9297,
									"end": 9321,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9315,
									"end": 9320,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9297,
									"end": 9321,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9297,
									"end": 9321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9297,
									"end": 9321,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9297,
									"end": 9321,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9286,
									"end": 9321,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9286,
									"end": 9321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9231,
									"end": 9327,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9231,
									"end": 9327,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9231,
									"end": 9327,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9231,
									"end": 9327,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9333,
									"end": 9451,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9333,
									"end": 9451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9420,
									"end": 9444,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9438,
									"end": 9443,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9420,
									"end": 9444,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 9420,
									"end": 9444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9420,
									"end": 9444,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9420,
									"end": 9444,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9415,
									"end": 9418,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9408,
									"end": 9445,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9333,
									"end": 9451,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9333,
									"end": 9451,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9333,
									"end": 9451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9457,
									"end": 9679,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 9457,
									"end": 9679,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9550,
									"end": 9554,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9588,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9577,
									"end": 9586,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9573,
									"end": 9591,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9565,
									"end": 9591,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9565,
									"end": 9591,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9601,
									"end": 9672,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9669,
									"end": 9670,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9658,
									"end": 9667,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9654,
									"end": 9671,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9645,
									"end": 9651,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9601,
									"end": 9672,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9601,
									"end": 9672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9601,
									"end": 9672,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9601,
									"end": 9672,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9457,
									"end": 9679,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9457,
									"end": 9679,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9457,
									"end": 9679,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9457,
									"end": 9679,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9457,
									"end": 9679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9685,
									"end": 9865,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 9685,
									"end": 9865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9733,
									"end": 9810,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9730,
									"end": 9731,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9723,
									"end": 9811,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9830,
									"end": 9834,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 9827,
									"end": 9828,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 9820,
									"end": 9835,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9854,
									"end": 9858,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9851,
									"end": 9852,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9844,
									"end": 9859,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9911,
									"end": 9914,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9930,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9948,
									"end": 9949,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9930,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 9930,
									"end": 9950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9930,
									"end": 9950,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9930,
									"end": 9950,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9925,
									"end": 9950,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9925,
									"end": 9950,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9964,
									"end": 9984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9982,
									"end": 9983,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9964,
									"end": 9984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 9964,
									"end": 9984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9964,
									"end": 9984,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9964,
									"end": 9984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 9984,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 9984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10007,
									"end": 10008,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10004,
									"end": 10005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10000,
									"end": 10009,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9993,
									"end": 10009,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9993,
									"end": 10009,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10028,
									"end": 10031,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10025,
									"end": 10026,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10022,
									"end": 10032,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10019,
									"end": 10055,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10019,
									"end": 10055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 10019,
									"end": 10055,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10035,
									"end": 10053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10035,
									"end": 10053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 10035,
									"end": 10053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10035,
									"end": 10053,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10035,
									"end": 10053,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10019,
									"end": 10055,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 10019,
									"end": 10055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9871,
									"end": 10062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10186,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 10068,
									"end": 10186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10155,
									"end": 10179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 10173,
									"end": 10178,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10155,
									"end": 10179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 10155,
									"end": 10179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10155,
									"end": 10179,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 10155,
									"end": 10179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10150,
									"end": 10153,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10143,
									"end": 10180,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10186,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10186,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10186,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10341,
									"end": 10345,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10379,
									"end": 10381,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10368,
									"end": 10377,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10364,
									"end": 10382,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10356,
									"end": 10382,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10356,
									"end": 10382,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10392,
									"end": 10463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10460,
									"end": 10461,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10449,
									"end": 10458,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10445,
									"end": 10462,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10436,
									"end": 10442,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10392,
									"end": 10463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 10392,
									"end": 10463,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10392,
									"end": 10463,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10392,
									"end": 10463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10473,
									"end": 10545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10541,
									"end": 10543,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10530,
									"end": 10539,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10526,
									"end": 10544,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10517,
									"end": 10523,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10473,
									"end": 10545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 10473,
									"end": 10545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10473,
									"end": 10545,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10473,
									"end": 10545,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10555,
									"end": 10627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10623,
									"end": 10625,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 10612,
									"end": 10621,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10608,
									"end": 10626,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10599,
									"end": 10605,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10555,
									"end": 10627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 10555,
									"end": 10627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10555,
									"end": 10627,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10555,
									"end": 10627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10192,
									"end": 10634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10733,
									"end": 10737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10771,
									"end": 10773,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10760,
									"end": 10769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10756,
									"end": 10774,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10748,
									"end": 10774,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10748,
									"end": 10774,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10784,
									"end": 10855,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10852,
									"end": 10853,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10841,
									"end": 10850,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10837,
									"end": 10854,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10828,
									"end": 10834,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10784,
									"end": 10855,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 10784,
									"end": 10855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10784,
									"end": 10855,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10784,
									"end": 10855,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10640,
									"end": 10862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 2893,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e422f4f1b7c161b2d3706c2d56f3caf8d169cb758df30f760ab18fb45524426d64736f6c63430008180033",
									".code": [
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "B4969B96"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "B4969B96"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "BED99850"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "A0712D68"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 245,
											"end": 2893,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2368,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2368,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2368,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1540,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1540,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1366,
											"end": 1457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1366,
											"end": 1457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1880,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1880,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1880,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1725,
											"end": 1841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1725,
											"end": 1841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 306,
											"end": 328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 306,
											"end": 328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2469,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 882,
											"end": 887,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 861,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 861,
											"end": 878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 861,
											"end": 867,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 861,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 861,
											"end": 878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 861,
											"end": 878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 861,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 861,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 861,
											"end": 878,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 861,
											"end": 878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 860,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 860,
											"end": 887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 860,
											"end": 887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 860,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 860,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 860,
											"end": 887,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 860,
											"end": 887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 860,
											"end": 897,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 857,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 857,
											"end": 957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 899,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 857,
											"end": 957,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 857,
											"end": 957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 972,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 972,
											"end": 989,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 972,
											"end": 978,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 972,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 972,
											"end": 989,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 972,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 972,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 972,
											"end": 989,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 972,
											"end": 989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 971,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1002,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1064,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 968,
											"end": 1064,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1004,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1064,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 968,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2527,
											"end": 2535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2519,
											"end": 2535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2524,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2519,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2519,
											"end": 2535,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2519,
											"end": 2535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2518,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2518,
											"end": 2544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2518,
											"end": 2544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2544,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2594,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2581,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2576,
											"end": 2594,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2594,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2576,
											"end": 2594,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2594,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2576,
											"end": 2594,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2594,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2594,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2625,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2625,
											"end": 2637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 2637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2625,
											"end": 2637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2664,
											"end": 2668,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2677,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2684,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2648,
											"end": 2685,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2648,
											"end": 2685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2712,
											"end": 2716,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 2732,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2696,
											"end": 2733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2696,
											"end": 2733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2760,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2764,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2857,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2746,
											"end": 2857,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2787,
											"end": 2791,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2802,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2781,
											"end": 2803,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2803,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2781,
											"end": 2803,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2832,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 2834,
											"end": 2844,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2823,
											"end": 2845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2746,
											"end": 2857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2867,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1604,
											"end": 1614,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1622,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1598,
											"end": 1623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1598,
											"end": 1623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1654,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 1656,
											"end": 1662,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1639,
											"end": 1663,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1663,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1430,
											"end": 1440,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1448,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1424,
											"end": 1429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1424,
											"end": 1449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1424,
											"end": 1449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1424,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 1978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 882,
											"end": 887,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 870,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 870,
											"end": 878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 861,
											"end": 878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 861,
											"end": 878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 861,
											"end": 867,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 861,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 861,
											"end": 878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 861,
											"end": 878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 861,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 861,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 861,
											"end": 878,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 861,
											"end": 878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 860,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 860,
											"end": 887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 860,
											"end": 887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 860,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 860,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 860,
											"end": 887,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 860,
											"end": 887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 860,
											"end": 897,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 857,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 857,
											"end": 957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 899,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 957,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 957,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 857,
											"end": 957,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 857,
											"end": 957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 981,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 981,
											"end": 989,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 972,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 972,
											"end": 989,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 972,
											"end": 978,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 972,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 972,
											"end": 989,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 972,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 972,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 972,
											"end": 989,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 972,
											"end": 989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 971,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1002,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1064,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 968,
											"end": 1064,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1004,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1064,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1064,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 968,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2021,
											"end": 2029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2013,
											"end": 2029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2018,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2013,
											"end": 2029,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2013,
											"end": 2029,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2029,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2013,
											"end": 2029,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2012,
											"end": 2038,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2012,
											"end": 2038,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2038,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2012,
											"end": 2038,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2038,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2070,
											"end": 2075,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2070,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2070,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2070,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2070,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2070,
											"end": 2088,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2070,
											"end": 2088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2070,
											"end": 2088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2088,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2125,
											"end": 2135,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2138,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2150,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2109,
											"end": 2151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2109,
											"end": 2151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2176,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2180,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2285,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2162,
											"end": 2285,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2203,
											"end": 2213,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2224,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2197,
											"end": 2225,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2197,
											"end": 2225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2260,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 2262,
											"end": 2272,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2245,
											"end": 2273,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2273,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2162,
											"end": 2285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2304,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2297,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 2316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 732,
											"end": 736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1388"
										},
										{
											"begin": 720,
											"end": 729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 720,
											"end": 736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 720,
											"end": 736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 720,
											"end": 736,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 716,
											"end": 778,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 716,
											"end": 778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 716,
											"end": 778,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 738,
											"end": 778,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 738,
											"end": 778,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 716,
											"end": 778,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 716,
											"end": 778,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1833,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1821,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1813,
											"end": 1821,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1833,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 306,
											"end": 328,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 306,
											"end": 328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5964,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5875,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5911,
											"end": 5918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 5944,
											"end": 5949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5929,
											"end": 5958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5929,
											"end": 5958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5970,
											"end": 6090,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5970,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6059,
											"end": 6064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6042,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6065,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6042,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6040,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 6022,
											"end": 6084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6078,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6082,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6084,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 6022,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5970,
											"end": 6090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5970,
											"end": 6090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6233,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 6096,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6186,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6186,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 6221,
											"end": 6226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6195,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6227,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 6195,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6233,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6566,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6239,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6297,
											"end": 6303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6348,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6334,
											"end": 6343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6332,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6321,
											"end": 6344,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6317,
											"end": 6349,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6314,
											"end": 6433,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6314,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 6314,
											"end": 6433,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 6352,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 6352,
											"end": 6431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6431,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 6352,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6314,
											"end": 6433,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 6314,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6497,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 6541,
											"end": 6548,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6530,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6517,
											"end": 6539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6497,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 6497,
											"end": 6549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6497,
											"end": 6549,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 6497,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6566,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6566,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6687,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 6572,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6657,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6657,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6657,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6657,
											"end": 6680,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 6657,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6820,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6825,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6835,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 6901,
											"end": 6902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6899,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6886,
											"end": 6903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6883,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6835,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 6835,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6835,
											"end": 6904,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 6835,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7391,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6917,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6993,
											"end": 6999,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7044,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7030,
											"end": 7039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7028,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7040,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7013,
											"end": 7045,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7129,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 7010,
											"end": 7129,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 7048,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7048,
											"end": 7127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7127,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 7048,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7129,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 7010,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7169,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7238,
											"end": 7245,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7229,
											"end": 7235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7227,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7193,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7193,
											"end": 7246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7193,
											"end": 7246,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7193,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7183,
											"end": 7246,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7183,
											"end": 7246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7139,
											"end": 7256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7297,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 7366,
											"end": 7373,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7357,
											"end": 7363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7346,
											"end": 7355,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7342,
											"end": 7364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7321,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7374,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 7321,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7391,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7391,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7577,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7397,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7445,
											"end": 7522,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7442,
											"end": 7443,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7523,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7546,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7539,
											"end": 7540,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7532,
											"end": 7547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7570,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7563,
											"end": 7564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7556,
											"end": 7571,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7903,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 7583,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7665,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7666,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7711,
											"end": 7712,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7705,
											"end": 7709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7713,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7750,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 7722,
											"end": 7803,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 7780,
											"end": 7786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7776,
											"end": 7793,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7803,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 7722,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7850,
											"end": 7852,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7848,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7839,
											"end": 7853,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7816,
											"end": 7854,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 7813,
											"end": 7897,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7869,
											"end": 7887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7897,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 7813,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7634,
											"end": 7903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7903,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7903,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7909,
											"end": 8089,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7909,
											"end": 8089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 8034,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7954,
											"end": 7955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7947,
											"end": 8035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8051,
											"end": 8052,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8044,
											"end": 8059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8082,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8068,
											"end": 8083,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8095,
											"end": 8505,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 8095,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8176,
											"end": 8177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8158,
											"end": 8178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8178,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8158,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8210,
											"end": 8211,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8192,
											"end": 8212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8212,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8192,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8212,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8247,
											"end": 8248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8240,
											"end": 8249,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 8287,
											"end": 8298,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8269,
											"end": 8299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 8269,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8450,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8432,
											"end": 8433,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8429,
											"end": 8451,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8409,
											"end": 8410,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 8411,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8465,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 8359,
											"end": 8498,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 8478,
											"end": 8496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8498,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 8359,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8143,
											"end": 8505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8095,
											"end": 8505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8095,
											"end": 8505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8095,
											"end": 8505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8095,
											"end": 8505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8095,
											"end": 8505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8691,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8511,
											"end": 8691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8559,
											"end": 8636,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8556,
											"end": 8557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8660,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8653,
											"end": 8654,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8646,
											"end": 8661,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8680,
											"end": 8684,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8677,
											"end": 8678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8685,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8882,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 8697,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 8772,
											"end": 8773,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8754,
											"end": 8774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 8774,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 8754,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8749,
											"end": 8774,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8749,
											"end": 8774,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8788,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 8806,
											"end": 8807,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8788,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8788,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8788,
											"end": 8808,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 8788,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8827,
											"end": 8828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8817,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 8817,
											"end": 8852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 8832,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8832,
											"end": 8850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8850,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 8832,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8817,
											"end": 8852,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 8817,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 8875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8867,
											"end": 8876,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8862,
											"end": 8876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8862,
											"end": 8876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8888,
											"end": 9123,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 8888,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9028,
											"end": 9062,
											"name": "PUSH",
											"source": 7,
											"value": "56616C756520646F6573206E6F7420636F76657220666565732E20456E746572"
										},
										{
											"begin": 9024,
											"end": 9025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9022,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9026,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9097,
											"end": 9115,
											"name": "PUSH",
											"source": 7,
											"value": "20612068696768657220616D6F756E7400000000000000000000000000000000"
										},
										{
											"begin": 9092,
											"end": 9094,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9073,
											"end": 9116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8888,
											"end": 9123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8888,
											"end": 9123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9495,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9129,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9271,
											"end": 9274,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 9356,
											"end": 9358,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 9351,
											"end": 9354,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9292,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 9292,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9292,
											"end": 9359,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 9292,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9285,
											"end": 9359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9285,
											"end": 9359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 9457,
											"end": 9460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 9368,
											"end": 9461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9461,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 9368,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9486,
											"end": 9488,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9481,
											"end": 9484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9477,
											"end": 9489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9920,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 9501,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9667,
											"end": 9671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9694,
											"end": 9703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9754,
											"end": 9763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9748,
											"end": 9752,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9744,
											"end": 9764,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9729,
											"end": 9738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9725,
											"end": 9742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9718,
											"end": 9765,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9782,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 9908,
											"end": 9912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9782,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9782,
											"end": 9913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9782,
											"end": 9913,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 9782,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9774,
											"end": 9913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9774,
											"end": 9913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9926,
											"end": 10163,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9926,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10066,
											"end": 10100,
											"name": "PUSH",
											"source": 7,
											"value": "56616C75652063616E6E6F7420636F76657220616E7920666565732E20456E74"
										},
										{
											"begin": 10062,
											"end": 10063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10054,
											"end": 10060,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10050,
											"end": 10064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10043,
											"end": 10101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10135,
											"end": 10155,
											"name": "PUSH",
											"source": 7,
											"value": "657220612068696768657220616D6F756E740000000000000000000000000000"
										},
										{
											"begin": 10130,
											"end": 10132,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10122,
											"end": 10128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10118,
											"end": 10133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10111,
											"end": 10156,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9926,
											"end": 10163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9926,
											"end": 10163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10169,
											"end": 10535,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10169,
											"end": 10535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10332,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 10396,
											"end": 10398,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 10391,
											"end": 10394,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 10332,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10399,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 10332,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10325,
											"end": 10399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10325,
											"end": 10399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10408,
											"end": 10501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 10497,
											"end": 10500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10408,
											"end": 10501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 10408,
											"end": 10501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10408,
											"end": 10501,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 10408,
											"end": 10501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10526,
											"end": 10528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10521,
											"end": 10524,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10517,
											"end": 10529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10510,
											"end": 10529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10510,
											"end": 10529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10169,
											"end": 10535,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10169,
											"end": 10535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10169,
											"end": 10535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10169,
											"end": 10535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10960,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 10541,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10707,
											"end": 10711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10745,
											"end": 10747,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10722,
											"end": 10748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10722,
											"end": 10748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10794,
											"end": 10803,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10788,
											"end": 10792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 10804,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10780,
											"end": 10781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10769,
											"end": 10778,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10765,
											"end": 10782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10805,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10822,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 10948,
											"end": 10952,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10822,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10822,
											"end": 10953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10822,
											"end": 10953,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 10822,
											"end": 10953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10814,
											"end": 10953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10814,
											"end": 10953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11160,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 10966,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11006,
											"end": 11010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11026,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 11044,
											"end": 11045,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11026,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 11026,
											"end": 11046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11026,
											"end": 11046,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 11026,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11060,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 11078,
											"end": 11079,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11060,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 11060,
											"end": 11080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11060,
											"end": 11080,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 11060,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11055,
											"end": 11080,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11055,
											"end": 11080,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11104,
											"end": 11105,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11101,
											"end": 11102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11097,
											"end": 11106,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11089,
											"end": 11106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11089,
											"end": 11106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11128,
											"end": 11129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11122,
											"end": 11126,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11119,
											"end": 11130,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11116,
											"end": 11153,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11116,
											"end": 11153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11116,
											"end": 11153,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 11133,
											"end": 11151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11116,
											"end": 11153,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11116,
											"end": 11153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11160,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11160,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11166,
											"end": 11346,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 11166,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11306,
											"end": 11338,
											"name": "PUSH",
											"source": 7,
											"value": "4275726E2072617465206D6173206265206C657373207468616E203530250000"
										},
										{
											"begin": 11302,
											"end": 11303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11283,
											"end": 11339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11166,
											"end": 11346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11166,
											"end": 11346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11718,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 11352,
											"end": 11718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11494,
											"end": 11497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11515,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11579,
											"end": 11581,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 11574,
											"end": 11577,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11515,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 11515,
											"end": 11582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11515,
											"end": 11582,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11515,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11508,
											"end": 11582,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11508,
											"end": 11582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11591,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 11680,
											"end": 11683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11591,
											"end": 11684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 11591,
											"end": 11684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11591,
											"end": 11684,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 11591,
											"end": 11684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11709,
											"end": 11711,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11704,
											"end": 11707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11700,
											"end": 11712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11693,
											"end": 11712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11693,
											"end": 11712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11718,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11718,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11724,
											"end": 12143,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 11724,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11928,
											"end": 11930,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11917,
											"end": 11926,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11913,
											"end": 11931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11905,
											"end": 11931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11905,
											"end": 11931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11977,
											"end": 11986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11971,
											"end": 11975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11967,
											"end": 11987,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11963,
											"end": 11964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11952,
											"end": 11961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11948,
											"end": 11965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11941,
											"end": 11988,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12005,
											"end": 12136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 12131,
											"end": 12135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12005,
											"end": 12136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 12005,
											"end": 12136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12005,
											"end": 12136,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 12005,
											"end": 12136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11724,
											"end": 12143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11724,
											"end": 12143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11724,
											"end": 12143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11724,
											"end": 12143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12591,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 12149,
											"end": 12591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12298,
											"end": 12302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12336,
											"end": 12338,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12325,
											"end": 12334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12321,
											"end": 12339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12313,
											"end": 12339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12313,
											"end": 12339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12349,
											"end": 12420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 12417,
											"end": 12418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12406,
											"end": 12415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12402,
											"end": 12419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12393,
											"end": 12399,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12349,
											"end": 12420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 12349,
											"end": 12420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12349,
											"end": 12420,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 12349,
											"end": 12420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 12498,
											"end": 12500,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12487,
											"end": 12496,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12483,
											"end": 12501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12480,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 12430,
											"end": 12502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12502,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 12430,
											"end": 12502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12512,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 12580,
											"end": 12582,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12569,
											"end": 12578,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12556,
											"end": 12562,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12512,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 12512,
											"end": 12584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12512,
											"end": 12584,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 12512,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12591,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12591,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12149,
											"end": 12591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12597,
											"end": 12788,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 12597,
											"end": 12788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12637,
											"end": 12640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12656,
											"end": 12676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 12674,
											"end": 12675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12656,
											"end": 12676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 12656,
											"end": 12676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12656,
											"end": 12676,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 12656,
											"end": 12676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12651,
											"end": 12676,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12651,
											"end": 12676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12690,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 12708,
											"end": 12709,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12690,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 12690,
											"end": 12710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12690,
											"end": 12710,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 12690,
											"end": 12710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12685,
											"end": 12710,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12685,
											"end": 12710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12733,
											"end": 12734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12730,
											"end": 12731,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12726,
											"end": 12735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12719,
											"end": 12735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12719,
											"end": 12735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12754,
											"end": 12757,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12751,
											"end": 12752,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12758,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12745,
											"end": 12781,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12745,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 12745,
											"end": 12781,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 12761,
											"end": 12779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12745,
											"end": 12781,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 12745,
											"end": 12781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12597,
											"end": 12788,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12597,
											"end": 12788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12597,
											"end": 12788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12597,
											"end": 12788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12597,
											"end": 12788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"clickcoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnRate()": "bed99850",
							"decimals()": "313ce567",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBurnRate(uint16)": "b4969b96",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_burnRate\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removeFrom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_burnRate\",\"type\":\"uint16\"}],\"name\":\"setBurnRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"clickcoin.sol\":\"ClickCoin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"clickcoin.sol\":{\"keccak256\":\"0x4574debe95e0f7e02c148270f222f097ec54b8ad08811c6177d2a8185f0f0db8\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://add4747338ecd246e8aa4e5bf8ee00460c1b8d3cc396a10eb403fd5afe3142b5\",\"dweb:/ipfs/QmSwP61XeMZYGLqhjiRwuyMedX7yyjVHXTEdvV9uL4rxxc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "clickcoin.sol:ClickCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "clickcoin.sol:ClickCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "clickcoin.sol:ClickCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "clickcoin.sol:ClickCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "clickcoin.sol:ClickCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "clickcoin.sol:ClickCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 943,
								"contract": "clickcoin.sol:ClickCoin",
								"label": "burnRate",
								"offset": 20,
								"slot": "5",
								"type": "t_uint16"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"clickcoin.sol": {
				"ast": {
					"absolutePath": "clickcoin.sol",
					"exportedSymbols": {
						"ClickCoin": [
							1205
						],
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1206,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "74:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1206,
							"sourceUnit": 800,
							"src": "115:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1206,
							"sourceUnit": 148,
							"src": "172:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"267:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "267:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "267:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"273:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "273:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "273:7:6"
								}
							],
							"canonicalName": "ClickCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1205,
							"linearizedBaseContracts": [
								1205,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "ClickCoin",
							"nameLocation": "254:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bed99850",
									"id": 943,
									"mutability": "mutable",
									"name": "burnRate",
									"nameLocation": "320:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1205,
									"src": "306:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 942,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "306:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "525:119:6",
										"statements": [
											{
												"expression": {
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 960,
														"name": "burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "536:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 961,
														"name": "_burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "547:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "536:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "536:20:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 965,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "573:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "577:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "573:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "584:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "594:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "584:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 964,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "567:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "567:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "567:32:6"
											}
										]
									},
									"id": 973,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 952,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "491:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 953,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "497:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 954,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 951,
												"name": "ERC20",
												"nameLocations": [
													"485:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "485:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "485:20:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 956,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "514:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "518:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "514:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 958,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 955,
												"name": "Ownable",
												"nameLocations": [
													"506:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "506:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "506:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "437:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "423:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "423:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "458:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "444:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "444:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "_burnRate",
												"nameLocation": "474:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "467:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 948,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "467:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:62:6"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:0:6"
									},
									"scope": 1205,
									"src": "411:233:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "705:93:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "_burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "720:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "35303030",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "732:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000_by_1",
															"typeString": "int_const 5000"
														},
														"value": "5000"
													},
													"src": "720:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "716:62:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "4275726e2072617465206d6173206265206c657373207468616e20353025",
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "745:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a",
																	"typeString": "literal_string \"Burn rate mas be less than 50%\""
																},
																"value": "Burn rate mas be less than 50%"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_9d8615fb26402c19664f0314df0eafbafe44df38789a819451b7259062a5e63a",
																	"typeString": "literal_string \"Burn rate mas be less than 50%\""
																}
															],
															"id": 980,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "738:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "738:40:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 983,
													"nodeType": "ExpressionStatement",
													"src": "738:40:6"
												}
											},
											{
												"id": 985,
												"nodeType": "PlaceholderStatement",
												"src": "789:1:6"
											}
										]
									},
									"id": 987,
									"name": "maxBurn",
									"nameLocation": "680:7:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "_burnRate",
												"nameLocation": "695:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "688:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 974,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "688:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:18:6"
									},
									"src": "671:127:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "846:240:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 991,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "861:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 992,
																		"name": "burnRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "870:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "861:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 994,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "860:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "882:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "860:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 997,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "891:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "860:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "857:100:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "56616c756520646f6573206e6f7420636f76657220666565732e20456e74657220612068696768657220616d6f756e74",
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "906:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80",
																	"typeString": "literal_string \"Value does not cover fees. Enter a higher amount\""
																},
																"value": "Value does not cover fees. Enter a higher amount"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_7e6895fd6aabcbba9dd1e3761c68523c8dae85aa48eea74199779fa1f6437d80",
																	"typeString": "literal_string \"Value does not cover fees. Enter a higher amount\""
																}
															],
															"id": 999,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "899:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "899:58:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1002,
													"nodeType": "ExpressionStatement",
													"src": "899:58:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1004,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "972:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1005,
																		"name": "burnRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "981:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "972:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1007,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "971:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "993:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "971:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "31",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1001:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "971:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "968:96:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "56616c75652063616e6e6f7420636f76657220616e7920666565732e20456e74657220612068696768657220616d6f756e74",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1011:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca",
																	"typeString": "literal_string \"Value cannot cover any fees. Enter a higher amount\""
																},
																"value": "Value cannot cover any fees. Enter a higher amount"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_abf0c6382f4c8b7d822f4194d00b989d9bc8f1113ea5b06014ecb86dc5d469ca",
																	"typeString": "literal_string \"Value cannot cover any fees. Enter a higher amount\""
																}
															],
															"id": 1012,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "1004:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1004:60:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1015,
													"nodeType": "ExpressionStatement",
													"src": "1004:60:6"
												}
											},
											{
												"id": 1017,
												"nodeType": "PlaceholderStatement",
												"src": "1077:1:6"
											}
										]
									},
									"id": 1019,
									"name": "minimumTransfer",
									"nameLocation": "815:15:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "839:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "831:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:16:6"
									},
									"src": "806:280:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885",
									"id": 1025,
									"name": "Mint",
									"nameLocation": "1156:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"indexed": true,
												"mutability": "mutable",
												"name": "addTo",
												"nameLocation": "1177:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1161:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1192:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1184:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:39:6"
									},
									"src": "1150:50:6"
								},
								{
									"anonymous": false,
									"eventSelector": "cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5",
									"id": 1031,
									"name": "Burn",
									"nameLocation": "1212:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"indexed": true,
												"mutability": "mutable",
												"name": "removeFrom",
												"nameLocation": "1233:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1217:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1253:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1245:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:44:6"
									},
									"src": "1206:55:6"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "1413:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1039,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1430:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1434:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1430:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "1442:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1038,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1424:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1424:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "1424:25:6"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1036,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1035,
												"name": "onlyOwner",
												"nameLocations": [
													"1403:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1403:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1403:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "1375:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1388:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1380:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1379:16:6"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1413:0:6"
									},
									"scope": 1205,
									"src": "1366:91:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "1587:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1053,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1604:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1608:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1604:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "1616:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1052,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1598:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "1598:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1059,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1644:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1644:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "1656:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1058,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1639:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1639:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "EmitStatement",
												"src": "1634:29:6"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1049,
												"name": "onlyOwner",
												"nameLocations": [
													"1577:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1577:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1577:9:6"
										}
									],
									"name": "burn",
									"nameLocation": "1549:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1562:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1554:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1553:16:6"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1587:0:6"
									},
									"scope": 1205,
									"src": "1540:131:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "1802:39:6",
										"statements": [
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1075,
														"name": "burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "1813:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1076,
														"name": "_burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "1824:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1813:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1813:20:6"
											}
										]
									},
									"functionSelector": "b4969b96",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1070,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1069,
												"name": "onlyOwner",
												"nameLocations": [
													"1773:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1773:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1773:9:6"
										},
										{
											"arguments": [
												{
													"id": 1072,
													"name": "_burnRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1067,
													"src": "1791:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												}
											],
											"id": 1073,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "maxBurn",
												"nameLocations": [
													"1783:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 987,
												"src": "1783:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1783:18:6"
										}
									],
									"name": "setBurnRate",
									"nameLocation": "1734:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_burnRate",
												"nameLocation": "1753:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1746:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1066,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1746:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1745:18:6"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1802:0:6"
									},
									"scope": 1205,
									"src": "1725:116:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "1980:336:6",
										"statements": [
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "1999:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "1991:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1093,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1991:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1101,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1095,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "2013:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1096,
																	"name": "burnRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "2021:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "2013:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1098,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2012:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2033:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2012:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1991:47:6"
											},
											{
												"assignments": [
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "sendAmount",
														"nameLocation": "2057:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "2049:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2049:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1104,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "2070:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1105,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "2078:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2070:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2049:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1111,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2125:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2129:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2125:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "2136:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1114,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "2140:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1108,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2109:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ClickCoin_$1205_$",
																"typeString": "type(contract super ClickCoin)"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2115:9:6",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 529,
														"src": "2109:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2109:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "2109:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1117,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "2166:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2179:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2166:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "2162:123:6",
												"trueBody": {
													"id": 1132,
													"nodeType": "Block",
													"src": "2182:103:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1121,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2203:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2207:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2203:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1123,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "2214:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1120,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "2197:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2197:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "2197:28:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1127,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2250:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2254:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2250:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1129,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "2262:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1126,
																	"name": "Burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "2245:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2245:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1131,
															"nodeType": "EmitStatement",
															"src": "2240:33:6"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2304:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1092,
												"id": 1135,
												"nodeType": "Return",
												"src": "2297:11:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1088,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1084,
													"src": "1958:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1087,
												"name": "minimumTransfer",
												"nameLocations": [
													"1942:15:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1019,
												"src": "1942:15:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1942:22:6"
										}
									],
									"name": "transfer",
									"nameLocation": "1889:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1086,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1932:8:6"
									},
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1906:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1898:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1918:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1910:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1910:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:27:6"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1974:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1974:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:6:6"
									},
									"scope": 1205,
									"src": "1880:436:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "2486:400:6",
										"statements": [
											{
												"assignments": [
													1153
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "2505:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "2497:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2497:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1154,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "2519:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1155,
																	"name": "burnRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "2527:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "2519:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1157,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2518:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2539:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2518:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:47:6"
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "sendAmount",
														"nameLocation": "2563:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "2555:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2555:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1166,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1163,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "2576:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1164,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "2584:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2576:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2555:39:6"
											},
											{
												"assignments": [
													1168
												],
												"declarations": [
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "2615:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "2607:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1167,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2607:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1169,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2625:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2625:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2607:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1173,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "2664:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1174,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "2670:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "2679:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1172,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2648:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2648:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "2648:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "2712:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2718:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "2722:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1178,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2696:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ClickCoin_$1205_$",
																"typeString": "type(contract super ClickCoin)"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2702:9:6",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 529,
														"src": "2696:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2696:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "2696:37:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1186,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "2750:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2763:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2750:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1200,
												"nodeType": "IfStatement",
												"src": "2746:111:6",
												"trueBody": {
													"id": 1199,
													"nodeType": "Block",
													"src": "2766:91:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1190,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "2787:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1191,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "2792:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1189,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "2781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2781:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1193,
															"nodeType": "ExpressionStatement",
															"src": "2781:22:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1195,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "2828:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1196,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "2834:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1194,
																	"name": "Burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "2823:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2823:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1198,
															"nodeType": "EmitStatement",
															"src": "2818:27:6"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2874:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1151,
												"id": 1202,
												"nodeType": "Return",
												"src": "2867:11:6"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1147,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1143,
													"src": "2464:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1148,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1146,
												"name": "minimumTransfer",
												"nameLocations": [
													"2448:15:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1019,
												"src": "2448:15:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2448:22:6"
										}
									],
									"name": "transferFrom",
									"nameLocation": "2377:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2438:8:6"
									},
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2398:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2390:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2412:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2404:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2424:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2416:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2389:41:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2480:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2480:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:6:6"
									},
									"scope": 1205,
									"src": "2368:518:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1206,
							"src": "245:2648:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1025,
								1031
							]
						}
					],
					"src": "74:2819:6"
				},
				"id": 6
			}
		}
	}
}